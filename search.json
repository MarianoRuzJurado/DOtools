[{"path":"https://marianoruzjurado.github.io/DOtools/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Mariano Ruz Jurado Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/articles/DOtools.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Quality control of sc/snRNA-seq","text":"DOtools R package distributed part Bioconductor project. install package, start R enter: Alternatively, can instead install latest development version GitHub :","code":"install.packages(\"BiocManager\") # WORK iN PROGRESS BiocManager::install(\"DOtools\") BiocManager::install(\"MarianoRuzJurado/DOtools\")"},{"path":"https://marianoruzjurado.github.io/DOtools/articles/DOtools.html","id":"usage","dir":"Articles","previous_headings":"","what":"Usage","title":"Quality control of sc/snRNA-seq","text":"DOtools contains different functions processing visualizing gene expression scRNA/snRNA experiments: vignette showcase use functions public available data.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/articles/DOtools.html","id":"libraries","dir":"Articles","previous_headings":"Usage","what":"Libraries","title":"Quality control of sc/snRNA-seq","text":"DOtools can imported :","code":"library(DOtools)  # Additional packages library(SummarizedExperiment) library(scran) library(scater) library(plyr) library(dplyr) library(tibble) library(enrichR) library(kableExtra) library(Seurat)"},{"path":"https://marianoruzjurado.github.io/DOtools/articles/DOtools.html","id":"ambient-removal","dir":"Articles","previous_headings":"Usage","what":"Ambient removal","title":"Quality control of sc/snRNA-seq","text":"Despite advances optimizing standardizing droplet-based single-cell omics protocols like single-cell single-nucleus RNA sequencing (sc/snRNA-seq), experiments still suffer systematic biases background noise. particular, ambient RNA snRNA-seq can lead overestimation expression levels certain genes. Computational tools cellbender developed address biases correcting ambient RNA contamination. integrated wrapper function run CellBender within DOtools package. current implementation supports processing samples generated CellRanger. running analysis, several files saved output_folder, including summary report check issues CellBender execution, individual log files sample, commands_Cellbender.txt file exact command used. corrected .h5 files can used alternatively cellranger output downstream analysis.","code":"base <- DOtools:::.example_10x() dir.create(file.path(base, \"/cellbender\"))  raw_files <- list.files(base,     pattern = \"raw_feature_bc_matrix\\\\.h5$\",     recursive = TRUE,     full.names = TRUE )  DO.CellBender(     cellranger_path = base,     output_path = file.path(base, \"/cellbender\"),     samplenames = c(\"disease\"),     cuda = TRUE,     BarcodeRanking = FALSE,     cpu_threads = 48,     epochs = 150 )"},{"path":"https://marianoruzjurado.github.io/DOtools/articles/DOtools.html","id":"quality-control","dir":"Articles","previous_headings":"Usage","what":"Quality control","title":"Quality control of sc/snRNA-seq","text":"DOtools .Import() function provides streamlined pipeline performing quality control single-cell single-nucleus RNA sequencing (sc/snRNA-seq) data. takes input list .h5 files generated e.g. CellRanger STARsolo, along sample names metadata. preprocessing, low-quality genes cells filtered based specified thresholds. Genes expressed fewer five cells removed. Cells filtered according mitochondrial gene content, number detected genes, total UMI counts, potential doublets. function supports doublet detection using scDblFinder. Thresholds mitochondrial content (e.g., 5% scRNA-seq 3% snRNA-seq), gene counts, UMI counts can defined tailor filtering. filtering, samples merged one SingleCellExperiment Seurat object, followed log-normalisation, scaling, identification highly variable genes. help assess effect quality control, violin plots showing distributions key metrics filtering automatically generated saved alongside input files. summary removed genes cells also recorded. show quality control works, going use public dataset 10X human blood healthy donors malignant tumor: can now check quality introducing filterings: : observed cells removed due increased mitochondrial content. Depending experimental design, mitochondrial content threshold can adjusted retain higher number cells, minimizing cell loss relevance. DOtools package provides slim object data set. Please feel free, use one created .Import prettier results slim downed version. can observe similar samples running correlation analysis.","code":"base <- DOtools:::.example_10x()  paths <- c(     file.path(base, \"healthy/outs/filtered_feature_bc_matrix.h5\"),     file.path(base, \"disease/outs/filtered_feature_bc_matrix.h5\") )  SCE_obj <- DO.Import(     pathways = paths,     ids = c(\"healthy-1\", \"disease-1\"),     DeleteDoublets = TRUE,     cut_mt = .05,     min_counts = 500,     min_genes = 300,     high_quantile = .95,     Seurat = FALSE # Set to TRUE for Seurat object ) prefilterplots <- system.file(     \"figures\", \"prefilterplots-1.png\",     package = \"DOtools\" )  pQC1 <- magick::image_read(prefilterplots) plot(pQC1) postfilterplots <- system.file(     \"figures\",     \"postfilterplots-1.png\",     package = \"DOtools\" )  pQC2 <- magick::image_read(postfilterplots) plot(pQC2) # Making sure we have a save folder base <- tempfile(\"my_tempdir_\") dir.create(base)  SCE_obj <- readRDS(     system.file(\"extdata\",         \"sce_data.rds\",         package = \"DOtools\"     ) )  DO.Correlation(SCE_obj) #> Warning: `aes_string()` was deprecated in ggplot2 3.0.0. #> ℹ Please use tidy evaluation idioms with `aes()`. #> ℹ See also `vignette(\"ggplot2-in-packages\")` for more information. #> ℹ The deprecated feature was likely used in the ggcorrplot package. #>   Please report the issue at <https://github.com/kassambara/ggcorrplot/issues>. #> This warning is displayed once every 8 hours. #> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was #> generated. #> Scale for fill is already present. #> Adding another scale for fill, which will replace the existing scale."},{"path":"https://marianoruzjurado.github.io/DOtools/articles/DOtools.html","id":"data-integration","dir":"Articles","previous_headings":"Usage","what":"Data integration","title":"Quality control of sc/snRNA-seq","text":"quality control preferred integration method can chosen, support every integration method within Seurat’s IntegrateLayers function. Additionally, implemented new wrapper function scVI integration scvi-tools package. integration completes, run Leiden algorithm find clusters generate UMAP embeddings. integration finished, corrected expression matrices can found saved SCE object can used cluster calculations UMAP projections. case, continue CCA Integration method.","code":"SCE_obj <- DO.Integration(     sce_object = SCE_obj,     split_key = \"orig.ident\",     HVG = TRUE,     scale = TRUE,     pca = TRUE,     integration_method = \"CCAIntegration\" ) #> 2025-10-02 11:06:21 - Splitting object for integration with CCAIntegration by orig.ident #> 2025-10-02 11:06:21 - Calculating highly variable genes #> 2025-10-02 11:06:22 - Scaling object #> 2025-10-02 11:06:23 - Running pca, saved in key: PCA #> Splitting 'counts', 'data' layers. Not splitting 'scale.data'. If you would like to split other layers, set in `layers` argument. #> 2025-10-02 11:06:24 - Running integration, saved in key: INTEGRATED.CCA #> 2025-10-02 11:06:28 - Running Nearest-neighbor graph construction #> 2025-10-02 11:06:29 - Running cluster detection #> 2025-10-02 11:06:30 - Creating UMAP # (Optional) Integration with scVI-Model SCE_obj <- DO.scVI(     sce_object = SCE_obj,     batch_key = \"orig.ident\",     layer_counts = \"counts\",     layer_logcounts = \"logcounts\" )   SNN_Graph <- scran::buildSNNGraph(SCE_obj,     use.dimred = \"scVI\" )  clust_SCVI <- igraph::cluster_louvain(SNN_Graph,     resolution = 0.3 )  SCE_obj$leiden0.3 <- factor(igraph::membership(clust_SCVI)) SCE_obj <- scater::runUMAP(SCE_obj, dimred = \"scVI\", name = \"UMAP\") DO.UMAP(SCE_obj,     group.by = \"leiden0.3\" ) DO.UMAP(SCE_obj,     group.by = \"condition\",     legend.position = \"right\",     label = FALSE )"},{"path":"https://marianoruzjurado.github.io/DOtools/articles/DOtools.html","id":"semi-automatic-annotation-with-celltypist","dir":"Articles","previous_headings":"Usage","what":"Semi-automatic annotation with Celltypist","title":"Quality control of sc/snRNA-seq","text":"Next , implemented wrapper around semi-automatic annotation tool celltypist. annotate defined clusters based Adult_COVID19_PBMC.pkl model.  semi-automatic annotation good estimate cell types object. always manually validate findings model. can manually define set marker genes cell population check preeminent genes per cluster using scran’s findMarkers function. Marker genes can also visualised using .UMAP function.  manual markers immune cells show agreement annotation therefore can continue minor adjustments.","code":"SCE_obj <- DO.CellTypist(SCE_obj,     modelName = \"Healthy_COVID19_PBMC.pkl\",     runCelltypistUpdate = TRUE,     over_clustering = \"leiden0.3\" ) #> 2025-10-02 11:06:39 - Running celltypist using model: Healthy_COVID19_PBMC.pkl #> 2025-10-02 11:06:39 - Saving celltypist results to temporary folder: /tmp/RtmphRlyEH/file9020b165ee8 #> 2025-10-02 11:07:48 - Creating probality plot DO.UMAP(SCE_obj, group.by = \"autoAnnot\", legend.position = \"right\") markers_list <- scran::findMarkers(     SCE_obj,     test.type = \"t\",     groups = SingleCellExperiment::colData(SCE_obj)$autoAnnot,     direction = \"up\",     lfc = 0.25,     pval.type = \"any\" )  # pick top 5 per cluster, naming adjustments annotation_Markers <- lapply(names(markers_list), function(cluster) {     df <- as.data.frame(markers_list[[cluster]])     df$gene <- rownames(df)     df$cluster <- cluster     df %>%         rename(             avg_log2FC = summary.logFC,             p_val      = p.value,             p_val_adj  = FDR         ) %>%         dplyr::select(gene, cluster, avg_log2FC, p_val, p_val_adj) }) %>%     bind_rows()  # or with seurat if preferred Seu_obj <- as.Seurat(SCE_obj) annotation_Markers <- FindAllMarkers(     object = Seu_obj,     assay = \"RNA\",     group.by = \"autoAnnot\",     min.pct = 0.25,     logfc.threshold = 0.25 ) #> Calculating cluster CD83_CD14_mono #> For a (much!) faster implementation of the Wilcoxon Rank Sum Test, #> (default method for FindMarkers) please install the presto package #> -------------------------------------------- #> install.packages('devtools') #> devtools::install_github('immunogenomics/presto') #> -------------------------------------------- #> After installation of presto, Seurat will automatically use the more  #> efficient implementation (no further action necessary). #> This message will be shown once per session #> Calculating cluster CD4.Naive #> Calculating cluster CD8.Naive #> Calculating cluster NK_16hi #> Calculating cluster CD8.EM #> Calculating cluster B_naive #> Calculating cluster pDC  annotation_Markers <- annotation_Markers %>%     arrange(desc(avg_log2FC)) %>%     distinct(gene, .keep_all = TRUE) %>%     group_by(cluster) %>%     slice_head(n = 5)  p1 <- DO.Dotplot(     sce_object = SCE_obj,     Feature = annotation_Markers,     group.by.x = \"leiden0.3\",     plot.margin = c(1, 1, 1, 1),     annotation_x = TRUE,     point_stroke = 0.1,     annotation_x_rev = TRUE,     textSize = 14,     hjust = 0.5,     vjust = 0,     textRot = 0,     segWidth = 0.3,     lwd = 3 ) #> Scale for size is already present. #> Adding another scale for size, which will replace the existing scale.  # manual set of markers annotation_Markers <- data.frame(     cluster = c(         \"ImmuneCells\",         rep(\"B_cells\", 3),         rep(\"T_cells\", 3),         rep(\"NK\", 2),         rep(\"Myeloid\", 3),         rep(\"pDC\", 3)     ),     genes = c(         \"PTPRC\", \"CD79A\", \"BANK1\", \"MS4A1\",         \"CD3E\", \"CD4\", \"IL7R\", \"NKG7\",         \"KLRD1\", \"CD68\", \"CD14\", \"ITGAM\",         \"LILRA4\", \"CLEC4C\", \"LRRC26\"     ) )  p2 <- DO.Dotplot(     sce_object = SCE_obj,     Feature = annotation_Markers,     group.by.x = \"leiden0.3\",     plot.margin = c(1, 1, 1, 1),     annotation_x = TRUE,     point_stroke = 0.1,     annotation_x_rev = TRUE,     textSize = 14,     hjust = 0.5,     vjust = 0,     textRot = 0,     segWidth = 0.3,     lwd = 3 ) #> Scale for size is already present. #> Adding another scale for size, which will replace the existing scale.  # Visualise marker expression in UMAP DO.UMAP(SCE_obj,     FeaturePlot = TRUE,     features = \"NKG7\",     group.by = \"leiden0.3\",     legend.position = \"right\" ) #> Warning: The `slot` argument of `FetchData()` is deprecated as of SeuratObject 5.0.0. #> ℹ Please use the `layer` argument instead. #> ℹ The deprecated feature was likely used in the Seurat package. #>   Please report the issue at <https://github.com/satijalab/seurat/issues>. #> This warning is displayed once every 8 hours. #> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was #> generated. SCE_obj$annotation <- plyr::revalue(SCE_obj$leiden0.3, c(     `1` = \"T_cells\",     `2` = \"T_cells\",     `3` = \"NK\",     `4` = \"B_cells\",     `5` = \"Monocytes\",     `6` = \"NK\",     `7` = \"T_cells\",     `8` = \"pDC\" ))  DO.UMAP(SCE_obj, group.by = \"annotation\", legend.position = \"right\")"},{"path":"https://marianoruzjurado.github.io/DOtools/articles/DOtools.html","id":"cell-composition","dir":"Articles","previous_headings":"Usage","what":"Cell composition","title":"Quality control of sc/snRNA-seq","text":"identification celltype populations, can also evaluate significant changes populations healthy diseased condition using wrapper function around python tool scanpro.","code":"DO.CellComposition(SCE_obj,     assay_normalized = \"RNA\",     cluster_column = \"annotation\",     sample_column = \"orig.ident\",     condition_column = \"condition\",     transform_method = \"arcsin\",     n_reps = 3 ) #> 2025-10-02 11:08:00 - Bootstrapping method activated with 3 simulated replicates! #> . #> Using orig.ident, condition as id variables #> Using condition as id variables"},{"path":"https://marianoruzjurado.github.io/DOtools/articles/DOtools.html","id":"reclustering-of-cell-populations","dir":"Articles","previous_headings":"Usage","what":"Reclustering of cell populations","title":"Quality control of sc/snRNA-seq","text":"Subpopulations can tricky find, therefore always good practice perform reclustering given cell populations, interested specific set cells population. example T cells. identify subpopulations markers defining .  Now identified marker genes describing different T cell populations. can re-annotate based expression profile new prediciton Celltypist. , can easily transfer labels subset original object.","code":"SCE_obj <- DO.FullRecluster(SCE_obj, over_clustering = \"annotation\") #> Computing nearest neighbor graph #> Computing SNN #> 1 singletons identified. 2 final clusters. #> 1 singletons identified. 3 final clusters. #>  DO.UMAP(SCE_obj, group.by = \"annotation_recluster\") T_cells <- DO.Subset(SCE_obj,     ident = \"annotation_recluster\",     ident_name = grep(\"T_cells\",         unique(SCE_obj$annotation_recluster),         value = TRUE     ) ) #> 2025-10-02 11:08:22 - Specified 'ident_name': expecting a categorical variable.  T_cells <- DO.CellTypist(T_cells,     modelName = \"Healthy_COVID19_PBMC.pkl\",     runCelltypistUpdate = FALSE,     over_clustering = \"annotation_recluster\",     SeuV5 = FALSE ) #> 2025-10-02 11:08:22 - Running celltypist using model: Healthy_COVID19_PBMC.pkl #> 2025-10-02 11:08:22 - Saving celltypist results to temporary folder: /tmp/RtmphRlyEH/file90204afdf49 #> 2025-10-02 11:08:37 - Creating probality plot  T_cells$annotation <- plyr::revalue(     T_cells$annotation_recluster,     c(         `T_cells_1` = \"CD4_T_cells\",         `T_cells_2` = \"CD4_T_cells\",         `T_cells_3` = \"CD4_T_cells\",         `T_cells_4` = \"CD8_T_cells\"     ) ) SCE_obj <- DO.TransferLabel(SCE_obj,     Subset_obj = T_cells,     annotation_column = \"annotation\",     subset_annotation = \"annotation\" )  DO.UMAP(SCE_obj, group.by = \"annotation\", legend.position = \"right\")"},{"path":"https://marianoruzjurado.github.io/DOtools/articles/DOtools.html","id":"gene-ontology-analysis","dir":"Articles","previous_headings":"Usage","what":"Gene ontology analysis","title":"Quality control of sc/snRNA-seq","text":"explore biological processes enriched specific cell type across conditions, can perform gene ontology analysis. ’ll start identifying differentially expressed genes, focusing T cells. differential gene expression analysis, introduced new function, combines DGE analysis using single cell approach, e.g. popular Wilcoxon test pseudobulk testing using DESeq2. can observe results combined dataframe. inspecting DGE analysis, continue .enrichR function, uses enrichR API run gene set enrichment. separates DE genes - -regulated sets runs analysis group independently. top significant results can visualized bar plot.","code":"# this data set contains only one sample per condition # we introduce replicates for showing the pseudo bulk approach set.seed(123) SCE_obj$orig.ident2 <- sample(rep(c(\"A\", \"B\", \"C\", \"D\", \"E\", \"F\"),     length.out = ncol(SCE_obj) )) CD4T_cells <- DO.Subset(SCE_obj,     ident = \"annotation\",     ident_name = \"CD4_T_cells\" ) #> 2025-10-02 11:08:39 - Specified 'ident_name': expecting a categorical variable.  DGE_result <- DO.MultiDGE(CD4T_cells,     sample_col = \"orig.ident2\",     method_sc = \"wilcox\",     ident_ctrl = \"healthy\" ) #> Names of identity class contain underscores ('_'), replacing with dashes ('-') #> This message is displayed once every 8 hours. #> Centering and scaling data matrix #> 2025-10-02 11:08:39 - Corrected annotation names in pseudo-bulk object by replacing '-' with '_'. #> 2025-10-02 11:08:39 - Starting DGE single cell method analysis #> 2025-10-02 11:08:39 - Comparing disease with healthy in: CD4_T_cells #> 2025-10-02 11:08:41 - Finished DGE single cell method analysis #> 2025-10-02 11:08:41 - Starting DGE pseudo bulk method analysis #> 2025-10-02 11:08:41 - Comparing disease with healthy in: CD4_T_cells #> converting counts to integer mode #> gene-wise dispersion estimates #> mean-dispersion relationship #> final dispersion estimates #> 2025-10-02 11:08:43 - Finished DGE pseudo bulk method analysis  head(DGE_result, 10) %>%     kable(format = \"html\", table.attr = \"style='width:100%;'\") %>%     kable_styling(bootstrap_options = c(         \"striped\",         \"hover\",         \"condensed\",         \"responsive\"     )) result_GO <- DO.enrichR(     df_DGE = DGE_result,     gene_column = \"gene\",     pval_column = \"p_val_adj_SC_wilcox\",     log2fc_column = \"avg_log2FC_SC_wilcox\",     pval_cutoff = 0.05,     log2fc_cutoff = 0.25,     path = NULL,     filename = \"\",     species = \"Human\",     go_catgs = \"GO_Biological_Process_2023\" ) #> Connection changed to https://maayanlab.cloud/Enrichr/ #> Connection is Live! #> Uploading data to Enrichr... Done. #>   Querying GO_Biological_Process_2023... Done. #> Parsing results... Done. #> Uploading data to Enrichr... Done. #>   Querying GO_Biological_Process_2023... Done. #> Parsing results... Done.  head(result_GO, 5) %>%     kable(format = \"html\", table.attr = \"style='width:100%;'\") %>%     kable_styling(bootstrap_options = c(         \"striped\",         \"hover\",         \"condensed\",         \"responsive\"     )) result_GO_sig <- result_GO[result_GO$Adjusted.P.value < 0.05, ] result_GO_sig$celltype <- \"CD4T_cells\"  DO.SplitBarGSEA(     df_GSEA = result_GO_sig,     term_col = \"Term\",     col_split = \"Combined.Score\",     cond_col = \"State\",     pos_cond = \"enriched\",     showP = FALSE,     path = paste0(base, \"/\") ) GSEA_plot <- list.files(     path = base,     pattern = \"SplitBar.*\\\\.svg$\",     full.names = TRUE,     recursive = TRUE ) plot(magick::image_read_svg(GSEA_plot))"},{"path":"https://marianoruzjurado.github.io/DOtools/articles/DOtools.html","id":"candidate-gene-visualisation","dir":"Articles","previous_headings":"Usage","what":"Candidate gene visualisation","title":"Quality control of sc/snRNA-seq","text":"performing DGE GO analyses, discovering whether specific genes regulated particular disease state /cell type common step. address , implemented advanced methods functions provide summarised results incorporate statistical testing answer questions efficiently. .Dotplot function covers expression three variables time along statistical testing. example, can visualise expression gene across cell types conditions:  .Heatmap function shows expression multiple genes publish ready way, including statistical testing:  can visualize average expression gene cell type + condition can plot continuous metadata information across conditions violinplots, barplots boxplots. Additionally, can test significance.","code":"DO.Dotplot(     sce_object = SCE_obj,     group.by.x = \"condition\",     group.by.y = \"annotation\",     Feature = \"NKG7\",     stats_y = TRUE ) #> Calculating cluster B_cells #> Calculating cluster CD4_T_cells #> Calculating cluster Monocytes #> Calculating cluster NK #> Calculating cluster pDC #> Calculating cluster T_cells_5 #> Calculating cluster B_cells #> Calculating cluster CD4_T_cells #> Calculating cluster CD8_T_cells #> Calculating cluster Monocytes #> Calculating cluster NK #> Calculating cluster pDC #> Scale for size is already present. #> Adding another scale for size, which will replace the existing scale. path_file <- tempfile(\"dotools_plots_\") dir.create(path_file, recursive = TRUE, showWarnings = FALSE)  DO.Heatmap(SCE_obj,     group_by = \"leiden0.3\",     features = rownames(SCE_obj)[1:10],     xticks_rotation = 45,     path = path_file,     stats_x_size = 20,     showP = FALSE ) #> Calculating cluster 1 #> Calculating cluster 2 #> Calculating cluster 3 #> Calculating cluster 4 #> Calculating cluster 5 #> Calculating cluster 6 #> Calculating cluster 7 #> Calculating cluster 8  Heatmap_plot <- list.files(     path = path_file,     pattern = \"Heatmap*\\\\.svg$\",     full.names = TRUE,     recursive = TRUE )  plot(magick::image_read_svg(Heatmap_plot)) SCE_obj_sub <- DO.Subset(SCE_obj,     ident = \"annotation\",     ident_name = c(\"NK\", \"CD4_T_cells\", \"B_cells\") ) #> 2025-10-02 11:09:17 - Specified 'ident_name': expecting a categorical variable.  DO.VlnPlot(SCE_obj_sub,     Feature = \"NKG7\",     group.by = \"condition\",     group.by.2 = \"annotation\",     ctrl.condition = \"healthy\" ) #> SeuV5 TRUE, if object Seuratv4 or below change SeuV5 to FALSE #> This message is displayed once per session. #> Using group, orig.ident, annotation as id variables #> 2025-10-02 11:09:17 - ListTest empty, comparing every sample with each other SCE_obj_NK <- DO.Subset(SCE_obj,     ident = \"annotation\",     ident_name = \"NK\" ) #> 2025-10-02 11:09:18 - Specified 'ident_name': expecting a categorical variable.  DO.BarplotWilcox(SCE_obj_NK,     group.by = \"condition\",     ctrl.condition = \"healthy\",     Feature = \"NKG7\",     x_label_rotation = 0 ) #> Using condition, orig.ident as id variables #> 2025-10-02 11:09:19 - ListTest empty, comparing every sample with each other set.seed(123) SCE_obj$rdm_sample <- sample(rep(c(\"A\", \"B\", \"C\"),     length.out = ncol(SCE_obj) )) DO.BoxPlot(SCE_obj,     group.by = \"rdm_sample\",     ctrl.condition = \"A\",     Feature = \"nCount_RNA\",     step_mod = 50,     stat_pos_mod = 1.05,     plot_sample = FALSE ) #> Using group, cluster as id variables #> 2025-10-02 11:09:19 - ListTest empty, comparing every sample with each other #> Scale for fill is already present. #> Adding another scale for fill, which will replace the existing scale."},{"path":"https://marianoruzjurado.github.io/DOtools/articles/DOtools.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"Quality control of sc/snRNA-seq","text":"","code":"#> ─ Session info ─────────────────────────────────────────────────────────────────────────────────────────────────────── #>  setting  value #>  version  R version 4.5.1 (2025-06-13) #>  os       Ubuntu 24.04.3 LTS #>  system   x86_64, linux-gnu #>  ui       X11 #>  language en #>  collate  C.UTF-8 #>  ctype    C.UTF-8 #>  tz       UTC #>  date     2025-10-02 #>  pandoc   3.1.11 @ /opt/hostedtoolcache/pandoc/3.1.11/x64/ (via rmarkdown) #>  quarto   NA #>  #> ─ Packages ─────────────────────────────────────────────────────────────────────────────────────────────────────────── #>  package              * version  date (UTC) lib source #>  abind                  1.4-8    2024-09-12 [1] RSPM #>  assertthat             0.2.1    2019-03-21 [1] RSPM #>  backports              1.5.0    2024-05-23 [1] RSPM #>  basilisk               1.20.0   2025-04-15 [1] Bioconduc~ #>  basilisk.utils         1.20.0   2025-04-15 [1] Bioconduc~ #>  beachmat               2.24.0   2025-04-15 [1] Bioconduc~ #>  beeswarm               0.4.0    2021-06-01 [1] RSPM #>  Biobase              * 2.68.0   2025-04-15 [1] Bioconduc~ #>  BiocGenerics         * 0.54.0   2025-04-15 [1] Bioconduc~ #>  BiocManager            1.30.26  2025-06-05 [1] RSPM #>  BiocNeighbors          2.2.0    2025-04-15 [1] Bioconduc~ #>  BiocParallel           1.42.2   2025-09-14 [1] Bioconduc~ #>  BiocSingular           1.24.0   2025-04-15 [1] Bioconduc~ #>  BiocStyle            * 2.36.0   2025-04-15 [1] Bioconduc~ #>  bluster                1.18.0   2025-04-15 [1] Bioconduc~ #>  bookdown               0.44     2025-08-21 [1] RSPM #>  broom                  1.0.10   2025-09-13 [1] RSPM #>  bslib                  0.9.0    2025-01-30 [1] RSPM #>  cachem                 1.1.0    2024-05-16 [1] RSPM #>  car                    3.1-3    2024-09-27 [1] RSPM #>  carData                3.0-5    2022-01-06 [1] RSPM #>  cli                    3.6.5    2025-04-23 [1] RSPM #>  cluster                2.1.8.1  2025-03-12 [3] CRAN (R 4.5.1) #>  codetools              0.2-20   2024-03-31 [3] CRAN (R 4.5.1) #>  colorspace             2.1-2    2025-09-22 [1] RSPM #>  cowplot                1.2.0    2025-07-07 [1] RSPM #>  crayon                 1.5.3    2024-06-20 [1] RSPM #>  curl                   7.0.0    2025-08-19 [1] RSPM #>  data.table             1.17.8   2025-07-10 [1] RSPM #>  DelayedArray           0.34.1   2025-04-17 [1] Bioconduc~ #>  DelayedMatrixStats     1.30.0   2025-04-15 [1] Bioconduc~ #>  deldir                 2.0-4    2024-02-28 [1] RSPM #>  desc                   1.4.3    2023-12-10 [1] RSPM #>  DESeq2                 1.48.2   2025-08-27 [1] Bioconduc~ #>  digest                 0.6.37   2024-08-19 [1] RSPM #>  dir.expiry             1.16.0   2025-04-15 [1] Bioconduc~ #>  dotCall64              1.2      2024-10-04 [1] RSPM #>  DOtools              * 0.99.7   2025-10-02 [1] local #>  dplyr                * 1.1.4    2023-11-17 [1] RSPM #>  dqrng                  0.4.1    2024-05-28 [1] RSPM #>  DropletUtils           1.28.1   2025-07-06 [1] Bioconduc~ #>  edgeR                  4.6.3    2025-07-09 [1] Bioconduc~ #>  enrichR              * 3.4      2025-02-02 [1] RSPM #>  evaluate               1.0.5    2025-08-27 [1] RSPM #>  farver                 2.1.2    2024-05-13 [1] RSPM #>  fastDummies            1.7.5    2025-01-20 [1] RSPM #>  fastmap                1.2.0    2024-05-15 [1] RSPM #>  filelock               1.0.3    2023-12-11 [1] RSPM #>  fitdistrplus           1.2-4    2025-07-03 [1] RSPM #>  forcats                1.0.1    2025-09-25 [1] RSPM #>  Formula                1.2-5    2023-02-24 [1] RSPM #>  fs                     1.6.6    2025-04-12 [1] RSPM #>  future               * 1.67.0   2025-07-29 [1] RSPM #>  future.apply           1.20.0   2025-06-06 [1] RSPM #>  generics             * 0.1.4    2025-05-09 [1] RSPM #>  GenomeInfoDb         * 1.44.3   2025-09-21 [1] Bioconduc~ #>  GenomeInfoDbData       1.2.14   2025-10-02 [1] Bioconductor #>  GenomicRanges        * 1.60.0   2025-04-15 [1] Bioconduc~ #>  ggalluvial             0.12.5   2023-02-22 [1] RSPM #>  ggbeeswarm             0.7.2    2023-04-29 [1] RSPM #>  ggcorrplot             0.1.4.1  2023-09-05 [1] RSPM #>  ggiraph                0.9.1    2025-09-16 [1] RSPM #>  ggiraphExtra           0.3.0    2020-10-06 [1] RSPM #>  ggplot2              * 4.0.0    2025-09-11 [1] RSPM #>  ggpubr                 0.6.1    2025-06-27 [1] RSPM #>  ggrepel                0.9.6    2024-09-07 [1] RSPM #>  ggridges               0.5.7    2025-08-27 [1] RSPM #>  ggsignif               0.6.4    2022-10-13 [1] RSPM #>  ggtext                 0.1.2    2022-09-16 [1] RSPM #>  globals                0.18.0   2025-05-08 [1] RSPM #>  glue                   1.8.0    2024-09-30 [1] RSPM #>  goftest                1.2-3    2021-10-07 [1] RSPM #>  gridExtra              2.3      2017-09-09 [1] RSPM #>  gridtext               0.1.5    2022-09-16 [1] RSPM #>  gtable                 0.3.6    2024-10-25 [1] RSPM #>  h5mread                1.0.1    2025-05-21 [1] Bioconduc~ #>  HDF5Array              1.36.0   2025-04-15 [1] Bioconduc~ #>  hms                    1.1.3    2023-03-21 [1] RSPM #>  htmltools              0.5.8.1  2024-04-04 [1] RSPM #>  htmlwidgets            1.6.4    2023-12-06 [1] RSPM #>  httpuv                 1.6.16   2025-04-16 [1] RSPM #>  httr                   1.4.7    2023-08-15 [1] RSPM #>  ica                    1.0-3    2022-07-08 [1] RSPM #>  igraph                 2.1.4    2025-01-23 [1] RSPM #>  insight                1.4.2    2025-09-02 [1] RSPM #>  IRanges              * 2.42.0   2025-04-15 [1] Bioconduc~ #>  irlba                  2.3.5.1  2022-10-03 [1] RSPM #>  jquerylib              0.1.4    2021-04-26 [1] RSPM #>  jsonlite               2.0.0    2025-03-27 [1] RSPM #>  kableExtra           * 1.4.0    2024-01-24 [1] RSPM #>  KernSmooth             2.23-26  2025-01-01 [3] CRAN (R 4.5.1) #>  knitr                  1.50     2025-03-16 [1] RSPM #>  labeling               0.4.3    2023-08-29 [1] RSPM #>  later                  1.4.4    2025-08-27 [1] RSPM #>  lattice                0.22-7   2025-04-02 [3] CRAN (R 4.5.1) #>  lazyeval               0.2.2    2019-03-15 [1] RSPM #>  leidenbase             0.1.35   2025-04-02 [1] RSPM #>  lifecycle              1.0.4    2023-11-07 [1] RSPM #>  limma                  3.64.3   2025-08-03 [1] Bioconduc~ #>  listenv                0.9.1    2024-01-29 [1] RSPM #>  lmtest                 0.9-40   2022-03-21 [1] RSPM #>  locfit                 1.5-9.12 2025-03-05 [1] RSPM #>  magick                 2.9.0    2025-09-08 [1] RSPM #>  magrittr               2.0.4    2025-09-12 [1] RSPM #>  MASS                   7.3-65   2025-02-28 [3] CRAN (R 4.5.1) #>  Matrix                 1.7-3    2025-03-11 [3] CRAN (R 4.5.1) #>  MatrixGenerics       * 1.20.0   2025-04-15 [1] Bioconduc~ #>  matrixStats          * 1.5.0    2025-01-07 [1] RSPM #>  metapod                1.16.0   2025-04-15 [1] Bioconduc~ #>  mgcv                   1.9-3    2025-04-04 [3] CRAN (R 4.5.1) #>  mime                   0.13     2025-03-17 [1] RSPM #>  miniUI                 0.1.2    2025-04-17 [1] RSPM #>  mycor                  0.1.1    2018-04-10 [1] RSPM #>  nlme                   3.1-168  2025-03-31 [3] CRAN (R 4.5.1) #>  openxlsx               4.2.8    2025-01-25 [1] RSPM #>  parallelly             1.45.1   2025-07-24 [1] RSPM #>  patchwork              1.3.2    2025-08-25 [1] RSPM #>  pbapply                1.7-4    2025-07-20 [1] RSPM #>  pillar                 1.11.1   2025-09-17 [1] RSPM #>  pkgconfig              2.0.3    2019-09-22 [1] RSPM #>  pkgdown                2.1.3    2025-05-25 [1] RSPM #>  plotly                 4.11.0   2025-06-19 [1] RSPM #>  plyr                 * 1.8.9    2023-10-02 [1] RSPM #>  png                    0.1-8    2022-11-29 [1] RSPM #>  polyclip               1.10-7   2024-07-23 [1] RSPM #>  ppcor                  1.1      2015-12-03 [1] RSPM #>  prettyunits            1.2.0    2023-09-24 [1] RSPM #>  progress               1.2.3    2023-12-06 [1] RSPM #>  progressr              0.16.0   2025-09-19 [1] RSPM #>  promises               1.3.3    2025-05-29 [1] RSPM #>  purrr                  1.1.0    2025-07-10 [1] RSPM #>  R.methodsS3            1.8.2    2022-06-13 [1] RSPM #>  R.oo                   1.27.1   2025-05-02 [1] RSPM #>  R.utils                2.13.0   2025-02-24 [1] RSPM #>  R6                     2.6.1    2025-02-15 [1] RSPM #>  ragg                   1.5.0    2025-09-02 [1] RSPM #>  RANN                   2.6.2    2024-08-25 [1] RSPM #>  RColorBrewer           1.1-3    2022-04-03 [1] RSPM #>  Rcpp                   1.1.0    2025-07-02 [1] RSPM #>  RcppAnnoy              0.0.22   2024-01-23 [1] RSPM #>  RcppHNSW               0.6.0    2024-02-04 [1] RSPM #>  reshape2               1.4.4    2020-04-09 [1] RSPM #>  reticulate             1.43.0   2025-07-21 [1] RSPM #>  rhdf5                  2.52.1   2025-06-08 [1] Bioconduc~ #>  rhdf5filters           1.20.0   2025-04-15 [1] Bioconduc~ #>  Rhdf5lib               1.30.0   2025-04-15 [1] Bioconduc~ #>  rjson                  0.2.23   2024-09-16 [1] RSPM #>  rlang                  1.1.6    2025-04-11 [1] RSPM #>  rmarkdown              2.30     2025-09-28 [1] RSPM #>  ROCR                   1.0-11   2020-05-02 [1] RSPM #>  RSpectra               0.16-2   2024-07-18 [1] RSPM #>  rstatix                0.7.2    2023-02-01 [1] RSPM #>  rstudioapi             0.17.1   2024-10-22 [1] RSPM #>  rsvd                   1.0.5    2021-04-16 [1] RSPM #>  rsvg                   2.7.0    2025-09-08 [1] RSPM #>  Rtsne                  0.17     2023-12-07 [1] RSPM #>  S4Arrays               1.8.1    2025-06-01 [1] Bioconduc~ #>  S4Vectors            * 0.46.0   2025-04-15 [1] Bioconduc~ #>  S7                     0.2.0    2024-11-07 [1] RSPM #>  sass                   0.4.10   2025-04-11 [1] RSPM #>  ScaledMatrix           1.16.0   2025-04-15 [1] Bioconduc~ #>  scales                 1.4.0    2025-04-24 [1] RSPM #>  scater               * 1.36.0   2025-04-15 [1] Bioconduc~ #>  scattermore            1.2      2023-06-12 [1] RSPM #>  SCpubr                 3.0.0    2025-08-20 [1] RSPM #>  scran                * 1.36.0   2025-04-15 [1] Bioconduc~ #>  sctransform            0.4.2    2025-04-30 [1] RSPM #>  scuttle              * 1.18.0   2025-04-15 [1] Bioconduc~ #>  sessioninfo            1.2.3    2025-02-05 [1] RSPM #>  Seurat               * 5.3.0    2025-04-23 [1] RSPM #>  SeuratObject         * 5.2.0    2025-08-27 [1] RSPM #>  shiny                  1.11.1   2025-07-03 [1] RSPM #>  SingleCellExperiment * 1.30.1   2025-05-07 [1] Bioconduc~ #>  sjlabelled             1.2.0    2022-04-10 [1] RSPM #>  sjmisc                 2.8.11   2025-07-30 [1] RSPM #>  sp                   * 2.2-0    2025-02-01 [1] RSPM #>  spam                   2.11-1   2025-01-20 [1] RSPM #>  SparseArray            1.8.1    2025-07-23 [1] Bioconduc~ #>  sparseMatrixStats      1.20.0   2025-04-15 [1] Bioconduc~ #>  spatstat.data          3.1-8    2025-08-18 [1] RSPM #>  spatstat.explore       3.5-3    2025-09-22 [1] RSPM #>  spatstat.geom          3.6-0    2025-09-20 [1] RSPM #>  spatstat.random        3.4-2    2025-09-21 [1] RSPM #>  spatstat.sparse        3.1-0    2024-06-21 [1] RSPM #>  spatstat.univar        3.1-4    2025-07-13 [1] RSPM #>  spatstat.utils         3.2-0    2025-09-20 [1] RSPM #>  statmod                1.5.0    2023-01-06 [1] RSPM #>  stringi                1.8.7    2025-03-27 [1] RSPM #>  stringr                1.5.2    2025-09-08 [1] RSPM #>  SummarizedExperiment * 1.38.1   2025-04-30 [1] Bioconduc~ #>  survival               3.8-3    2024-12-17 [3] CRAN (R 4.5.1) #>  svglite                2.2.1    2025-05-12 [1] RSPM #>  systemfonts            1.3.0    2025-09-30 [1] RSPM #>  tensor                 1.5.1    2025-06-17 [1] RSPM #>  textshaping            1.0.3    2025-09-02 [1] RSPM #>  tibble               * 3.3.0    2025-06-08 [1] RSPM #>  tidyr                  1.3.1    2024-01-24 [1] RSPM #>  tidyselect             1.2.1    2024-03-11 [1] RSPM #>  tidyverse              2.0.0    2023-02-22 [1] RSPM #>  UCSC.utils             1.4.0    2025-04-15 [1] Bioconduc~ #>  uuid                   1.2-1    2024-07-29 [1] RSPM #>  uwot                   0.2.3    2025-02-24 [1] RSPM #>  vctrs                  0.6.5    2023-12-01 [1] RSPM #>  vipor                  0.4.7    2023-12-18 [1] RSPM #>  viridis                0.6.5    2024-01-29 [1] RSPM #>  viridisLite            0.4.2    2023-05-02 [1] RSPM #>  withr                  3.0.2    2024-10-28 [1] RSPM #>  WriteXLS               6.8.0    2025-05-22 [1] RSPM #>  xfun                   0.53     2025-08-19 [1] RSPM #>  xml2                   1.4.0    2025-08-20 [1] RSPM #>  xtable                 1.8-4    2019-04-21 [1] RSPM #>  XVector                0.48.0   2025-04-15 [1] Bioconduc~ #>  yaml                   2.3.10   2024-07-26 [1] RSPM #>  zellkonverter          1.18.0   2025-04-15 [1] Bioconduc~ #>  zip                    2.3.3    2025-05-13 [1] RSPM #>  zoo                    1.8-14   2025-04-10 [1] RSPM #>  #>  [1] /home/runner/work/_temp/Library #>  [2] /opt/R/4.5.1/lib/R/site-library #>  [3] /opt/R/4.5.1/lib/R/library #>  * ── Packages attached to the search path. #>  #> ─ Python configuration ─────────────────────────────────────────────────────────────────────────────────────────────── #>  python:         /home/runner/.cache/R/basilisk/1.20.0/zellkonverter/1.18.0/zellkonverterAnnDataEnv-0.11.4/bin/python #>  libpython:      /home/runner/.cache/R/basilisk/1.20.0/zellkonverter/1.18.0/zellkonverterAnnDataEnv-0.11.4/lib/libpython3.13.so #>  pythonhome:     /home/runner/.cache/R/basilisk/1.20.0/zellkonverter/1.18.0/zellkonverterAnnDataEnv-0.11.4:/home/runner/.cache/R/basilisk/1.20.0/zellkonverter/1.18.0/zellkonverterAnnDataEnv-0.11.4 #>  version:        3.13.2 | packaged by conda-forge | (main, Feb 17 2025, 14:10:22) [GCC 13.3.0] #>  numpy:          /home/runner/.cache/R/basilisk/1.20.0/zellkonverter/1.18.0/zellkonverterAnnDataEnv-0.11.4/lib/python3.13/site-packages/numpy #>  numpy_version:  2.2.4 #>   #>  NOTE: Python version was forced by use_python() function #>  #> ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────"},{"path":"https://marianoruzjurado.github.io/DOtools/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Mariano Ruz Jurado. Author, maintainer. David Rodriguez Morales. Author. David John. Author. DFG SFB 1366, Project B04. Funder. DFG SFB 1531, Project 456687919. Funder.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ruz Jurado M, Rodriguez Morales D, John D (2025). DOtools: Convenient functions streamline single cell data analysis workflow. R package version 0.99.7, https://marianoruzjurado.github.io/DOtools/.","code":"@Manual{,   title = {DOtools: Convenient functions to streamline your single cell data analysis workflow},   author = {Mariano {Ruz Jurado} and David {Rodriguez Morales} and David John},   year = {2025},   note = {R package version 0.99.7},   url = {https://marianoruzjurado.github.io/DOtools/}, }"},{"path":[]},{"path":"https://marianoruzjurado.github.io/DOtools/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Convenient functions to streamline your single cell data analysis workflow","text":"DOtools user-friendly R package designed streamline common workflows single-cell RNA sequencing (scRNA-seq) data analysis using Seurat ecosystem third-party tools scVI, CellTypist, CellBender. provides high-level wrappers visualisation utilities help efficiently preprocess, analyze, interpret single-cell data.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/index.html","id":"id_-installation-","dir":"","previous_headings":"","what":"Installation","title":"Convenient functions to streamline your single cell data analysis workflow","text":"DOtools currently available github. install package, start R run: highly recommend conda installed python environments. functions package depend Python packages scripts. functions use basilisk create isolated environments, built using conda. result, working conda installation required.","code":"install.packages(\"BiocManager\") BiocManager::install(\"DOtools\")"},{"path":"https://marianoruzjurado.github.io/DOtools/index.html","id":"id_-python-package-","dir":"","previous_headings":"","what":"Python package","title":"Convenient functions to streamline your single cell data analysis workflow","text":"prefer python R data analysis, also provide python version DOtools package. Please refer python version : DOtools_py","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/index.html","id":"id_-contribution-guidelines-","dir":"","previous_headings":"","what":"Contribution Guidelines","title":"Convenient functions to streamline your single cell data analysis workflow","text":"Raising issue Github repository might fastest way submitting suggestions bugs. Alternatively can write email: ruzjurado@med.uni-frankfurt.de","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/index.html","id":"id_-citation-","dir":"","previous_headings":"","what":"Citation","title":"Convenient functions to streamline your single cell data analysis workflow","text":"tba","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.BarplotClustert.html","id":null,"dir":"Reference","previous_headings":"","what":"SEM Graph with t test on cluster level — DO.BarplotClustert","title":"SEM Graph with t test on cluster level — DO.BarplotClustert","text":"Perform SEM-based graphs t-test cluster level SCE objects. Calculates mean expression values SEM selected features visualizes . Performs pairwise t-tests comparing conditions, optional custom control condition clustering. Optionally returns summary data frame.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.BarplotClustert.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SEM Graph with t test on cluster level — DO.BarplotClustert","text":"","code":"DO.BarplotClustert(   sce_object,   Feature,   ListTest = NULL,   returnValues = FALSE,   ctrl.condition = NULL,   group.by = \"condition\",   returnPlot = TRUE,   bar_colours = NULL,   stat_pos_mod = 1.15,   step_mod = 0.2,   x_label_rotation = 45,   y_limits = NULL,   log1p_nUMI = TRUE )"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.BarplotClustert.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SEM Graph with t test on cluster level — DO.BarplotClustert","text":"sce_object Combined SCE object Seurat Feature gene name ListTest List conditions t-test performed, NULL always provided CTRL returnValues return df.melt.sum data frame containing means SEM set group ctrl.condition set ctrl condition, relevant running empty comparison List group.select seurat object slot conditions can found, default conditon returnPlot TRUE returns ggplot bar_colours colour vector stat_pos_mod Defines distance graphs statistic step_mod Defines distance statistics bracket x_label_rotation Rotation x-labels y_limits set limits y-axis log1p_nUMI nUMIs log1p transformed","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.BarplotClustert.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SEM Graph with t test on cluster level — DO.BarplotClustert","text":"ggplot dataframe","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.BarplotClustert.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"SEM Graph with t test on cluster level — DO.BarplotClustert","text":"Mariano Ruz Jurado","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.BarplotClustert.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SEM Graph with t test on cluster level — DO.BarplotClustert","text":"","code":"sce_data <-     readRDS(system.file(\"extdata\", \"sce_data.rds\", package = \"DOtools\"))  set.seed(123) sce_data$orig.ident <-     sample(rep(c(\"A\", \"B\", \"C\"), length.out = ncol(sce_data)))  ListTest <- list() ListTest[[1]] <- c(\"healthy\", \"disease\")   DO.BarplotClustert(     sce_object = sce_data,     Feature = \"NKG7\",     ListTest = ListTest,     ctrl.condition = \"healthy\",     group.by = \"condition\" ) #> Warning: `PackageCheck()` was deprecated in SeuratObject 5.0.0. #> ℹ Please use `rlang::check_installed()` instead. #> ℹ The deprecated feature was likely used in the Seurat package. #>   Please report the issue at <https://github.com/satijalab/seurat/issues>. #> Warning: The `slot` argument of `SetAssayData()` is deprecated as of SeuratObject 5.0.0. #> ℹ Please use the `layer` argument instead. #> ℹ The deprecated feature was likely used in the Seurat package. #>   Please report the issue at <https://github.com/satijalab/seurat/issues>. #> Using condition, orig.ident as id variables"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.BarplotWilcox.html","id":null,"dir":"Reference","previous_headings":"","what":"SEM Graph with wilcox test on single cell level — DO.BarplotWilcox","title":"SEM Graph with wilcox test on single cell level — DO.BarplotWilcox","text":"Perform SEM-based graphs Wilcox test single-cell level Seurat SCE objects. Calculates mean expression values SEM selected feature, visualizes . Performs pairwise Wilcox tests comparing conditions, optional custom control condition clustering. Optionally returns summary data frame, statistical test results, generated plot.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.BarplotWilcox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SEM Graph with wilcox test on single cell level — DO.BarplotWilcox","text":"","code":"DO.BarplotWilcox(   sce_object,   Feature,   ListTest = NULL,   returnValues = FALSE,   ctrl.condition = NULL,   group.by = \"condition\",   wilcox_test = TRUE,   bar_colours = NULL,   stat_pos_mod = 1.15,   step_mod = 0.2,   x_label_rotation = 45,   plotPvalue = FALSE,   y_limits = NULL,   log1p_nUMI = TRUE )"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.BarplotWilcox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SEM Graph with wilcox test on single cell level — DO.BarplotWilcox","text":"sce_object combined SCE object Seurat Feature name feature/gene ListTest List conditions wilcoxon test performed, NULL always CTRL group everything returnValues return data frames needed plot, containing df.melt, df.melt.sum, df.melt.orig wilcoxstats ctrl.condition set ctrl condition, relevant running empty comparison List group.select seurat object slot conditions can found, default conditon wilcox_test perform wilcox test. boolean default TRUE bar_colours colour vector stat_pos_mod Defines distance graphs statistic step_mod Defines distance statistics bracket x_label_rotation Rotation x-labels plotPvalue plot non adjusted p-value without correcting multiple tests y_limits set limits y-axis log1p_nUMI nUMIs log1p transformed","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.BarplotWilcox.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SEM Graph with wilcox test on single cell level — DO.BarplotWilcox","text":"ggplot list plot data frame","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.BarplotWilcox.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"SEM Graph with wilcox test on single cell level — DO.BarplotWilcox","text":"Mariano Ruz Jurado","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.BarplotWilcox.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SEM Graph with wilcox test on single cell level — DO.BarplotWilcox","text":"","code":"sce_data <-     readRDS(system.file(\"extdata\", \"sce_data.rds\", package = \"DOtools\"))  ListTest <- list() ListTest[[1]] <- c(\"healthy\", \"disease\")  DO.BarplotWilcox(     sce_object = sce_data,     Feature = \"NKG7\",     ListTest = ListTest,     ctrl.condition = \"healthy\",     group.by = \"condition\" ) #> Using condition, orig.ident as id variables"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.BoxPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Box Graph with wilcox test on single cell level — DO.BoxPlot","title":"Box Graph with wilcox test on single cell level — DO.BoxPlot","text":"Creates box plot using pseudo-bulk approach performs Wilcoxon test single-cell level. Allows customization outlier removal, statistical labels, color schemes. Supports comparison conditions optional second grouping. Useful visualizing gene expression statistical differences.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.BoxPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Box Graph with wilcox test on single cell level — DO.BoxPlot","text":"","code":"DO.BoxPlot(   sce_object,   Feature,   sample.column = \"orig.ident\",   ListTest = NULL,   group.by = \"condition\",   group.by.2 = NULL,   ctrl.condition = NULL,   outlier_removal = TRUE,   plot_sample = TRUE,   vector_colors = c(\"#1f77b4\", \"#ea7e1eff\", \"royalblue4\", \"tomato2\", \"darkgoldenrod\",     \"palegreen4\", \"maroon\", \"thistle3\"),   wilcox_test = TRUE,   stat_pos_mod = 1.15,   step_mod = 0,   hjust.wilcox = 0.5,   vjust.wilcox = 0.25,   size.wilcox = 3.33,   hjust.wilcox.2 = 0.5,   vjust.wilcox.2 = 0,   sign_bar = 0.8,   orderAxis = NULL )"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.BoxPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Box Graph with wilcox test on single cell level — DO.BoxPlot","text":"sce_object SCE object Seurat Feature name feature/gene sample.column meta data column containing sample IDs ListTest List conditions wilcox performed, NULL always CTRL group everything group.group name look meta data group..2 second group name look meta data ctrl.condition select condition compare outlier_removal Outlier calculation plot_sample Plot individual sample dot graph vector_colors get colours plot wilcox_test want wilcoxon performed, boolean default TRUE stat_pos_mod modificator p-value plotted increase higher step_mod value defining space one test next one hjust.wilcox value adjusting height text vjust.wilcox value vertical text size.wilcox value size text statistical test hjust.wilcox.2 value adjusting height text, group..2 specified vjust.wilcox.2 value vertical text, group..2 specified sign_bar adjusts sign_bar group..2 specified orderAxis vector xaxis sorting, alphabetically default","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.BoxPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Box Graph with wilcox test on single cell level — DO.BoxPlot","text":"ggplot","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.BoxPlot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Box Graph with wilcox test on single cell level — DO.BoxPlot","text":"Mariano Ruz Jurado","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.BoxPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Box Graph with wilcox test on single cell level — DO.BoxPlot","text":"","code":"sce_data <-     readRDS(system.file(\"extdata\", \"sce_data.rds\", package = \"DOtools\"))  set.seed(123) sce_data$orig.ident <-     sample(rep(c(\"A\", \"B\", \"C\"), length.out = ncol(sce_data)))  ListTest <- list() ListTest[[1]] <- c(\"healthy\", \"disease\")  DO.BoxPlot(     sce_object = sce_data,     Feature = \"NKG7\",     sample.column = \"orig.ident\",     ListTest = ListTest,     group.by = \"condition\",     ctrl.condition = \"healthy\", ) #> Using group, cluster as id variables #> Scale for fill is already present. #> Adding another scale for fill, which will replace the existing scale."},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.CellBender.html","id":null,"dir":"Reference","previous_headings":"","what":"DO.CellBender — DO.CellBender","title":"DO.CellBender — DO.CellBender","text":"function wraps system call bash script running CellBender CellRanger outputs. ensures required inputs available optionally installs CellBender conda env.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.CellBender.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DO.CellBender — DO.CellBender","text":"","code":"DO.CellBender(   cellranger_path,   output_path,   samplenames = NULL,   cuda = TRUE,   cpu_threads = 15,   epochs = 150,   lr = 1e-05,   estimator_multiple_cpu = FALSE,   log = TRUE,   conda_path = NULL,   BarcodeRanking = TRUE,   bash_script = system.file(\"bash\", \"_run_CellBender.sh\", package = \"DOtools\") )"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.CellBender.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DO.CellBender — DO.CellBender","text":"cellranger_path Path folder CellRanger outputs. output_path Output directory CellBender results. samplenames Optional vector sample names. NULL, autodetect folders cellranger_path. cuda Logical, whether use GPU (CUDA). cpu_threads Number CPU threads use. epochs Number training epochs. lr Learning rate. estimator_multiple_cpu Use estimator multiple CPU threads. log Whether enable logging. conda_path Optional path conda environment. BarcodeRanking Optional Calculation estimated cells samples DropletUtils implementation bash_script Path bash script runs CellBender.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.CellBender.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DO.CellBender — DO.CellBender","text":"None","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.CellBender.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DO.CellBender — DO.CellBender","text":"","code":"if (FALSE) { # \\dontrun{ # Define paths cellranger_path <- \"/mnt/data/cellranger_outputs\" output_path <- \"/mnt/data/cellbender_outputs\"  # Optional: specify sample names if automatic detection is not desired samplenames <- c(\"Sample_1\", \"Sample_2\")  # Run CellBender (uses GPU by default) DO.CellBender(     cellranger_path = cellranger_path,     output_path = output_path,     samplenames = samplenames,     cuda = TRUE,     cpu_threads = 8,     epochs = 100,     lr = 0.00001,     estimator_multiple_cpu = FALSE,     log = TRUE ) } # }"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.CellComposition.html","id":null,"dir":"Reference","previous_headings":"","what":"DO CellComposition — DO.CellComposition","title":"DO CellComposition — DO.CellComposition","text":"Computes visualizes cell composition changes Seurat object using Scanpro. Integrates R Python via reticulate convert Seurat AnnData run Scanpro. Generates customizable plots options transformation, grouping, bootstrapping. Returns ggplot object list containing plot data visualisation.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.CellComposition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DO CellComposition — DO.CellComposition","text":"","code":"DO.CellComposition(   sce_object,   assay_normalized = \"RNA\",   cluster_column = \"seurat_clusters\",   sample_column = \"orig.ident\",   condition_column = \"condition\",   transform_method = \"logit\",   sort_x = NULL,   sub_ident = NULL,   sort_fill = NULL,   scanpro_plots = FALSE,   scanpro_group = NULL,   outputFolder = NULL,   return_df = FALSE,   bar_colors = NULL,   n_reps = NULL,   legend.pos.x = 0.48,   legend.pos.y = 0,   cowplot_width = 0.9,   cowlegend_width = 0.9,   ... )"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.CellComposition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DO CellComposition — DO.CellComposition","text":"sce_object SCE object Seurat assay_normalized Assay raw counts cluster_column Column meta data used segment bar plot sample_column Column meta data containing individual sample names condition_column Column meta data plotted xaxis transform_method Method transformation proporties, default: \"logit\" sort_x Vector sorting xaxis sub_ident vector subset whole plot sort_fill Vector sorting bar segments scanpro_plots Boolean, create plots provided scanpro package, default: FALSE scanpro_group Defines clusters showed scanpro plots outputFolder Scanpro plots saved directory, defaults current working directory return_df Boolean, makes list first entry beeaing dataframe used create ggplot second entry plot bar_colors (named) vector colors used plotting, names sued factorize segments n_reps Number replicates generated scanpro legend.pos.x adjusts position legend horizontal legend.pos.y adjusts position legend vertical cowplot_width Changes width plotting device plot cowlegend_width Changes width plotting device legend, useful adjusting legend position combination legend.pos.x y ... arguments passed scanpro plotting functions","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.CellComposition.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DO CellComposition — DO.CellComposition","text":"ggplot object list","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.CellComposition.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"DO CellComposition — DO.CellComposition","text":"Mariano Ruz Jurado","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.CellComposition.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DO CellComposition — DO.CellComposition","text":"","code":"sce_data <-     readRDS(system.file(\"extdata\", \"sce_data.rds\", package = \"DOtools\"))  DO.CellComposition(     sce_object = sce_data,     cluster_column = \"annotation\",     condition_column = \"condition\",     scanpro_plots = FALSE,     n_reps = 5 ) #> 2025-10-02 10:59:37 - Bootstrapping method activated with 5 simulated replicates! #> . #> + /home/runner/.cache/R/basilisk/1.20.0/0/bin/conda create --yes --prefix /home/runner/.cache/R/basilisk/1.20.0/DOtools/0.99.7/DOtools_env 'python=3.11' --quiet -c conda-forge --override-channels #> + /home/runner/.cache/R/basilisk/1.20.0/0/bin/conda install --yes --prefix /home/runner/.cache/R/basilisk/1.20.0/DOtools/0.99.7/DOtools_env 'python=3.11' -c conda-forge --override-channels #> + /home/runner/.cache/R/basilisk/1.20.0/0/bin/conda install --yes --prefix /home/runner/.cache/R/basilisk/1.20.0/DOtools/0.99.7/DOtools_env -c conda-forge 'python=3.11' 'python=3.11' --override-channels #> ℹ Using the 'counts' assay as the X matrix #> Using orig.ident, condition as id variables #> Using condition as id variables"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.CellTypist.html","id":null,"dir":"Reference","previous_headings":"","what":"DO Celltypist — DO.CellTypist","title":"DO Celltypist — DO.CellTypist","text":"Runs CellTypist model Seurat SCE object predict cell type labels, storing results metadata. number cells less specified threshold, returns NAs labels. Optionally updates CellTypist models returns probability matrix. Useful annotating cell types single-cell RNA sequencing datasets.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.CellTypist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DO Celltypist — DO.CellTypist","text":"","code":"DO.CellTypist(   sce_object,   modelName = \"Healthy_Adult_Heart.pkl\",   minCellsToRun = 200,   runCelltypistUpdate = TRUE,   over_clustering = \"seurat_clusters\",   assay_normalized = \"RNA\",   returnProb = FALSE,   SeuV5 = TRUE )"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.CellTypist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DO Celltypist — DO.CellTypist","text":"sce_object seurat sce object modelName Specify model want use celltypist minCellsToRun input seurat SCE object fewer many cells, NAs added expected columns celltypist run. runCelltypistUpdate true, –update-models run celltypist prior scoring cells. over_clustering Column metadata object clustering assignments cells, default seurat_clusters assay_normalized Assay log1p normalized expressions returnProb additionally return probability matrix, return give list first element beeing object second prob matrix SeuV5 Specify Seurat object made Seuratv5","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.CellTypist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DO Celltypist — DO.CellTypist","text":"seurat sce object","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.CellTypist.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"DO Celltypist — DO.CellTypist","text":"Mariano Ruz Jurado","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.CellTypist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DO Celltypist — DO.CellTypist","text":"","code":"sce_data <-     readRDS(system.file(\"extdata\", \"sce_data.rds\", package = \"DOtools\"))   sce_data <- DO.CellTypist(     sce_object = sce_data,     modelName = \"Healthy_Adult_Heart.pkl\",     runCelltypistUpdate = TRUE,     over_clustering = \"seurat_clusters\",     minCellsToRun = 5,     SeuV5 = TRUE ) #> 2025-10-02 11:02:26 - Running celltypist using model: Healthy_Adult_Heart.pkl #> 2025-10-02 11:02:26 - Saving celltypist results to temporary folder: /tmp/RtmpkqgaqC/file8b412bf3b2b3 #> + /home/runner/.cache/R/basilisk/1.20.0/0/bin/conda create --yes --prefix /home/runner/.cache/R/basilisk/1.20.0/zellkonverter/1.18.0/zellkonverterAnnDataEnv-0.11.4 'python=3.13.2' --quiet -c conda-forge --override-channels #> + /home/runner/.cache/R/basilisk/1.20.0/0/bin/conda install --yes --prefix /home/runner/.cache/R/basilisk/1.20.0/zellkonverter/1.18.0/zellkonverterAnnDataEnv-0.11.4 'python=3.13.2' -c conda-forge --override-channels #> + /home/runner/.cache/R/basilisk/1.20.0/0/bin/conda install --yes --prefix /home/runner/.cache/R/basilisk/1.20.0/zellkonverter/1.18.0/zellkonverterAnnDataEnv-0.11.4 -c conda-forge 'python=3.13.2' 'anndata=0.11.4' 'h5py=3.13.0' 'hdf5=1.14.3' 'natsort=8.4.0' 'numpy=2.2.4' 'packaging=24.2' 'pandas=2.2.3' 'python=3.13.2' 'scipy=1.15.2' --override-channels #> 2025-10-02 11:04:22 - Running Celltypist #> 2025-10-02 11:04:25 - Creating probality plot"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.Correlation.html","id":null,"dir":"Reference","previous_headings":"","what":"DO Correlation Plot for visualizing similarity between categories — DO.Correlation","title":"DO Correlation Plot for visualizing similarity between categories — DO.Correlation","text":"Generates correlation heatmap expression data visualize similarity across sample groups. Allows customization plot type, correlation method, color scaling using ggcorrplot2 ggplot2 architectures. Ideal comparing transcriptional profiles conditions clusters.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.Correlation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DO Correlation Plot for visualizing similarity between categories — DO.Correlation","text":"","code":"DO.Correlation(   sce_object,   group_by = \"orig.ident\",   assay = \"RNA\",   features = NULL,   method = \"spearman\",   plotdesign = \"square\",   plottype = \"full\",   auto_limits = TRUE,   outline.color = \"white\",   colormap = c(\"royalblue4\", \"lightsteelblue\", \"tomato\", \"firebrick4\"),   lab_size = 10,   lab = TRUE,   lab_col = \"white\",   axis_size_x = 12,   axis_size_y = 12,   ... )"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.Correlation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DO Correlation Plot for visualizing similarity between categories — DO.Correlation","text":"sce_object Seurat SCE Object group_by Column aggregate expression , default \"orig.ident\" assay Assay object use, default \"RNA\" features genes include default , default \"None\" method Correlation method, default \"spearman\" plotdesign Plot design, default \"circle\" plottype Show full plot half , default \"full\" auto_limits Automatically rescales colour bar based values correlation matrix, default \"TRUE\" outline.color outline color square circle. Default value \"white\". colormap Defines colormap used plot, default c(\"royalblue4\", \"royalblue2\",\"firebrick\",\"firebrick4\") lab_size Size used correlation coefficient labels. used lab = TRUE. lab logical value. TRUE, add correlation coefficient plot. lab_col color used correlation coefficient labels. used lab = TRUE. axis_size_x Controls x labels size axis_size_y Controls y labels size ... Additionally arguments passed ggcorrplot function","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.Correlation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DO Correlation Plot for visualizing similarity between categories — DO.Correlation","text":"ggplot2","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.Correlation.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"DO Correlation Plot for visualizing similarity between categories — DO.Correlation","text":"Mariano Ruz Jurado","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.Correlation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DO Correlation Plot for visualizing similarity between categories — DO.Correlation","text":"","code":"sce_data <-     readRDS(system.file(\"extdata\", \"sce_data.rds\", package = \"DOtools\"))  DO.Correlation(     sce_object = sce_data,     group_by = \"orig.ident\",     assay = \"RNA\",     features = NULL,     method = \"spearman\",     plotdesign = \"square\",     plottype = \"full\",     auto_limits = TRUE,     outline.color = \"white\",     colormap = c(\"royalblue4\", \"lightsteelblue\", \"tomato\", \"firebrick4\"),     lab_size = 10,     lab = TRUE,     lab_col = \"white\" ) #> Warning: `aes_string()` was deprecated in ggplot2 3.0.0. #> ℹ Please use tidy evaluation idioms with `aes()`. #> ℹ See also `vignette(\"ggplot2-in-packages\")` for more information. #> ℹ The deprecated feature was likely used in the ggcorrplot package. #>   Please report the issue at <https://github.com/kassambara/ggcorrplot/issues>. #> Scale for fill is already present. #> Adding another scale for fill, which will replace the existing scale."},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.DietSCE.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove Layers from Seurat or SCE Object by Pattern — DO.DietSCE","title":"Remove Layers from Seurat or SCE Object by Pattern — DO.DietSCE","text":"function removes layers Seurat SCE object's RNA assay based specified regular expression pattern. supposed remove longer needed layers th object.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.DietSCE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove Layers from Seurat or SCE Object by Pattern — DO.DietSCE","text":"","code":"DO.DietSCE(sce_object, assay = \"RNA\", pattern = \"^scale\\\\.data\\\\.\")"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.DietSCE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove Layers from Seurat or SCE Object by Pattern — DO.DietSCE","text":"sce_object Seurat SCE object. assay Name assay remove layers pattern regular expression pattern match layer names. Default \"^scale\\.data\\.\"","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.DietSCE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove Layers from Seurat or SCE Object by Pattern — DO.DietSCE","text":"Seurat SCE object specified layers removed.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.DietSCE.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Remove Layers from Seurat or SCE Object by Pattern — DO.DietSCE","text":"Mariano Ruz Jurado","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.DietSCE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove Layers from Seurat or SCE Object by Pattern — DO.DietSCE","text":"","code":"sce_data <-     readRDS(system.file(\"extdata\", \"sce_data.rds\", package = \"DOtools\"))  sce_data <- DO.DietSCE(sce_data, pattern = \"data\") #> 2025-10-02 11:04:26 - pattern:  data #> 2025-10-02 11:04:26 - Object has no layers, pattern does not need to be removed from layers."},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.Dotplot.html","id":null,"dir":"Reference","previous_headings":"","what":"DO Dot plot — DO.Dotplot","title":"DO Dot plot — DO.Dotplot","text":"function generates dot plot multiple genes, comparing expression levels across one two specified groups. supports individual pseudobulk expression calculations. Highly variable customization options allow control dot size, color scaling, annotations, axis orientation. function integrates seamlessly SCE objects single-cell RNA-seq analysis.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.Dotplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DO Dot plot — DO.Dotplot","text":"","code":"DO.Dotplot(   sce_object,   Feature,   group.by.x = NULL,   group.by.y = NULL,   group.by.y2 = NULL,   across.group.by.x = FALSE,   across.group.by.y = FALSE,   sort_x = NULL,   dot.size = c(1, 6),   plot.margin = c(1, 1, 1, 1),   midpoint = 0.5,   scale_gene = FALSE,   returnValue = FALSE,   log1p_nUMI = TRUE,   hide_zero = TRUE,   annotation_x = FALSE,   annotation_x_position = 0.25,   annotation_x_rev = FALSE,   point_stroke = 0.2,   limits_colorscale = NULL,   coord_flip = FALSE,   stats_x = FALSE,   stats_y = TRUE,   sig_size = 6,   nudge_x = 0.3,   nudge_y = 0.2,   ... )"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.Dotplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DO Dot plot — DO.Dotplot","text":"sce_object SCE object Seurat Feature Genes DF interest, Data frame columns gene annotation information, e.g. output FindAllMarkers group..x group name plot x-axis group..y group name look meta data group..y2 second group name look meta data across.group..x calculate pseudobulk expression approach x-axis categories across.group..y calculate pseudobulk expression approach y-axis categories sort_x Vector sorting xaxis dot.size Vector dot size plot.margin = plot margins midpoint midpoint color gradient scale_gene True calculates Z-score average expression per gene returnValue return dataframe behind plot log1p_nUMI log1p plotted values, boolean hide_zero Removes dots genes 0 expression annotation_x Adds annotation top x axis instead y axis annotation_x_position specifies position annotation annotation_x_rev reverses annotations label order point_stroke Defines thickness black stroke dots limits_colorscale Set manually colorscale limits coord_flip flips coordinates plot stats_x Perform statistical test categories xaxis stats_y Perform statistical test categories yaxis sig_size Control size significance stars plot nudge_x Control position star x axis nudge_y Control position star y axis ... arguments passed annoSegment function annotation_x == TRUE","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.Dotplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DO Dot plot — DO.Dotplot","text":"ggplot","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.Dotplot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"DO Dot plot — DO.Dotplot","text":"Mariano Ruz Jurado","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.Dotplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DO Dot plot — DO.Dotplot","text":"","code":"sce_data <-     readRDS(system.file(\"extdata\", \"sce_data.rds\", package = \"DOtools\"))  DO.Dotplot(     sce_object = sce_data,     Feature = c(\"NKG7\", \"IL6\", \"MALAT1\"),     group.by.x = \"condition\" ) #> Warning: The following requested variables were not found: IL6, MALAT1 #> Scale for size is already present. #> Adding another scale for size, which will replace the existing scale."},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.FullRecluster.html","id":null,"dir":"Reference","previous_headings":"","what":"DO.FullRecluster — DO.FullRecluster","title":"DO.FullRecluster — DO.FullRecluster","text":"Performs iterative reclustering major cluster found FindClusters Seurat SCE object. refines clusters using FindSubCluster function better resolution fine-tuned annotation. new clustering results stored metadata column called annotation_recluster. Suitable improving cluster precision granularity initial clustering.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.FullRecluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DO.FullRecluster — DO.FullRecluster","text":"","code":"DO.FullRecluster(   sce_object,   over_clustering = \"seurat_clusters\",   res = 0.5,   algorithm = 4,   graph.name = \"RNA_snn\" )"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.FullRecluster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DO.FullRecluster — DO.FullRecluster","text":"sce_object seurat SCE object over_clustering Column metadata object clustering assignments cells, default seurat_clusters res Resolution new clusters, default 0.5 algorithm Set one available algorithms found FindSubCLuster function, default = 4: leiden graph.name builded neirest neighbor graph","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.FullRecluster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DO.FullRecluster — DO.FullRecluster","text":"Seurat SCE Object new clustering named annotation_recluster","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.FullRecluster.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"DO.FullRecluster — DO.FullRecluster","text":"Mariano Ruz Jurado","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.FullRecluster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DO.FullRecluster — DO.FullRecluster","text":"","code":"sce_data <-     readRDS(system.file(\"extdata\", \"sce_data.rds\", package = \"DOtools\"))  sce_data <- DO.FullRecluster(     sce_object = sce_data ) #> Computing nearest neighbor graph #> Computing SNN #> 2 singletons identified. 3 final clusters. #> 1 singletons identified. 3 final clusters. #> 1 singletons identified. 2 final clusters. #> 1 singletons identified. 3 final clusters. #>"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.Heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"DO Heatmap of the mean expression of genes across a groups — DO.Heatmap","title":"DO Heatmap of the mean expression of genes across a groups — DO.Heatmap","text":"Wrapper around heatmap.py, generates heatmap showing average nUMI set genes different groups. Addiional argumnt can made show foldchanges two conditions. Differential gene expression analysis different groups can performed.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.Heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DO Heatmap of the mean expression of genes across a groups — DO.Heatmap","text":"","code":"DO.Heatmap(   sce_object,   features,   assay_normalized = \"RNA\",   group_by = \"seurat_clusters\",   groups_order = NULL,   value_plot = \"expr\",   group_fc = \"condition\",   group_fc_ident_1 = NULL,   group_fc_ident_2 = NULL,   clip_value = FALSE,   max_fc = 5,   z_score = NULL,   path = NULL,   filename = \"Heatmap.svg\",   swap_axes = TRUE,   cmap = \"Reds\",   title = NULL,   title_fontprop = NULL,   clustering_method = \"complete\",   clustering_metric = \"euclidean\",   cluster_x_axis = FALSE,   cluster_y_axis = FALSE,   axs = NULL,   figsize = c(5, 6),   linewidth = 0.1,   ticks_fontdict = NULL,   xticks_rotation = NULL,   yticks_rotation = NULL,   vmin = 0,   vcenter = NULL,   vmax = NULL,   legend_title = \"LogMean(nUMI)\\nin group\",   add_stats = TRUE,   df_pvals = NULL,   stats_x_size = NULL,   square_x_size = NULL,   test = \"wilcox\",   pval_cutoff = 0.05,   log2fc_cutoff = 0,   only_pos = TRUE,   square = TRUE,   showP = TRUE,   logcounts = TRUE )"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.Heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DO Heatmap of the mean expression of genes across a groups — DO.Heatmap","text":"sce_object SCE object Seurat meta.data features gene names continuous value meta data assay_normalized Assay raw counts group_by meta data column name categorical values groups_order order categories group_by value_plot plotted values correspond expression values foldchanges group_fc foldchanges specified groups must specified compared group_fc_ident_1 Defines first group test group_fc_ident_2 Defines second group test clip_value Clips colourscale 99th percentile, useful one gene driving colourscale max_fc Clips super high foldchanges value, changes can still appreciated z_score apply z-score transformation, \"group\" \"var\" path path save plot filename name file swap_axes whether swap axes cmap color map title title main plot title_fontprop font properties title (e.g., 'weight' 'size') clustering_method clustering method use hierarchically clustering x y-axis clustering_metric metric use hierarchically clustering x- y-axis cluster_x_axis hierarchically clustering x-axis cluster_y_axis hierarchically clustering y-axis axs matplotlib axis figsize figure size linewidth line width border cells ticks_fontdict font properties x y ticks (e.g.,  'weight' 'size') xticks_rotation rotation x-ticks yticks_rotation rotations y-ticks vmin minimum value vcenter center value vmax maximum value legend_title title color bar add_stats add statistical annotation, add square '*' center expression significantly different group respect others df_pvals dataframe p-values, gene x group group x gene case swap_axes False stats_x_size size asterisk square_x_size size thickness square percentual, vector test test use test significance pval_cutoff cutoff p-value log2fc_cutoff minimum cutoff log2FC only_pos set TRUE, use positive genes condition square whether make cell square showP set false return dictionary axis logcounts whether input logcounts ","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.Heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DO Heatmap of the mean expression of genes across a groups — DO.Heatmap","text":"Depending showP, returns plot set TRUE dictionary axes.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.Heatmap.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"DO Heatmap of the mean expression of genes across a groups — DO.Heatmap","text":"Mariano Ruz Jurado & David Rodriguez Morales","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.Heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DO Heatmap of the mean expression of genes across a groups — DO.Heatmap","text":"","code":"#' sce_data <-   readRDS(system.file(\"extdata\", \"sce_data.rds\", package = \"DOtools\"))  DO.Heatmap( sce_object = sce_data, assay_normalized = \"RNA\", group_by=\"seurat_clusters\", features = rownames(sce_data)[1:10], z_score = NULL, path = NULL, filename = \"Heatmap.svg\", swap_axes = TRUE, cmap = \"Reds\", title = NULL, title_fontprop = NULL, clustering_method = \"complete\", clustering_metric = \"euclidean\", cluster_x_axis = FALSE, cluster_y_axis = FALSE, axs = NULL, figsize = c(5, 6), linewidth = 0.1, ticks_fontdict = NULL, xticks_rotation = 45, yticks_rotation = NULL, vmin = 0.0, vcenter = NULL, vmax = NULL, legend_title = \"LogMean(nUMI)\\nin group\", add_stats = TRUE, df_pvals = NULL, stats_x_size = NULL, square_x_size = NULL, test = \"wilcox\", pval_cutoff = 0.05, log2fc_cutoff = 0, only_pos = TRUE, square = TRUE, showP = FALSE, logcounts = TRUE ) #> Calculating cluster 1 #> Warning: No features pass logfc.threshold threshold; returning empty data.frame #> Calculating cluster 2 #> For a (much!) faster implementation of the Wilcoxon Rank Sum Test, #> (default method for FindMarkers) please install the presto package #> -------------------------------------------- #> install.packages('devtools') #> devtools::install_github('immunogenomics/presto') #> -------------------------------------------- #> After installation of presto, Seurat will automatically use the more  #> efficient implementation (no further action necessary). #> This message will be shown once per session #> Calculating cluster 3 #> Calculating cluster 4 #> Calculating cluster 5 #> Calculating cluster 6 #> Calculating cluster 7 #> Warning: No features pass logfc.threshold threshold; returning empty data.frame #> Calculating cluster 8"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.Import.html","id":null,"dir":"Reference","previous_headings":"","what":"DO.Import — DO.Import","title":"DO.Import — DO.Import","text":"Imports processes single-cell RNA-seq data various formats (10x Genomics, CellBender, CSV), performs quality control (QC), filtering , normalization, variable gene selection, optionally detects doublets. Returns merged processed Seurat SCE object ready downstream analysis.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.Import.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DO.Import — DO.Import","text":"","code":"DO.Import(   pathways,   ids,   minCellGenes = 5,   FilterCells = TRUE,   cut_mt = 0.05,   min_counts = NULL,   max_counts = NULL,   min_genes = NULL,   max_genes = NULL,   low_quantile = NULL,   high_quantile = NULL,   DeleteDoublets = TRUE,   include_rbs = TRUE,   Seurat = TRUE,   ... )"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.Import.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DO.Import — DO.Import","text":"pathways character vector paths directories files containing raw expression matrices. ids character vector sample identifiers, matching order pathways. minCellGenes Integer. Minimum number cells gene must expressed retained. Default 5. FilterCells Logical. TRUE, applies QC filtering cells based mitochondrial content, counts, feature thresholds. Default TRUE. cut_mt Numeric. Maximum allowed mitochondrial gene proportion per cell. Default 0.05. min_counts Numeric. Minimum UMI count threshold (optional, used low_quantile NULL). max_counts Numeric. Maximum UMI count threshold (optional, used high_quantile NULL). min_genes Numeric. Minimum number genes detected per cell retain. Optional. max_genes Numeric. Maximum number genes detected per cell retain. Optional. low_quantile Numeric. Quantile threshold (0 1) filter low UMI cells (used min_counts NULL). high_quantile Numeric. Quantile threshold (0 1) filter high UMI cells (used max_counts NULL). DeleteDoublets Logical. TRUE, doublets detected removed using scDblFinder. Default TRUE. include_rbs Logical. TRUE, calculates ribosomal gene content addition mitochondrial content. Default TRUE. Seurat Logical. TRUE, returns Seurat object otherwise SCE object. ... Additional arguments passed RunPCA().","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.Import.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DO.Import — DO.Import","text":"merged Seurat SCE object containing samples, normalization, QC, scaling, PCA, optional doublet removal applied.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.Import.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"DO.Import — DO.Import","text":"Mariano Ruz Jurado & David John","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.Import.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DO.Import — DO.Import","text":"","code":"if (FALSE) { # \\dontrun{ merged_obj <- DO.Import(     pathways = c(\"path/to/sample1\", \"path/to/sample2\"),     ids = c(\"sample1\", \"sample2\"),     TenX = TRUE,     CellBender = FALSE,     minCellGenes = 5,     FilterCells = TRUE,     cut_mt = 0.05,     min_counts = 1000,     max_counts = 20000,     min_genes = 200,     max_genes = 6000,     DeleteDoublets = TRUE ) } # }"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.Integration.html","id":null,"dir":"Reference","previous_headings":"","what":"DO.Integration SCE object integration directly — DO.Integration","title":"DO.Integration SCE object integration directly — DO.Integration","text":"Integrates single-cell RNA-seq data directly SingleCellExperiment Seurat objects. Supports detection variable genes , scaling, PCA, neighbor graph construction, clustering, UMAP embedding, multiple integration methods.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.Integration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DO.Integration SCE object integration directly — DO.Integration","text":"","code":"DO.Integration(   sce_object,   split_key = \"orig.ident\",   HVG = FALSE,   scale = FALSE,   pca = FALSE,   neighbors = TRUE,   neighbors_dim = seq_len(50),   clusters = TRUE,   clusters_res = 0.3,   clusters_algorithm = 4,   umap = TRUE,   umap_key = \"UMAP\",   umap_dim = seq_len(50),   integration_method = \"CCAIntegration\",   selection_method = \"vst\",   loess_span = 0.3,   clip_max = \"auto\",   num_bin = 20,   binning_method = \"equal_width\",   scale_max = 10,   pca_key = \"PCA\",   integration_key = \"INTEGRATED.CCA\",   npcs = 50,   verbose = FALSE )"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.Integration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DO.Integration SCE object integration directly — DO.Integration","text":"sce_object Seurat SCE Object split_key Character. Column meta data split samples , default orig.ident HVG Logical. Perform detection highly variable genes scale Logical. Perform scaling expression data pca Logical. Perform principal component analysis neighbors Logical. Perform Nearest-neighbor graph integration neighbors_dim Numeric range. Dimensions reduction use input clusters Logical. Perform clustering cells clusters_res Numeric. Value resolution parameter, use value () 1.0 want obtain larger (smaller) number communities. clusters_algorithm Numeric. Define algorithm clustering, default 4 \"Leiden\" umap Logical. Runs Uniform Manifold Approximation Projection umap_key Character name umap_dim Numeric range. dimensions use input features integration_method Character. Define integration method, please check versions supported Seurat::IntegrateLayers function selection_method Character. Default \"vst\". Options: \"mean.var.plot\", \"dispersion\" loess_span Numeric. Loess span parameter used fitting variance-mean relationship clip_max Character. standardization values larger clip.max set clip.max; default 'auto' sets value square root number cells num_bin Numeric. Total number bins use scaled analysis (default 20) binning_method Character. “equal_width”: bin equal width along x-axis (default). Options: “equal_frequency”: scale_max Numeric. Max value return scaled data. default 10. pca_key Character. Key name save pca result integration_key Character. Key name save integration result npcs Numeric. Total Number PCs compute store (50 default) verbose Logical. Verbosity functions","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.Integration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DO.Integration SCE object integration directly — DO.Integration","text":"integrated sce/seurat object","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.Integration.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"DO.Integration SCE object integration directly — DO.Integration","text":"Mariano Ruz Jurado","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.Integration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DO.Integration SCE object integration directly — DO.Integration","text":"","code":"sce_data <-     readRDS(system.file(\"extdata\", \"sce_data.rds\", package = \"DOtools\"))  DO.Integration(     sce_object = sce_data,     split_key = \"orig.ident\",     HVG = TRUE,     scale = TRUE,     pca = TRUE,     integration_method = \"CCAIntegration\" ) #> 2025-10-02 11:04:32 - Splitting object for integration with CCAIntegration by orig.ident #> 2025-10-02 11:04:32 - Calculating highly variable genes #> 2025-10-02 11:04:33 - Scaling object #> 2025-10-02 11:04:33 - Running pca, saved in key: PCA #> Splitting ‘counts’, ‘data’ layers. Not splitting ‘scale.data’. If you would like to split other layers, set in `layers` argument. #> 2025-10-02 11:04:34 - Running integration, saved in key: INTEGRATED.CCA #> 2025-10-02 11:04:38 - Running Nearest-neighbor graph construction #> 2025-10-02 11:04:39 - Running cluster detection #> 2025-10-02 11:04:40 - Creating UMAP #> class: SingleCellExperiment  #> dim: 800 2807  #> metadata(0): #> assays(3): counts logcounts scaledata #> rownames(800): HES4 ISG15 ... SERPINA9 DSG2 #> rowData names(0): #> colnames(2807): AAACCCAGTGCATTTG-1_1 AAACCCATCTCAACGA-1_1 ... #>   TTTGGAGCAACTGGTT-1_2 TTTGGAGGTTACCTGA-1_2 #> colData names(15): orig.ident nCount_RNA ... annotation_recluster #>   leiden0.3 #> reducedDimNames(3): PCA INTEGRATED.CCA UMAP #> mainExpName: RNA #> altExpNames(0):"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.MultiDGE.html","id":null,"dir":"Reference","previous_headings":"","what":"DO.MultiDGE — DO.MultiDGE","title":"DO.MultiDGE — DO.MultiDGE","text":"Performs differential gene expression analysis using single-cell pseudo-bulk approaches across annotated cell types. single-cell method uses Seurat's FindMarkers, pseudo-bulk testing uses DESeq2 aggregated expression profiles. Outputs merged data frame DGE statistics methods per condition cell type.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.MultiDGE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DO.MultiDGE — DO.MultiDGE","text":"","code":"DO.MultiDGE(   sce_object,   assay = \"RNA\",   method_sc = \"wilcox\",   group_by = \"condition\",   annotation_col = \"annotation\",   sample_col = \"orig.ident\",   ident_ctrl = \"ctrl\",   min_pct = 0,   logfc_threshold = 0,   only_pos = FALSE,   min_cells_group = 3,   ... )"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.MultiDGE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DO.MultiDGE — DO.MultiDGE","text":"sce_object seurat SCE object assay Specified assay Seurat SCE object, default \"RNA\" method_sc method use single cell DEG analysis, see FindMarkers Seurat options, default \"wilcox\" group_by Column meta data containing groups used testing, default \"condition\" annotation_col Column meta data containing information cell type annotation sample_col Column meta data containing information sample annotation, default \"orig.ident\" ident_ctrl Name condition group_by test ctrl, default \"ctrl\" min_pct test genes detected minimum fraction min.pct cells either two populations, default 0 logfc_threshold Limit testing genes show, average, least X-fold difference (log-scale) two groups cells, default 0. only_pos return positive markers, default FALSE min_cells_group Minimum number cells one groups, default 3 ... Additional arguments passed FindMarkers function","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.MultiDGE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DO.MultiDGE — DO.MultiDGE","text":"Dataframe containing statistics gene single cell Pseudobulk DGE approach.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.MultiDGE.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"DO.MultiDGE — DO.MultiDGE","text":"Mariano Ruz Jurado","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.MultiDGE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DO.MultiDGE — DO.MultiDGE","text":"","code":"sce_data <-     readRDS(system.file(\"extdata\", \"sce_data.rds\", package = \"DOtools\")) DGE_result <- DO.MultiDGE(sce_data,     sample_col = \"orig.ident\",     method_sc = \"wilcox\",     annotation_col = \"annotation\",     ident_ctrl = \"healthy\" ) #> Names of identity class contain underscores ('_'), replacing with dashes ('-') #> This message is displayed once every 8 hours. #> Centering and scaling data matrix #> 2025-10-02 11:04:48 - Corrected annotation names in pseudo-bulk object by replacing '-' with '_'. #> 2025-10-02 11:04:48 - Starting DGE single cell method analysis #> 2025-10-02 11:04:48 - Comparing disease with healthy in: Monocytes #> 2025-10-02 11:04:48 - Skipping Monocytes since one comparison has fewer than 3 cells! #> 2025-10-02 11:04:48 - Comparing disease with healthy in: CD4_T_cells #> 2025-10-02 11:04:49 - Comparing disease with healthy in: NK #> 2025-10-02 11:04:50 - Comparing disease with healthy in: CD8_T_cells #> 2025-10-02 11:04:50 - Skipping CD8_T_cells since one comparison has fewer than 3 cells! #> 2025-10-02 11:04:50 - Comparing disease with healthy in: B_cells #> 2025-10-02 11:04:51 - Comparing disease with healthy in: pDC #> 2025-10-02 11:04:51 - Finished DGE single cell method analysis #> 2025-10-02 11:04:51 - Starting DGE pseudo bulk method analysis #> 2025-10-02 11:04:51 - Comparing disease with healthy in: B_cells #> 2025-10-02 11:04:51 - Skipping B_cells since one comparison has fewer than 3 cells! #> 2025-10-02 11:04:51 - Comparing disease with healthy in: CD4_T_cells #> 2025-10-02 11:04:51 - Skipping CD4_T_cells since one comparison has fewer than 3 cells! #> 2025-10-02 11:04:51 - Comparing disease with healthy in: Monocytes #> 2025-10-02 11:04:51 - Skipping Monocytes since one comparison has fewer than 3 cells! #> 2025-10-02 11:04:51 - Comparing disease with healthy in: NK #> 2025-10-02 11:04:51 - Skipping NK since one comparison has fewer than 3 cells! #> 2025-10-02 11:04:51 - Comparing disease with healthy in: pDC #> 2025-10-02 11:04:51 - Skipping pDC since one comparison has fewer than 3 cells! #> 2025-10-02 11:04:51 - Comparing disease with healthy in: CD8_T_cells #> 2025-10-02 11:04:51 - Skipping CD8_T_cells since one comparison has fewer than 3 cells! #> 2025-10-02 11:04:51 - Finished DGE pseudo bulk method analysis #> 2025-10-02 11:04:51 - DGE pseudo bulk result is empty..."},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.PyEnv.html","id":null,"dir":"Reference","previous_headings":"","what":"DO.PyEnv — DO.PyEnv","title":"DO.PyEnv — DO.PyEnv","text":"Sets connects conda Python environment use DOtools. environment path provided, create one ~/.venv/DOtools install required Python packages: scvi-tools, celltypist, scanpro.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.PyEnv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DO.PyEnv — DO.PyEnv","text":"","code":"DO.PyEnv(conda_path = NULL)"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.PyEnv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DO.PyEnv — DO.PyEnv","text":"conda_path character string specifying path existing new conda environment.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.PyEnv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DO.PyEnv — DO.PyEnv","text":"None","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.PyEnv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DO.PyEnv — DO.PyEnv","text":"","code":"# Creates DOtools environment at ~/.venv/DOtools if it doesn't exist DO.PyEnv() #> 2025-10-02 11:04:51 - Creating conda environment for DOtools #> 2025-10-02 11:05:43 - Python packages ready for DOtools!  # Use an existing conda environment at a custom location # DO.PyEnv(conda_path = \"~/miniconda3/envs/my_dotools_env\")"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.SplitBarGSEA.html","id":null,"dir":"Reference","previous_headings":"","what":"DO Bar plot for GSEA df result — DO.SplitBarGSEA","title":"DO Bar plot for GSEA df result — DO.SplitBarGSEA","text":"function generates split barplot. plot top 10 Go terms shown, sorted based column ('col_split'). Two conditions shown time. One condition shown positive axis, negative one. condition shown positive set 'pos_col'. GO terms shown inside bars, term long, using 'cutoff', can control maximum number characters per line. Pre-filter dataframe contain significant Terms recommended","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.SplitBarGSEA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DO Bar plot for GSEA df result — DO.SplitBarGSEA","text":"","code":"DO.SplitBarGSEA(   df_GSEA,   term_col,   col_split,   cond_col,   pos_cond,   cutoff = 40,   log10_transform = TRUE,   figsize = c(12, 8),   topN = 10,   colors_pairs = c(\"sandybrown\", \"royalblue\"),   alpha_colors = 0.3,   path = NULL,   spacing = 5,   txt_size = 12,   filename = \"SplitBar.svg\",   title = \"Top 10 GO Terms in each Condition: \",   showP = FALSE,   celltype = \"all\" )"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.SplitBarGSEA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DO Bar plot for GSEA df result — DO.SplitBarGSEA","text":"df_GSEA dataframe results gene set enrichment analysis term_col column dataframe contains terms col_split column dataframe used sort split plot cond_col column dataframe contains condition information pos_cond condition shown positive side plot cutoff maximum number characters per line log10_transform col_split contains values 0 1, assume pvals apply -log10 transformation figsize figure size topN many terms shown colors_pairs colors condition (1st color –> negative axis; 2nd color –> positive axis) alpha_colors alpha value colors bars path path save plot spacing space add bars origin. percentage value , indicating bars start 5 % maximum X axis value. txt_size size go terms text filename filename plot title title plot showP False, axis return celltype vector cell types want subset , use \"\" celltypes contained dataframe column \"celltype\"","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.SplitBarGSEA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DO Bar plot for GSEA df result — DO.SplitBarGSEA","text":": None axis","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.SplitBarGSEA.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"DO Bar plot for GSEA df result — DO.SplitBarGSEA","text":"Mariano Ruz Jurado","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.SplitBarGSEA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DO Bar plot for GSEA df result — DO.SplitBarGSEA","text":"","code":"library(enrichR) #> Welcome to enrichR #> Checking connections ...  #> Enrichr ...  #> Connection is Live! #> FlyEnrichr ...  #> Connection is Live! #> WormEnrichr ...  #> Connection is Live! #> YeastEnrichr ...  #> Connection is Live! #> FishEnrichr ...  #> Connection is Live! #> OxEnrichr ...  #> Connection is Live!  sce_data <-     readRDS(system.file(\"extdata\", \"sce_data.rds\", package = \"DOtools\")) DGE_result <- DO.MultiDGE(sce_data,     sample_col = \"orig.ident\",     method_sc = \"wilcox\",     annotation_col = \"annotation\",     ident_ctrl = \"healthy\" ) #> Centering and scaling data matrix #> 2025-10-02 11:05:44 - Corrected annotation names in pseudo-bulk object by replacing '-' with '_'. #> 2025-10-02 11:05:44 - Starting DGE single cell method analysis #> 2025-10-02 11:05:44 - Comparing disease with healthy in: Monocytes #> 2025-10-02 11:05:44 - Skipping Monocytes since one comparison has fewer than 3 cells! #> 2025-10-02 11:05:44 - Comparing disease with healthy in: CD4_T_cells #> 2025-10-02 11:05:46 - Comparing disease with healthy in: NK #> 2025-10-02 11:05:46 - Comparing disease with healthy in: CD8_T_cells #> 2025-10-02 11:05:47 - Skipping CD8_T_cells since one comparison has fewer than 3 cells! #> 2025-10-02 11:05:47 - Comparing disease with healthy in: B_cells #> 2025-10-02 11:05:47 - Comparing disease with healthy in: pDC #> 2025-10-02 11:05:47 - Finished DGE single cell method analysis #> 2025-10-02 11:05:47 - Starting DGE pseudo bulk method analysis #> 2025-10-02 11:05:47 - Comparing disease with healthy in: B_cells #> 2025-10-02 11:05:47 - Skipping B_cells since one comparison has fewer than 3 cells! #> 2025-10-02 11:05:47 - Comparing disease with healthy in: CD4_T_cells #> 2025-10-02 11:05:47 - Skipping CD4_T_cells since one comparison has fewer than 3 cells! #> 2025-10-02 11:05:47 - Comparing disease with healthy in: Monocytes #> 2025-10-02 11:05:47 - Skipping Monocytes since one comparison has fewer than 3 cells! #> 2025-10-02 11:05:47 - Comparing disease with healthy in: NK #> 2025-10-02 11:05:47 - Skipping NK since one comparison has fewer than 3 cells! #> 2025-10-02 11:05:47 - Comparing disease with healthy in: pDC #> 2025-10-02 11:05:47 - Skipping pDC since one comparison has fewer than 3 cells! #> 2025-10-02 11:05:47 - Comparing disease with healthy in: CD8_T_cells #> 2025-10-02 11:05:47 - Skipping CD8_T_cells since one comparison has fewer than 3 cells! #> 2025-10-02 11:05:47 - Finished DGE pseudo bulk method analysis #> 2025-10-02 11:05:47 - DGE pseudo bulk result is empty... DGE_result <- DGE_result[DGE_result$celltype == \"CD4_T_cells\", ]  result_GO <- DO.enrichR(     df_DGE = DGE_result,     gene_column = \"gene\",     pval_column = \"p_val_SC_wilcox\",     log2fc_column = \"avg_log2FC_SC_wilcox\",     pval_cutoff = 0.05,     log2fc_cutoff = 0.25,     path = NULL,     filename = \"\",     species = \"Human\",     go_catgs = \"GO_Biological_Process_2023\" ) #> Connection changed to https://maayanlab.cloud/Enrichr/ #> Connection is Live! #> Uploading data to Enrichr... Done. #>   Querying GO_Biological_Process_2023... Done. #> Parsing results... Done. #> Uploading data to Enrichr... Done. #>   Querying GO_Biological_Process_2023... Done. #> Parsing results... Done.  result_GO$celltype <- \"CM1\"  # Run SplitBarGSEA visualisation DO.SplitBarGSEA(     df_GSEA = result_GO,     term_col = \"Term\",     col_split = \"Combined.Score\",     cond_col = \"State\",     pos_cond = \"enriched\",     cutoff = 40,     log10_transform = TRUE,     figsize = c(12, 8),     topN = 10,     colors_pairs = c(\"sandybrown\", \"royalblue\"),     alpha_colors = 0.3,     path = NULL,     spacing = 5,     txt_size = 12,     filename = \"SplitBar.svg\",     title = \"Top 10 GO Terms in each Condition: \",     showP = FALSE,     celltype = \"all\" )"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.Subset.html","id":null,"dir":"Reference","previous_headings":"","what":"DO.Subset — DO.Subset","title":"DO.Subset — DO.Subset","text":"Creates subset Seurat SCE object based either categorical numeric thresholds metadata. Allows subsetting specifying ident column, group name, threshold criteria. Ideal extracting specific cell populations clusters based custom conditions. Returns new Seurat SCE object containing subsetted cells come Seuratv5 subset issue. Please aware right now, using function subset might treated Seuv5=False functions.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.Subset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DO.Subset — DO.Subset","text":"","code":"DO.Subset(   sce_object,   assay = \"RNA\",   ident,   ident_name = NULL,   ident_thresh = NULL )"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.Subset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DO.Subset — DO.Subset","text":"sce_object seurat SCE object assay assay subset ident meta data column subset ident_name name group barcodes ident subset ident_thresh numeric thresholds character, e.g \">5\" c(\">5\", \"<200\"), subset barcodes ident","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.Subset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DO.Subset — DO.Subset","text":"subsetted Seurat SCE object","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.Subset.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"DO.Subset — DO.Subset","text":"Mariano Ruz Jurado","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.Subset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DO.Subset — DO.Subset","text":"","code":"sce_data <-     readRDS(system.file(\"extdata\", \"sce_data.rds\", package = \"DOtools\"))  sce_data_sub <- DO.Subset(     sce_object = sce_data,     ident = \"condition\",     ident_name = \"healthy\" ) #> 2025-10-02 11:05:51 - Specified 'ident_name': expecting a categorical variable."},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.TransferLabel.html","id":null,"dir":"Reference","previous_headings":"","what":"DO.TransferLabel — DO.TransferLabel","title":"DO.TransferLabel — DO.TransferLabel","text":"Transfers cell-type annotations re-annotated subset Seurat SCE object back full Seurat SCE object. useful clusters refined re-labeled subset need reflected original object.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.TransferLabel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DO.TransferLabel — DO.TransferLabel","text":"","code":"DO.TransferLabel(sce_object, Subset_obj, annotation_column, subset_annotation)"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.TransferLabel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DO.TransferLabel — DO.TransferLabel","text":"sce_object Seurat SCE object annotation meta.data Subset_obj subsetted Seurat SCE object re-annotated clusters annotation_column column name meta.data annotation subset_annotation column name meta.data annotation subsetted object","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.TransferLabel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DO.TransferLabel — DO.TransferLabel","text":"Seurat SCE Object transfered labels","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.TransferLabel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DO.TransferLabel — DO.TransferLabel","text":"","code":"sce_data <-     readRDS(system.file(\"extdata\", \"sce_data.rds\", package = \"DOtools\"))  sce_data <- DO.TransferLabel(sce_data,     sce_data,     annotation_column = \"annotation\",     subset_annotation = \"annotation\" )"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.UMAP.html","id":null,"dir":"Reference","previous_headings":"","what":"DO.UMAP — DO.UMAP","title":"DO.UMAP — DO.UMAP","text":"Creates polished UMAP plot using Seurat's DimPlot FeaturePlot functions. allows customization colors, labels, plot elements better visualisation. function handles cluster-based visualisations gene-based visualisations UMAP plot. Ideal refining UMAP outputs added flexibility enhanced presentation.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.UMAP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DO.UMAP — DO.UMAP","text":"","code":"DO.UMAP(   sce_object,   FeaturePlot = FALSE,   features = NULL,   group.by = \"seurat_clusters\",   umap_colors = NULL,   text_size = 14,   label = TRUE,   order = TRUE,   plot.title = TRUE,   legend.position = \"none\",   ... )"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.UMAP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DO.UMAP — DO.UMAP","text":"sce_object seurat SCE object FeaturePlot going Dimplot FeaturePlot? features features Featureplot group.grouping plot DImplot defines featureplot labels umap_colors colors use UMAP, specify vector text_size Size text label label clusters plot group.column order Boolean determining whether plot cells order expression. plot.title title UMAP legend.position specify legend position ... arguments passed DimPlot FeaturePlot function Seurat","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.UMAP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DO.UMAP — DO.UMAP","text":"Plot Refined colors axes","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.UMAP.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"DO.UMAP — DO.UMAP","text":"Mariano Ruz Jurado","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.UMAP.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DO.UMAP — DO.UMAP","text":"","code":"sce_data <-     readRDS(system.file(\"extdata\", \"sce_data.rds\", package = \"DOtools\"))  DO.UMAP(     sce_object = sce_data,     group.by = \"seurat_clusters\" )   DO.UMAP(     sce_object = sce_data,     FeaturePlot = TRUE,     features = c(\"BAG2\", \"CD74\") ) #> Warning: The `slot` argument of `FetchData()` is deprecated as of SeuratObject 5.0.0. #> ℹ Please use the `layer` argument instead. #> ℹ The deprecated feature was likely used in the Seurat package. #>   Please report the issue at <https://github.com/satijalab/seurat/issues>. #> Warning: The following requested variables were not found: BAG2"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.VlnPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Violin Graph with wilcox test on single cell level — DO.VlnPlot","title":"Violin Graph with wilcox test on single cell level — DO.VlnPlot","text":"Creates violin plot compare gene expression across different conditions groups within Seurat object. incorporates Wilcoxon rank-sum tests evaluate statistical differences conditions. plot can customized options data transformation, jitter display, significance annotations. function also supports multiple conditions allows visualisation statistical results wilcoxon test.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.VlnPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Violin Graph with wilcox test on single cell level — DO.VlnPlot","text":"","code":"DO.VlnPlot(   sce_object,   SeuV5 = TRUE,   Feature,   ListTest = NULL,   returnValues = FALSE,   ctrl.condition = NULL,   group.by = \"condition\",   group.by.2 = NULL,   geom_jitter_args = c(0.2, 0.25, 0.25),   geom_jitter_args_group_by2 = c(0.1, 0.1, 1),   vector_colors = c(\"#1f77b4\", \"#ea7e1eff\", \"royalblue4\", \"tomato2\", \"darkgoldenrod\",     \"palegreen4\", \"maroon\", \"thistle3\"),   wilcox_test = TRUE,   stat_pos_mod = 1.15,   hjust.wilcox = 0.8,   vjust.wilcox = 2,   size.wilcox = 3.33,   step_mod = 0,   hjust.wilcox.2 = 0.5,   vjust.wilcox.2 = 0,   sign_bar = 0.8 )"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.VlnPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Violin Graph with wilcox test on single cell level — DO.VlnPlot","text":"sce_object combined SCE object Seurat SeuV5 Seuratv5 object? (TRUE FALSE) Feature name feature ListTest List conditions wilcox performed, NULL always CTRL group everything returnValues return df.melt.sum data frame containing means SEM set group ctrl.condition set ctrl condition, relevant running empty comparison List group.select seurat sce_object slot conditions can found, default conditon group..2 relevant multiple group testing, e.g. cell type test two conditions provided geom_jitter_args vector dots visualisation vlnplot: size, width, alpha value geom_jitter_args_group_by2 controls jittering points group..2 specified vector_colors specify minimum number colours entries condition, default 2 wilcox_test Bolean TRUE bonferoni wilcoxon test carried ctrl.condition rest stat_pos_mod value modifiyng statistics height hjust.wilcox value adjusting height text vjust.wilcox value vertical text size.wilcox value size text statistical test step_mod value defining space one test next one hjust.wilcox.2 value adjusting height text, group..2 specified vjust.wilcox.2 value vertical text, group..2 specified sign_bar adjusts sign_bar group..2 specified","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.VlnPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Violin Graph with wilcox test on single cell level — DO.VlnPlot","text":"ggplot list used data frames","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.VlnPlot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Violin Graph with wilcox test on single cell level — DO.VlnPlot","text":"Mariano Ruz Jurado","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.VlnPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Violin Graph with wilcox test on single cell level — DO.VlnPlot","text":"","code":"sce_data <-     readRDS(system.file(\"extdata\", \"sce_data.rds\", package = \"DOtools\"))  ListTest <- list() ListTest[[1]] <- c(\"healthy\", \"disease\")  DO.VlnPlot(     sce_object = sce_data,     SeuV5 = TRUE,     Feature = \"NKG7\",     ListTest = ListTest,     ctrl.condition = \"healthy\",     group.by = \"condition\" ) #> SeuV5 TRUE, if object Seuratv4 or below change SeuV5 to FALSE #> This message is displayed once per session. #> Using group, orig.ident as id variables"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.enrichR.html","id":null,"dir":"Reference","previous_headings":"","what":"DO.enrichR — DO.enrichR","title":"DO.enrichR — DO.enrichR","text":"Performs Gene Ontology enrichment analysis differentially expressed genes using EnrichR API. Separately analyzes upregulated downregulated genes returns results.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.enrichR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DO.enrichR — DO.enrichR","text":"","code":"DO.enrichR(   df_DGE,   gene_column,   pval_column,   log2fc_column,   pval_cutoff = 0.05,   log2fc_cutoff = 0.25,   path = NULL,   filename = \"\",   species = \"Human\",   go_catgs = c(\"GO_Molecular_Function_2023\", \"GO_Cellular_Component_2023\",     \"GO_Biological_Process_2023\") )"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.enrichR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DO.enrichR — DO.enrichR","text":"df_DGE data.frame containing differential gene expression results. gene_column column name df gene symbols. pval_column column name df p-values. log2fc_column column name df log2 fold changes. pval_cutoff adjusted p-value threshold significance (default = 0.05). log2fc_cutoff log2 fold change threshold /regulation (default = 0.25). path folder path output Excel file saved. subfolder \"GSA_Tables\" created. filename suffix used Excel filename (e.g., \"GSA_CellType_MyAnalysis.xlsx\"). species species name enrichment analysis. Options include \"Human\", \"Mouse\", \"Yeast\", etc. (default = \"Mouse\"). go_catgs GO databases use. Defaults c(GO_Biological_Process_2023\").","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.enrichR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DO.enrichR — DO.enrichR","text":"data.frame GO enrichment results path NULL, otherwise writes Excel file.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.enrichR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DO.enrichR — DO.enrichR","text":"","code":"library(enrichR)  sce_data <-     readRDS(system.file(\"extdata\", \"sce_data.rds\", package = \"DOtools\")) DGE_result <- DO.MultiDGE(sce_data,     sample_col = \"orig.ident\",     method_sc = \"wilcox\",     annotation_col = \"annotation\",     ident_ctrl = \"healthy\" ) #> Centering and scaling data matrix #> 2025-10-02 11:05:55 - Corrected annotation names in pseudo-bulk object by replacing '-' with '_'. #> 2025-10-02 11:05:55 - Starting DGE single cell method analysis #> 2025-10-02 11:05:55 - Comparing disease with healthy in: Monocytes #> 2025-10-02 11:05:55 - Skipping Monocytes since one comparison has fewer than 3 cells! #> 2025-10-02 11:05:55 - Comparing disease with healthy in: CD4_T_cells #> 2025-10-02 11:05:57 - Comparing disease with healthy in: NK #> 2025-10-02 11:05:58 - Comparing disease with healthy in: CD8_T_cells #> 2025-10-02 11:05:58 - Skipping CD8_T_cells since one comparison has fewer than 3 cells! #> 2025-10-02 11:05:58 - Comparing disease with healthy in: B_cells #> 2025-10-02 11:05:59 - Comparing disease with healthy in: pDC #> 2025-10-02 11:05:59 - Finished DGE single cell method analysis #> 2025-10-02 11:05:59 - Starting DGE pseudo bulk method analysis #> 2025-10-02 11:05:59 - Comparing disease with healthy in: B_cells #> 2025-10-02 11:05:59 - Skipping B_cells since one comparison has fewer than 3 cells! #> 2025-10-02 11:05:59 - Comparing disease with healthy in: CD4_T_cells #> 2025-10-02 11:05:59 - Skipping CD4_T_cells since one comparison has fewer than 3 cells! #> 2025-10-02 11:05:59 - Comparing disease with healthy in: Monocytes #> 2025-10-02 11:05:59 - Skipping Monocytes since one comparison has fewer than 3 cells! #> 2025-10-02 11:05:59 - Comparing disease with healthy in: NK #> 2025-10-02 11:05:59 - Skipping NK since one comparison has fewer than 3 cells! #> 2025-10-02 11:05:59 - Comparing disease with healthy in: pDC #> 2025-10-02 11:05:59 - Skipping pDC since one comparison has fewer than 3 cells! #> 2025-10-02 11:05:59 - Comparing disease with healthy in: CD8_T_cells #> 2025-10-02 11:05:59 - Skipping CD8_T_cells since one comparison has fewer than 3 cells! #> 2025-10-02 11:05:59 - Finished DGE pseudo bulk method analysis #> 2025-10-02 11:05:59 - DGE pseudo bulk result is empty...  DGE_result <- DGE_result[DGE_result$celltype == \"CD4_T_cells\", ]  result_GO <- DO.enrichR(     df_DGE = DGE_result,     gene_column = \"gene\",     pval_column = \"p_val_SC_wilcox\",     log2fc_column = \"avg_log2FC_SC_wilcox\",     pval_cutoff = 0.05,     log2fc_cutoff = 0.25,     path = NULL,     filename = \"\",     species = \"Human\",     go_catgs = \"GO_Biological_Process_2023\" ) #> Connection changed to https://maayanlab.cloud/Enrichr/ #> Connection is Live! #> Uploading data to Enrichr... Done. #>   Querying GO_Biological_Process_2023... Done. #> Parsing results... Done. #> Uploading data to Enrichr... Done. #>   Querying GO_Biological_Process_2023... Done. #> Parsing results... Done."},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.scVI.html","id":null,"dir":"Reference","previous_headings":"","what":"DO.scVI — DO.scVI","title":"DO.scVI — DO.scVI","text":"function run scVI Integration scVI python package. includes parameters actual python package runs using internal python script. usage gpu incorporated highly recommended.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.scVI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DO.scVI — DO.scVI","text":"","code":"DO.scVI(   sce_object,   batch_key,   layer_counts = \"counts\",   layer_logcounts = \"logcounts\",   categorical_covariates = NULL,   continuos_covariates = NULL,   n_hidden = 128,   n_latent = 30,   n_layers = 3,   dispersion = \"gene-batch\",   gene_likelihood = \"zinb\",   get_model = FALSE )"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.scVI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DO.scVI — DO.scVI","text":"sce_object Seurat SCE object annotation meta.data batch_key meta data column batch information. layer_counts layer counts. Raw counts required. layer_logcounts layer log-counts. Log-counts required calculation HVG. categorical_covariates meta data column names categorical covariates scVI inference. continuos_covariates meta data  column names continuous covariates scVI inference. n_hidden number hidden layers. n_latent dimensions latent space. n_layers number layers. dispersion dispersion mode scVI. gene_likelihood gene likelihood. get_model return trained model.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.scVI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DO.scVI — DO.scVI","text":"Seurat SCE Object dimensionality reduction scVI","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.scVI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DO.scVI — DO.scVI","text":"","code":"if (FALSE) { # \\dontrun{ sce_data <-     readRDS(system.file(\"extdata\", \"sce_data.rds\", package = \"DOtools\"))  # Run scVI using the 'orig.ident' column as the batch key sce_data <- DO.scVI(sce_data, batch_key = \"orig.ident\") } # }"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DOtools.html","id":null,"dir":"Reference","previous_headings":"","what":"DOtools: A Toolkit for scRNA Data Analysis — DOtools","title":"DOtools: A Toolkit for scRNA Data Analysis — DOtools","text":"`DOtools` package provides set functions advanced data processing, visualisation, statistical analysis Seurat objects. includes functions cell-type prediction, reclustering, creating polished UMAP plots, subsetting Seurat objects, various statistical analyses like Wilcoxon tests SEM graphs.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DOtools.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DOtools: A Toolkit for scRNA Data Analysis — DOtools","text":"package-level documentation file return value.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DOtools.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"DOtools: A Toolkit for scRNA Data Analysis — DOtools","text":"package includes following functions: .BoxPlot: function creating box plots Wilcoxon test results. .CellTypist: function running CellTypist Seurat SCE objects predict cell types. .DietSCE: function diet-based analysis Seurat SCE objects. .Dotplot: function creating dot plots visualizing gene expression. .FullRecluster: function fine-grained reclustering Seurat SCE objects. .BarplotClustert: function generating mean SEM graphs cluster-based analysis t-tests. .BarplotWilcox: function generating mean SEM graphs Wilcoxon test results. .Subset: function subsetting Seurat SCE objects based metadata. .UMAP: function creating polished UMAP plots using either DimPlot FeaturePlot. .VlnPlot: function generating violin plots Wilcoxon test results. .CellComposition: function visualizing statistically analyzing cell-type composition changes across conditions using Scanpro Python package, support bootstrapping, proportion plots, customizable output. .Import: function building merged Seurat SCE object 10x software output, directly provided tables. .Integration: function integrating SCE objects Seurat objects provided method. .CellBender: function running CellBender virtual conda env provided raw count h5 files. .SplitBarGSEA: function viusalizing GSEA result provided df e.g. metascape .scVI: function running scVI Integration implemented scvi-tools. .TransferLabel: function transfering annotation subseted object original seurat SCE object. .PyEnv: function creating conda envrionment holding python packages needed functions. .Correlation: function creating correlation plot provided samples category specified. .Heatmap: function generating Heat maps gene expression data. .MultiDGE: function calculating DEGs single cell speudo bulk level. dot-.BarcodeRanks: function estimating number expected cells droplets. dot-QC.Vlnplot: function estimating number expected cells droplets.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DOtools.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"DOtools: A Toolkit for scRNA Data Analysis — DOtools","text":"Mariano Ruz Jurado, David Rodriguez Morales","code":""},{"path":[]},{"path":"https://marianoruzjurado.github.io/DOtools/reference/dot-DO.BarcodeRanks.html","id":null,"dir":"Reference","previous_headings":"","what":"DO.BarcodeRanks — .DO.BarcodeRanks","title":"DO.BarcodeRanks — .DO.BarcodeRanks","text":"Given raw count matrix (e.g. CellRanger HDF5 file), estimate number expected cells droplets using knee inflection points barcodeRanks.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/dot-DO.BarcodeRanks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DO.BarcodeRanks — .DO.BarcodeRanks","text":"","code":".DO.BarcodeRanks(SCE_obj)"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/dot-DO.BarcodeRanks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DO.BarcodeRanks — .DO.BarcodeRanks","text":"SCE_obj Single cell experiment object.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/dot-DO.BarcodeRanks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DO.BarcodeRanks — .DO.BarcodeRanks","text":"named numeric vector: `c(xpc_cells = ..., total_cells = ...)","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/dot-DO.BarcodeRanks.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"DO.BarcodeRanks — .DO.BarcodeRanks","text":"Mariano Ruz Jurado","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/dot-QC_Vlnplot.html","id":null,"dir":"Reference","previous_headings":"","what":".QC_Vlnplot — .QC_Vlnplot","title":".QC_Vlnplot — .QC_Vlnplot","text":"Generates violin plots common quality control (QC) metrics single-cell RNA-seq data Seurat object. function displays three violin plots number detected genes per cell (nFeature_RNA), total UMI counts per cell (nCount_RNA), mitochondrial gene content percentage (pt_mito). Useful visual inspection QC thresholds outliers.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/dot-QC_Vlnplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":".QC_Vlnplot — .QC_Vlnplot","text":"","code":".QC_Vlnplot(   sce_object,   id,   layer = \"counts\",   features = c(\"nFeature_RNA\", \"nCount_RNA\", \"pt_mito\") )"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/dot-QC_Vlnplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":".QC_Vlnplot — .QC_Vlnplot","text":"sce_object Seurat object containing single-cell RNA-seq data. layer character string specifying assay layer use (default \"counts\"). features character vector length 3 indicating feature names plot. Default c(\"nFeature_RNA\", \"nCount_RNA\", \"pt_mito\").","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/dot-QC_Vlnplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":".QC_Vlnplot — .QC_Vlnplot","text":"ggplot object arranged single row showing violin plots specified features overlaid boxplots.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/dot-QC_Vlnplot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":".QC_Vlnplot — .QC_Vlnplot","text":"Mariano Ruz Jurado","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/dot-annoSegment.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotation modifier for plots — .annoSegment","title":"Annotation modifier for plots — .annoSegment","text":"Used segment plot annotations","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/dot-annoSegment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotation modifier for plots — .annoSegment","text":"","code":".annoSegment(   object = NULL,   relSideDist = 0.1,   aesGroup = FALSE,   aesGroName = NULL,   annoPos = \"top\",   xPosition = NULL,   yPosition = NULL,   pCol = NULL,   segWidth = 1,   lty = NULL,   lwd = 10,   alpha = NULL,   lineend = \"square\",   annoManual = FALSE,   mArrow = NULL,   addBranch = FALSE,   bArrow = NULL,   branDirection = 1,   branRelSegLen = 0.3,   addText = FALSE,   textCol = NULL,   textSize = NULL,   fontfamily = NULL,   fontface = NULL,   textLabel = NULL,   textRot = 0,   textHVjust = 0.2,   hjust = NULL,   vjust = NULL,   myFacetGrou = NULL,   aes_x = NULL,   aes_y = NULL )"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/dot-annoSegment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotation modifier for plots — .annoSegment","text":"object ggplot list. Default(NULL). relSideDist relative distance ratio y axis range. Default(0.1). aesGroup Whether use group column add rect annotation. Default(\"FALSE\"). aesGroName mapping column name. Default(NULL). annoPos position annotation added. Default(\"top\"). xPosition x axis coordinate segment. Default(NULL). yPosition y axis coordinate segment. Default(NULL). pCol segment colors. Default(NULL). segWidth relative segment width. Default(1). lty segment line type. Default(NULL). lwd segment line width. Default(NULL). alpha segment color alpha. Default(NULL). lineend segment line end. Default(\"square\"). annoManual Whether annotate supplying x y coordinates. Default(FALSE). mArrow Whether add segment arrow. Default(FALSE). addBranch Whether add segment branch. Default(FALSE). bArrow Whether add branch arrow. Default(FALSE). branDirection branch direction. Default(1). branRelSegLen branch relative length segment. Default(0.3). addText Whether add text label segment. Default(FALSE). textCol text colors. Default(NULL). textSize text size. Default(NULL). fontfamily text fontfamily. Default(NULL). fontface text fontface. Default(NULL). textLabel text textLabel. Default(NULL). textRot text angle. Default(NULL). textHVjust text distance segment. Default(0.2). hjust text hjust. Default(NULL). vjust text vjust. Default(NULL). myFacetGrou facet group name added annotation object faceted object. Default(NULL). aes_x = NULL supply plot X mapping name annotate facetd plot. Default(NULL). aes_y = NULL supply plot Y mapping name annotate facetd plot. Default(NULL).","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/dot-annoSegment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Annotation modifier for plots — .annoSegment","text":"ggplot","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/dot-annoSegment.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Annotation modifier for plots — .annoSegment","text":"Mariano Ruz Jurado (edited : Jun Zhang)","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/dot-example_10x.html","id":null,"dir":"Reference","previous_headings":"","what":"Download example dataset 10x — .example_10x","title":"Download example dataset 10x — .example_10x","text":"Download example dataset 10x","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/dot-example_10x.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download example dataset 10x — .example_10x","text":"","code":".example_10x(base_dir = tempfile(\"dotools_datasets_\"))"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/dot-example_10x.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download example dataset 10x — .example_10x","text":"directory path data saved","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/news/index.html","id":"dotools-0995","dir":"Changelog","previous_headings":"","what":"DOtools 0.99.5","title":"DOtools 0.99.5","text":"notable changes DOtools documented file.","code":""},{"path":[]},{"path":"https://marianoruzjurado.github.io/DOtools/news/index.html","id":"changed-0-99-5","dir":"Changelog","previous_headings":"[0.99.5] - 2025-09-30","what":"Changed","title":"DOtools 0.99.5","text":"Major coding adjustments preparing BioConductor release","code":""},{"path":[]},{"path":"https://marianoruzjurado.github.io/DOtools/news/index.html","id":"added-0-99-5","dir":"Changelog","previous_headings":"[0.99.0] - 2025-07-08","what":"Added","title":"DOtools 0.99.5","text":".Heatmap: Heat map function gene expression, includes statistics significance. Example data set, useable running tutorial.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/news/index.html","id":"changed-0-99-5-1","dir":"Changelog","previous_headings":"[0.99.0] - 2025-07-08","what":"Changed","title":"DOtools 0.99.5","text":"Major adjustments across various functions improved consistency. Major adjustments across various examples.","code":""},{"path":[]},{"path":"https://marianoruzjurado.github.io/DOtools/news/index.html","id":"added-0-99-5-1","dir":"Changelog","previous_headings":"[0.4.0] - 2025-06-09","what":"Added","title":"DOtools 0.99.5","text":".SplitBarGSEA: Bar plot function GSEA results (e.g., Metascape). .scVI: Wrapper function run scVI integration Seurat object.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/news/index.html","id":"changed-0-99-5-2","dir":"Changelog","previous_headings":"[0.4.0] - 2025-06-09","what":"Changed","title":"DOtools 0.99.5","text":"Minor adjustments across various functions improved consistency.","code":""},{"path":[]},{"path":"https://marianoruzjurado.github.io/DOtools/news/index.html","id":"added-0-99-5-2","dir":"Changelog","previous_headings":"[0.3.0] - 2025-05-28","what":"Added","title":"DOtools 0.99.5","text":".Import: Simplifies Seurat object creation. .CellBender: Enables running CellBender aligner-generated HDF5 files.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/news/index.html","id":"changed-0-99-5-3","dir":"Changelog","previous_headings":"[0.3.0] - 2025-05-28","what":"Changed","title":"DOtools 0.99.5","text":"Minor adjustments internal improvements.","code":""},{"path":[]},{"path":"https://marianoruzjurado.github.io/DOtools/news/index.html","id":"added-0-99-5-3","dir":"Changelog","previous_headings":"[0.2.0] - 2025-05-26","what":"Added","title":"DOtools 0.99.5","text":".CellBender: Functionality run CellBender (initial version). .BarcodeRanks: New function barcode rank visualization.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/news/index.html","id":"changed-0-99-5-4","dir":"Changelog","previous_headings":"[0.2.0] - 2025-05-26","what":"Changed","title":"DOtools 0.99.5","text":"Minor adjustments stability usability.","code":""},{"path":[]},{"path":"https://marianoruzjurado.github.io/DOtools/news/index.html","id":"changed-0-99-5-5","dir":"Changelog","previous_headings":"[0.1.1] - 2025-05-26","what":"Changed","title":"DOtools 0.99.5","text":"Minor adjustments function behavior formatting.","code":""},{"path":[]},{"path":"https://marianoruzjurado.github.io/DOtools/news/index.html","id":"added-0-99-5-4","dir":"Changelog","previous_headings":"[0.1.0] - 2025-04-09","what":"Added","title":"DOtools 0.99.5","text":".CellCompositions: Integrates scanpro tool detect changes cell composition. New connected stacked bar plot scanpro output highlighting significant composition changes. .Dotplot: Added pseudobulk option y-axis.","code":""},{"path":[]},{"path":"https://marianoruzjurado.github.io/DOtools/news/index.html","id":"fixed-0-99-5","dir":"Changelog","previous_headings":"[0.0.2] - 2025-04-03","what":"Fixed","title":"DOtools 0.99.5","text":"Bug .Box.plot: Meta.data features specified. Bug .Vln.plot: Meta.data features specified.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/news/index.html","id":"added-0-99-5-5","dir":"Changelog","previous_headings":"[0.0.2] - 2025-04-03","what":"Added","title":"DOtools 0.99.5","text":"New argument .Box.plot: Enables user-defined x-axis sorting.","code":""},{"path":[]},{"path":"https://marianoruzjurado.github.io/DOtools/news/index.html","id":"added-0-99-5-6","dir":"Changelog","previous_headings":"[0.0.1] - 2025-03-27","what":"Added","title":"DOtools 0.99.5","text":"Initial commit: core structure foundational functions.","code":""}]

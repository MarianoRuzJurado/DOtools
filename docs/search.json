[{"path":"https://marianoruzjurado.github.io/DOtools/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Mariano Ruz Jurado Permission hereby granted, free charge, person obtaining copy software associated documentation files (‚ÄúSoftware‚Äù), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED ‚Äú‚Äù, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/articles/DOtools.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Quality control of sc/snRNA-seq","text":"DOtools R package distributed part Bioconductor project. install package, start R enter: Alternatively, can instead install latest development version GitHub :","code":"install.packages(\"BiocManager\") # WORK iN PROGRESS BiocManager::install(\"DOtools\") install.packages(\"devtools\") devtools::install_github(\"MarianoRuzJurado/DOtools\")"},{"path":"https://marianoruzjurado.github.io/DOtools/articles/DOtools.html","id":"usage","dir":"Articles","previous_headings":"","what":"Usage","title":"Quality control of sc/snRNA-seq","text":"DOtools contains different functions processing visualizing gene expression scRNA/snRNA experiments: vignette showcase use functions public available data.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/articles/DOtools.html","id":"libraries","dir":"Articles","previous_headings":"Usage","what":"Libraries","title":"Quality control of sc/snRNA-seq","text":"DOtools can imported :","code":"library(DOtools)  #Additional packages library(Seurat) library(plyr) library(dplyr) library(tibble) library(enrichR) library(kableExtra)  #Python installation set up DO.PyEnv() #> 2025-06-30 16:34:23 - Using existing conda environment at: /home/mariano/.venv/DOtools #> 2025-06-30 16:34:23 - Python packages ready for DOtools! reticulate::use_python(\"~/.venv/DOtools/bin/python\")"},{"path":"https://marianoruzjurado.github.io/DOtools/articles/DOtools.html","id":"quality-control","dir":"Articles","previous_headings":"Usage","what":"Quality control","title":"Quality control of sc/snRNA-seq","text":"DOtools .Import() function provides streamlined pipeline performing quality control single-cell single-nucleus RNA sequencing (sc/snRNA-seq) data. takes input list .h5 files generated e.g.¬†CellRanger STARsolo, along sample names metadata. preprocessing, low-quality genes cells filtered based specified thresholds. Genes expressed fewer five cells removed. Cells filtered according mitochondrial gene content, number detected genes, total UMI counts, potential doublets. function supports doublet detection using scDblFinder. Thresholds mitochondrial content (e.g., 5% scRNA-seq 3% snRNA-seq), gene counts, UMI counts can defined tailor filtering. filtering, samples merged one Seurat object, followed log-normalisation, scaling, identification highly variable genes. help assess effect quality control, violin plots showing distributions key metrics filtering automatically generated saved alongside input files. summary removed genes cells also recorded. show quality control works, going use public dataset 10X human blood healthy donors malignant tumor: can now check quality introducing filterings: :  Addition, can observe similar samples running correlation analysis.  observed cells removed due increased mitochondrial content. Depending experimental design, mitochondrial content threshold can adjusted retain higher number cells, minimizing cell loss relevance.","code":"base <- DOtools:::.example_10x() #> üì• Downloading data to /tmp/RtmpPt7xdc/dotools_datasets_1cd6424f365a5 #> ‚¨áÔ∏è  Downloading healthy filtered to /tmp/RtmpPt7xdc/dotools_datasets_1cd6424f365a5/healthy/outs/filtered_feature_bc_matrix.h5 #> ‚¨áÔ∏è  Downloading healthy raw to /tmp/RtmpPt7xdc/dotools_datasets_1cd6424f365a5/healthy/outs/raw_feature_bc_matrix.h5 #> ‚¨áÔ∏è  Downloading disease filtered to /tmp/RtmpPt7xdc/dotools_datasets_1cd6424f365a5/disease/outs/filtered_feature_bc_matrix.h5 #> ‚¨áÔ∏è  Downloading disease raw to /tmp/RtmpPt7xdc/dotools_datasets_1cd6424f365a5/disease/outs/raw_feature_bc_matrix.h5  paths = c(file.path(base, \"healthy/outs/filtered_feature_bc_matrix.h5\"),          file.path(base, \"disease/outs/filtered_feature_bc_matrix.h5\"))  Seu_obj <- DO.Import(pathways = paths,                      ids = c(\"healthy-1\", \"disease-1\"),                      TenX = T,                      DeleteDoublets = T,                      cut_mt = .05,                      min_counts = 500,                      min_genes = 300,                      high_quantile = .95) #> 2025-06-30 16:34:27 - Sample: healthy-1 #> 2025-06-30 16:34:27 - Read matrix #> Genome matrix has multiple modalities, returning a list of matrices for this genome #> 2025-06-30 16:34:32 - Create Seurat #> 2025-06-30 16:34:33 - Setting condition in object to: healthy #> 2025-06-30 16:34:33 - Get Mitochondrial+Ribosomal content #> 2025-06-30 16:34:34 - Create QC images #> 2025-06-30 16:34:36 - Start Filtering #> 2025-06-30 16:34:37 - Running Normalisation #> 2025-06-30 16:34:38 - Running Variable Gene Detection #> 2025-06-30 16:34:39 - Running scDblFinder #> Creating ~1712 artificial doublets... #> Dimensional reduction #> Evaluating kNN... #> Training model... #> iter=0, 255 cells excluded from training. #> iter=1, 232 cells excluded from training. #> iter=2, 210 cells excluded from training. #> Threshold found:0.337 #> 64 (3%) doublets called #> 2025-06-30 16:34:49 - Sample: disease-1 #> 2025-06-30 16:34:49 - Read matrix #> Genome matrix has multiple modalities, returning a list of matrices for this genome #> 2025-06-30 16:34:51 - Create Seurat #> 2025-06-30 16:34:52 - Setting condition in object to: disease #> 2025-06-30 16:34:52 - Get Mitochondrial+Ribosomal content #> 2025-06-30 16:34:53 - Create QC images #> 2025-06-30 16:34:54 - Start Filtering #> 2025-06-30 16:34:55 - Running Normalisation #> 2025-06-30 16:34:56 - Running Variable Gene Detection #> 2025-06-30 16:34:56 - Running scDblFinder #> Creating ~1500 artificial doublets... #> Dimensional reduction #> Evaluating kNN... #> Training model... #> iter=0, 51 cells excluded from training. #> iter=1, 25 cells excluded from training. #> iter=2, 25 cells excluded from training. #> Threshold found:0.579 #> 21 (2.8%) doublets called #> 2025-06-30 16:35:02 - Merging objects #> 2025-06-30 16:35:02 - Running ScaleData #> Centering and scaling data matrix #> 2025-06-30 16:35:03 - Run PCA #> Splitting 'counts', 'data' layers. Not splitting 'scale.data'. If you would like to split other layers, set in `layers` argument. prefilterplots <- list.files(path = base, pattern = \"prefiltered.*\\\\.svg$\", full.names = TRUE, recursive = TRUE) postfilterplots <- list.files(path = base, pattern = \"postfiltered.*\\\\.svg$\", full.names = TRUE, recursive = TRUE) pQC1 <- magick::image_read_svg(prefilterplots[1]) plot(pQC1) pQC2 <- magick::image_read_svg(postfilterplots[1]) plot(pQC2) DO.Correlation(Seu_obj) #> Scale for fill is already present. #> Adding another scale for fill, which will replace the existing scale."},{"path":"https://marianoruzjurado.github.io/DOtools/articles/DOtools.html","id":"data-integration","dir":"Articles","previous_headings":"Usage","what":"Data integration","title":"Quality control of sc/snRNA-seq","text":"quality control prefered integration method can chosen within Seurat‚Äôs IntegrateLayers function. Additionally, implemented new wrapper function scVI Integration scvi-tools package. integration completes, run Leiden algorithm find clusters generate UMAP embeddings. integration finished, corrected expression matrices can found saved Seurat object can used cluster calculations UMAP projections. case, continue Seuratv5 CCA Integration method.","code":"#Integration through Seurat Seu_obj <- IntegrateLayers(object = Seu_obj,                            method = CCAIntegration,                            orig.reduction = \"pca\",                            new.reduction = \"integrated.cca\",                            verbose = T) #> Finding all pairwise anchors #> Running CCA #> Merging objects #> Finding neighborhoods #> Finding anchors #>  Found 2808 anchors #> Merging dataset 2 into 1 #> Extracting anchors for merged samples #> Finding integration vectors #> Finding integration vector weights #> Integrating data  #After Integration we join the layers  Seu_obj <- JoinLayers(Seu_obj)  #Integration with scVI Seu_obj <- DO.scVI(Seu_object = Seu_obj,                    batch_key =\"orig.ident\",                    layer_counts = \"counts\",                    layer_logcounts = \"logcounts\") #> ‚Ñπ Using the 'counts' assay as the X matrix #> Run scVI #> Anndata setup with scvi-tools version 1.3.0. #>  #> Setup via `SCVI.setup_anndata` with arguments: #> { #> ‚îÇ   'layer': 'counts', #> ‚îÇ   'batch_key': 'orig.ident', #> ‚îÇ   'labels_key': None, #> ‚îÇ   'size_factor_key': None, #> ‚îÇ   'categorical_covariate_keys': None, #> ‚îÇ   'continuous_covariate_keys': None #> } #>  #>          Summary Statistics          #> ‚îè‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚î≥‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îì #> ‚îÉ     Summary Stat Key     ‚îÉ Value ‚îÉ #> ‚î°‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïá‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚î© #> ‚îÇ         n_batch          ‚îÇ   2   ‚îÇ #> ‚îÇ         n_cells          ‚îÇ 2807  ‚îÇ #> ‚îÇ n_extra_categorical_covs ‚îÇ   0   ‚îÇ #> ‚îÇ n_extra_continuous_covs  ‚îÇ   0   ‚îÇ #> ‚îÇ         n_labels         ‚îÇ   1   ‚îÇ #> ‚îÇ          n_vars          ‚îÇ 2000  ‚îÇ #> ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò #>                Data Registry                 #> ‚îè‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚î≥‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îì #> ‚îÉ Registry Key ‚îÉ    scvi-tools Location    ‚îÉ #> ‚î°‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïá‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚î© #> ‚îÇ      X       ‚îÇ  adata.layers['counts']   ‚îÇ #> ‚îÇ    batch     ‚îÇ adata.obs['_scvi_batch']  ‚îÇ #> ‚îÇ    labels    ‚îÇ adata.obs['_scvi_labels'] ‚îÇ #> ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò #>                      batch State Registry                      #> ‚îè‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚î≥‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚î≥‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îì #> ‚îÉ     Source Location     ‚îÉ Categories ‚îÉ scvi-tools Encoding ‚îÉ #> ‚î°‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïá‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïá‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚î© #> ‚îÇ adata.obs['orig.ident'] ‚îÇ disease-1  ‚îÇ          0          ‚îÇ #> ‚îÇ                         ‚îÇ healthy-1  ‚îÇ          1          ‚îÇ #> ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò #>                      labels State Registry                       #> ‚îè‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚î≥‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚î≥‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îì #> ‚îÉ      Source Location      ‚îÉ Categories ‚îÉ scvi-tools Encoding ‚îÉ #> ‚î°‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïá‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïá‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚î© #> ‚îÇ adata.obs['_scvi_labels'] ‚îÇ     0      ‚îÇ          0          ‚îÇ #> ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò #> Training:   0%|          | 0/400 [00:00<?, ?it/s]Epoch 1/400:   0%|          | 0/400 [00:00<?, ?it/s]Epoch 1/400:   0%|          | 1/400 [00:00<02:52,  2.31it/s]Epoch 1/400:   0%|          | 1/400 [00:00<02:52,  2.31it/s, v_num=1, train_loss_step=847, train_loss_epoch=1.15e+3]Epoch 2/400:   0%|          | 1/400 [00:00<02:52,  2.31it/s, v_num=1, train_loss_step=847, train_loss_epoch=1.15e+3]Epoch 2/400:   0%|          | 2/400 [00:00<01:51,  3.57it/s, v_num=1, train_loss_step=847, train_loss_epoch=1.15e+3]Epoch 2/400:   0%|          | 2/400 [00:00<01:51,  3.57it/s, v_num=1, train_loss_step=702, train_loss_epoch=791]    Epoch 3/400:   0%|          | 2/400 [00:00<01:51,  3.57it/s, v_num=1, train_loss_step=702, train_loss_epoch=791]Epoch 3/400:   1%|          | 3/400 [00:00<01:29,  4.42it/s, v_num=1, train_loss_step=702, train_loss_epoch=791]Epoch 3/400:   1%|          | 3/400 [00:00<01:29,  4.42it/s, v_num=1, train_loss_step=694, train_loss_epoch=680]Epoch 4/400:   1%|          | 3/400 [00:00<01:29,  4.42it/s, v_num=1, train_loss_step=694, train_loss_epoch=680]Epoch 4/400:   1%|          | 4/400 [00:00<01:19,  4.96it/s, v_num=1, train_loss_step=694, train_loss_epoch=680]Epoch 4/400:   1%|          | 4/400 [00:00<01:19,  4.96it/s, v_num=1, train_loss_step=612, train_loss_epoch=638]Epoch 5/400:   1%|          | 4/400 [00:00<01:19,  4.96it/s, v_num=1, train_loss_step=612, train_loss_epoch=638]Epoch 5/400:   1%|‚ñè         | 5/400 [00:01<01:15,  5.23it/s, v_num=1, train_loss_step=612, train_loss_epoch=638]Epoch 5/400:   1%|‚ñè         | 5/400 [00:01<01:15,  5.23it/s, v_num=1, train_loss_step=634, train_loss_epoch=618]Epoch 6/400:   1%|‚ñè         | 5/400 [00:01<01:15,  5.23it/s, v_num=1, train_loss_step=634, train_loss_epoch=618]Epoch 6/400:   2%|‚ñè         | 6/400 [00:01<01:14,  5.30it/s, v_num=1, train_loss_step=634, train_loss_epoch=618]Epoch 6/400:   2%|‚ñè         | 6/400 [00:01<01:14,  5.30it/s, v_num=1, train_loss_step=594, train_loss_epoch=608]Epoch 7/400:   2%|‚ñè         | 6/400 [00:01<01:14,  5.30it/s, v_num=1, train_loss_step=594, train_loss_epoch=608]Epoch 7/400:   2%|‚ñè         | 7/400 [00:01<01:11,  5.52it/s, v_num=1, train_loss_step=594, train_loss_epoch=608]Epoch 7/400:   2%|‚ñè         | 7/400 [00:01<01:11,  5.52it/s, v_num=1, train_loss_step=611, train_loss_epoch=602]Epoch 8/400:   2%|‚ñè         | 7/400 [00:01<01:11,  5.52it/s, v_num=1, train_loss_step=611, train_loss_epoch=602]Epoch 8/400:   2%|‚ñè         | 8/400 [00:01<01:11,  5.50it/s, v_num=1, train_loss_step=611, train_loss_epoch=602]Epoch 8/400:   2%|‚ñè         | 8/400 [00:01<01:11,  5.50it/s, v_num=1, train_loss_step=601, train_loss_epoch=598]Epoch 9/400:   2%|‚ñè         | 8/400 [00:01<01:11,  5.50it/s, v_num=1, train_loss_step=601, train_loss_epoch=598]Epoch 9/400:   2%|‚ñè         | 9/400 [00:01<01:08,  5.70it/s, v_num=1, train_loss_step=601, train_loss_epoch=598]Epoch 9/400:   2%|‚ñè         | 9/400 [00:01<01:08,  5.70it/s, v_num=1, train_loss_step=599, train_loss_epoch=595]Epoch 10/400:   2%|‚ñè         | 9/400 [00:01<01:08,  5.70it/s, v_num=1, train_loss_step=599, train_loss_epoch=595]Epoch 10/400:   2%|‚ñé         | 10/400 [00:01<01:07,  5.78it/s, v_num=1, train_loss_step=599, train_loss_epoch=595]Epoch 10/400:   2%|‚ñé         | 10/400 [00:01<01:07,  5.78it/s, v_num=1, train_loss_step=578, train_loss_epoch=593]Epoch 11/400:   2%|‚ñé         | 10/400 [00:01<01:07,  5.78it/s, v_num=1, train_loss_step=578, train_loss_epoch=593]Epoch 11/400:   3%|‚ñé         | 11/400 [00:02<01:07,  5.74it/s, v_num=1, train_loss_step=578, train_loss_epoch=593]Epoch 11/400:   3%|‚ñé         | 11/400 [00:02<01:07,  5.74it/s, v_num=1, train_loss_step=574, train_loss_epoch=590]Epoch 12/400:   3%|‚ñé         | 11/400 [00:02<01:07,  5.74it/s, v_num=1, train_loss_step=574, train_loss_epoch=590]Epoch 12/400:   3%|‚ñé         | 12/400 [00:02<01:06,  5.81it/s, v_num=1, train_loss_step=574, train_loss_epoch=590]Epoch 12/400:   3%|‚ñé         | 12/400 [00:02<01:06,  5.81it/s, v_num=1, train_loss_step=593, train_loss_epoch=587]Epoch 13/400:   3%|‚ñé         | 12/400 [00:02<01:06,  5.81it/s, v_num=1, train_loss_step=593, train_loss_epoch=587]Epoch 13/400:   3%|‚ñé         | 13/400 [00:02<01:06,  5.86it/s, v_num=1, train_loss_step=593, train_loss_epoch=587]Epoch 13/400:   3%|‚ñé         | 13/400 [00:02<01:06,  5.86it/s, v_num=1, train_loss_step=596, train_loss_epoch=586]Epoch 14/400:   3%|‚ñé         | 13/400 [00:02<01:06,  5.86it/s, v_num=1, train_loss_step=596, train_loss_epoch=586]Epoch 14/400:   4%|‚ñé         | 14/400 [00:02<01:06,  5.81it/s, v_num=1, train_loss_step=596, train_loss_epoch=586]Epoch 14/400:   4%|‚ñé         | 14/400 [00:02<01:06,  5.81it/s, v_num=1, train_loss_step=558, train_loss_epoch=585]Epoch 15/400:   4%|‚ñé         | 14/400 [00:02<01:06,  5.81it/s, v_num=1, train_loss_step=558, train_loss_epoch=585]Epoch 15/400:   4%|‚ñç         | 15/400 [00:02<01:05,  5.92it/s, v_num=1, train_loss_step=558, train_loss_epoch=585]Epoch 15/400:   4%|‚ñç         | 15/400 [00:02<01:05,  5.92it/s, v_num=1, train_loss_step=589, train_loss_epoch=583]Epoch 16/400:   4%|‚ñç         | 15/400 [00:02<01:05,  5.92it/s, v_num=1, train_loss_step=589, train_loss_epoch=583]Epoch 16/400:   4%|‚ñç         | 16/400 [00:02<01:03,  6.00it/s, v_num=1, train_loss_step=589, train_loss_epoch=583]Epoch 16/400:   4%|‚ñç         | 16/400 [00:02<01:03,  6.00it/s, v_num=1, train_loss_step=610, train_loss_epoch=582]Epoch 17/400:   4%|‚ñç         | 16/400 [00:02<01:03,  6.00it/s, v_num=1, train_loss_step=610, train_loss_epoch=582]Epoch 17/400:   4%|‚ñç         | 17/400 [00:03<01:03,  6.06it/s, v_num=1, train_loss_step=610, train_loss_epoch=582]Epoch 17/400:   4%|‚ñç         | 17/400 [00:03<01:03,  6.06it/s, v_num=1, train_loss_step=608, train_loss_epoch=580]Epoch 18/400:   4%|‚ñç         | 17/400 [00:03<01:03,  6.06it/s, v_num=1, train_loss_step=608, train_loss_epoch=580]Epoch 18/400:   4%|‚ñç         | 18/400 [00:03<01:02,  6.12it/s, v_num=1, train_loss_step=608, train_loss_epoch=580]Epoch 18/400:   4%|‚ñç         | 18/400 [00:03<01:02,  6.12it/s, v_num=1, train_loss_step=595, train_loss_epoch=579]Epoch 19/400:   4%|‚ñç         | 18/400 [00:03<01:02,  6.12it/s, v_num=1, train_loss_step=595, train_loss_epoch=579]Epoch 19/400:   5%|‚ñç         | 19/400 [00:03<01:02,  6.11it/s, v_num=1, train_loss_step=595, train_loss_epoch=579]Epoch 19/400:   5%|‚ñç         | 19/400 [00:03<01:02,  6.11it/s, v_num=1, train_loss_step=617, train_loss_epoch=578]Epoch 20/400:   5%|‚ñç         | 19/400 [00:03<01:02,  6.11it/s, v_num=1, train_loss_step=617, train_loss_epoch=578]Epoch 20/400:   5%|‚ñå         | 20/400 [00:03<01:02,  6.05it/s, v_num=1, train_loss_step=617, train_loss_epoch=578]Epoch 20/400:   5%|‚ñå         | 20/400 [00:03<01:02,  6.05it/s, v_num=1, train_loss_step=595, train_loss_epoch=577]Epoch 21/400:   5%|‚ñå         | 20/400 [00:03<01:02,  6.05it/s, v_num=1, train_loss_step=595, train_loss_epoch=577]Epoch 21/400:   5%|‚ñå         | 21/400 [00:03<01:02,  6.10it/s, v_num=1, train_loss_step=595, train_loss_epoch=577]Epoch 21/400:   5%|‚ñå         | 21/400 [00:03<01:02,  6.10it/s, v_num=1, train_loss_step=550, train_loss_epoch=576]Epoch 22/400:   5%|‚ñå         | 21/400 [00:03<01:02,  6.10it/s, v_num=1, train_loss_step=550, train_loss_epoch=576]Epoch 22/400:   6%|‚ñå         | 22/400 [00:03<01:01,  6.17it/s, v_num=1, train_loss_step=550, train_loss_epoch=576]Epoch 22/400:   6%|‚ñå         | 22/400 [00:03<01:01,  6.17it/s, v_num=1, train_loss_step=612, train_loss_epoch=575]Epoch 23/400:   6%|‚ñå         | 22/400 [00:03<01:01,  6.17it/s, v_num=1, train_loss_step=612, train_loss_epoch=575]Epoch 23/400:   6%|‚ñå         | 23/400 [00:04<01:03,  5.96it/s, v_num=1, train_loss_step=612, train_loss_epoch=575]Epoch 23/400:   6%|‚ñå         | 23/400 [00:04<01:03,  5.96it/s, v_num=1, train_loss_step=559, train_loss_epoch=575]Epoch 24/400:   6%|‚ñå         | 23/400 [00:04<01:03,  5.96it/s, v_num=1, train_loss_step=559, train_loss_epoch=575]Epoch 24/400:   6%|‚ñå         | 24/400 [00:04<01:02,  6.04it/s, v_num=1, train_loss_step=559, train_loss_epoch=575]Epoch 24/400:   6%|‚ñå         | 24/400 [00:04<01:02,  6.04it/s, v_num=1, train_loss_step=562, train_loss_epoch=574]Epoch 25/400:   6%|‚ñå         | 24/400 [00:04<01:02,  6.04it/s, v_num=1, train_loss_step=562, train_loss_epoch=574]Epoch 25/400:   6%|‚ñã         | 25/400 [00:04<01:01,  6.09it/s, v_num=1, train_loss_step=562, train_loss_epoch=574]Epoch 25/400:   6%|‚ñã         | 25/400 [00:04<01:01,  6.09it/s, v_num=1, train_loss_step=585, train_loss_epoch=573]Epoch 26/400:   6%|‚ñã         | 25/400 [00:04<01:01,  6.09it/s, v_num=1, train_loss_step=585, train_loss_epoch=573]Epoch 26/400:   6%|‚ñã         | 26/400 [00:04<01:00,  6.13it/s, v_num=1, train_loss_step=585, train_loss_epoch=573]Epoch 26/400:   6%|‚ñã         | 26/400 [00:04<01:00,  6.13it/s, v_num=1, train_loss_step=574, train_loss_epoch=572]Epoch 27/400:   6%|‚ñã         | 26/400 [00:04<01:00,  6.13it/s, v_num=1, train_loss_step=574, train_loss_epoch=572]Epoch 27/400:   7%|‚ñã         | 27/400 [00:04<01:00,  6.19it/s, v_num=1, train_loss_step=574, train_loss_epoch=572]Epoch 27/400:   7%|‚ñã         | 27/400 [00:04<01:00,  6.19it/s, v_num=1, train_loss_step=555, train_loss_epoch=572]Epoch 28/400:   7%|‚ñã         | 27/400 [00:04<01:00,  6.19it/s, v_num=1, train_loss_step=555, train_loss_epoch=572]Epoch 28/400:   7%|‚ñã         | 28/400 [00:04<01:00,  6.20it/s, v_num=1, train_loss_step=555, train_loss_epoch=572]Epoch 28/400:   7%|‚ñã         | 28/400 [00:04<01:00,  6.20it/s, v_num=1, train_loss_step=591, train_loss_epoch=571]Epoch 29/400:   7%|‚ñã         | 28/400 [00:04<01:00,  6.20it/s, v_num=1, train_loss_step=591, train_loss_epoch=571]Epoch 29/400:   7%|‚ñã         | 29/400 [00:05<00:59,  6.20it/s, v_num=1, train_loss_step=591, train_loss_epoch=571]Epoch 29/400:   7%|‚ñã         | 29/400 [00:05<00:59,  6.20it/s, v_num=1, train_loss_step=594, train_loss_epoch=570]Epoch 30/400:   7%|‚ñã         | 29/400 [00:05<00:59,  6.20it/s, v_num=1, train_loss_step=594, train_loss_epoch=570]Epoch 30/400:   8%|‚ñä         | 30/400 [00:05<00:59,  6.20it/s, v_num=1, train_loss_step=594, train_loss_epoch=570]Epoch 30/400:   8%|‚ñä         | 30/400 [00:05<00:59,  6.20it/s, v_num=1, train_loss_step=531, train_loss_epoch=569]Epoch 31/400:   8%|‚ñä         | 30/400 [00:05<00:59,  6.20it/s, v_num=1, train_loss_step=531, train_loss_epoch=569]Epoch 31/400:   8%|‚ñä         | 31/400 [00:05<00:59,  6.21it/s, v_num=1, train_loss_step=531, train_loss_epoch=569]Epoch 31/400:   8%|‚ñä         | 31/400 [00:05<00:59,  6.21it/s, v_num=1, train_loss_step=555, train_loss_epoch=569]Epoch 32/400:   8%|‚ñä         | 31/400 [00:05<00:59,  6.21it/s, v_num=1, train_loss_step=555, train_loss_epoch=569]Epoch 32/400:   8%|‚ñä         | 32/400 [00:05<01:02,  5.86it/s, v_num=1, train_loss_step=555, train_loss_epoch=569]Epoch 32/400:   8%|‚ñä         | 32/400 [00:05<01:02,  5.86it/s, v_num=1, train_loss_step=617, train_loss_epoch=568]Epoch 33/400:   8%|‚ñä         | 32/400 [00:05<01:02,  5.86it/s, v_num=1, train_loss_step=617, train_loss_epoch=568]Epoch 33/400:   8%|‚ñä         | 33/400 [00:05<01:02,  5.89it/s, v_num=1, train_loss_step=617, train_loss_epoch=568]Epoch 33/400:   8%|‚ñä         | 33/400 [00:05<01:02,  5.89it/s, v_num=1, train_loss_step=540, train_loss_epoch=567]Epoch 34/400:   8%|‚ñä         | 33/400 [00:05<01:02,  5.89it/s, v_num=1, train_loss_step=540, train_loss_epoch=567]Epoch 34/400:   8%|‚ñä         | 34/400 [00:05<01:01,  5.94it/s, v_num=1, train_loss_step=540, train_loss_epoch=567]Epoch 34/400:   8%|‚ñä         | 34/400 [00:05<01:01,  5.94it/s, v_num=1, train_loss_step=598, train_loss_epoch=567]Epoch 35/400:   8%|‚ñä         | 34/400 [00:05<01:01,  5.94it/s, v_num=1, train_loss_step=598, train_loss_epoch=567]Epoch 35/400:   9%|‚ñâ         | 35/400 [00:06<01:01,  5.98it/s, v_num=1, train_loss_step=598, train_loss_epoch=567]Epoch 35/400:   9%|‚ñâ         | 35/400 [00:06<01:01,  5.98it/s, v_num=1, train_loss_step=590, train_loss_epoch=566]Epoch 36/400:   9%|‚ñâ         | 35/400 [00:06<01:01,  5.98it/s, v_num=1, train_loss_step=590, train_loss_epoch=566]Epoch 36/400:   9%|‚ñâ         | 36/400 [00:06<00:59,  6.07it/s, v_num=1, train_loss_step=590, train_loss_epoch=566]Epoch 36/400:   9%|‚ñâ         | 36/400 [00:06<00:59,  6.07it/s, v_num=1, train_loss_step=579, train_loss_epoch=565]Epoch 37/400:   9%|‚ñâ         | 36/400 [00:06<00:59,  6.07it/s, v_num=1, train_loss_step=579, train_loss_epoch=565]Epoch 37/400:   9%|‚ñâ         | 37/400 [00:06<00:59,  6.14it/s, v_num=1, train_loss_step=579, train_loss_epoch=565]Epoch 37/400:   9%|‚ñâ         | 37/400 [00:06<00:59,  6.14it/s, v_num=1, train_loss_step=578, train_loss_epoch=565]Epoch 38/400:   9%|‚ñâ         | 37/400 [00:06<00:59,  6.14it/s, v_num=1, train_loss_step=578, train_loss_epoch=565]Epoch 38/400:  10%|‚ñâ         | 38/400 [00:06<00:58,  6.14it/s, v_num=1, train_loss_step=578, train_loss_epoch=565]Epoch 38/400:  10%|‚ñâ         | 38/400 [00:06<00:58,  6.14it/s, v_num=1, train_loss_step=550, train_loss_epoch=565]Epoch 39/400:  10%|‚ñâ         | 38/400 [00:06<00:58,  6.14it/s, v_num=1, train_loss_step=550, train_loss_epoch=565]Epoch 39/400:  10%|‚ñâ         | 39/400 [00:06<00:58,  6.16it/s, v_num=1, train_loss_step=550, train_loss_epoch=565]Epoch 39/400:  10%|‚ñâ         | 39/400 [00:06<00:58,  6.16it/s, v_num=1, train_loss_step=577, train_loss_epoch=564]Epoch 40/400:  10%|‚ñâ         | 39/400 [00:06<00:58,  6.16it/s, v_num=1, train_loss_step=577, train_loss_epoch=564]Epoch 40/400:  10%|‚ñà         | 40/400 [00:06<00:58,  6.17it/s, v_num=1, train_loss_step=577, train_loss_epoch=564]Epoch 40/400:  10%|‚ñà         | 40/400 [00:06<00:58,  6.17it/s, v_num=1, train_loss_step=559, train_loss_epoch=564]Epoch 41/400:  10%|‚ñà         | 40/400 [00:06<00:58,  6.17it/s, v_num=1, train_loss_step=559, train_loss_epoch=564]Epoch 41/400:  10%|‚ñà         | 41/400 [00:07<00:58,  6.13it/s, v_num=1, train_loss_step=559, train_loss_epoch=564]Epoch 41/400:  10%|‚ñà         | 41/400 [00:07<00:58,  6.13it/s, v_num=1, train_loss_step=595, train_loss_epoch=563]Epoch 42/400:  10%|‚ñà         | 41/400 [00:07<00:58,  6.13it/s, v_num=1, train_loss_step=595, train_loss_epoch=563]Epoch 42/400:  10%|‚ñà         | 42/400 [00:07<00:57,  6.18it/s, v_num=1, train_loss_step=595, train_loss_epoch=563]Epoch 42/400:  10%|‚ñà         | 42/400 [00:07<00:57,  6.18it/s, v_num=1, train_loss_step=583, train_loss_epoch=563]Epoch 43/400:  10%|‚ñà         | 42/400 [00:07<00:57,  6.18it/s, v_num=1, train_loss_step=583, train_loss_epoch=563]Epoch 43/400:  11%|‚ñà         | 43/400 [00:07<00:57,  6.20it/s, v_num=1, train_loss_step=583, train_loss_epoch=563]Epoch 43/400:  11%|‚ñà         | 43/400 [00:07<00:57,  6.20it/s, v_num=1, train_loss_step=550, train_loss_epoch=562]Epoch 44/400:  11%|‚ñà         | 43/400 [00:07<00:57,  6.20it/s, v_num=1, train_loss_step=550, train_loss_epoch=562]Epoch 44/400:  11%|‚ñà         | 44/400 [00:07<00:57,  6.19it/s, v_num=1, train_loss_step=550, train_loss_epoch=562]Epoch 44/400:  11%|‚ñà         | 44/400 [00:07<00:57,  6.19it/s, v_num=1, train_loss_step=573, train_loss_epoch=562]Epoch 45/400:  11%|‚ñà         | 44/400 [00:07<00:57,  6.19it/s, v_num=1, train_loss_step=573, train_loss_epoch=562]Epoch 45/400:  11%|‚ñà‚ñè        | 45/400 [00:07<00:57,  6.20it/s, v_num=1, train_loss_step=573, train_loss_epoch=562]Epoch 45/400:  11%|‚ñà‚ñè        | 45/400 [00:07<00:57,  6.20it/s, v_num=1, train_loss_step=589, train_loss_epoch=561]Epoch 46/400:  11%|‚ñà‚ñè        | 45/400 [00:07<00:57,  6.20it/s, v_num=1, train_loss_step=589, train_loss_epoch=561]Epoch 46/400:  12%|‚ñà‚ñè        | 46/400 [00:07<00:57,  6.15it/s, v_num=1, train_loss_step=589, train_loss_epoch=561]Epoch 46/400:  12%|‚ñà‚ñè        | 46/400 [00:07<00:57,  6.15it/s, v_num=1, train_loss_step=549, train_loss_epoch=561]Epoch 47/400:  12%|‚ñà‚ñè        | 46/400 [00:07<00:57,  6.15it/s, v_num=1, train_loss_step=549, train_loss_epoch=561]Epoch 47/400:  12%|‚ñà‚ñè        | 47/400 [00:08<00:57,  6.14it/s, v_num=1, train_loss_step=549, train_loss_epoch=561]Epoch 47/400:  12%|‚ñà‚ñè        | 47/400 [00:08<00:57,  6.14it/s, v_num=1, train_loss_step=542, train_loss_epoch=560]Epoch 48/400:  12%|‚ñà‚ñè        | 47/400 [00:08<00:57,  6.14it/s, v_num=1, train_loss_step=542, train_loss_epoch=560]Epoch 48/400:  12%|‚ñà‚ñè        | 48/400 [00:08<00:58,  6.07it/s, v_num=1, train_loss_step=542, train_loss_epoch=560]Epoch 48/400:  12%|‚ñà‚ñè        | 48/400 [00:08<00:58,  6.07it/s, v_num=1, train_loss_step=544, train_loss_epoch=560]Epoch 49/400:  12%|‚ñà‚ñè        | 48/400 [00:08<00:58,  6.07it/s, v_num=1, train_loss_step=544, train_loss_epoch=560]Epoch 49/400:  12%|‚ñà‚ñè        | 49/400 [00:08<00:58,  6.05it/s, v_num=1, train_loss_step=544, train_loss_epoch=560]Epoch 49/400:  12%|‚ñà‚ñè        | 49/400 [00:08<00:58,  6.05it/s, v_num=1, train_loss_step=565, train_loss_epoch=559]Epoch 50/400:  12%|‚ñà‚ñè        | 49/400 [00:08<00:58,  6.05it/s, v_num=1, train_loss_step=565, train_loss_epoch=559]Epoch 50/400:  12%|‚ñà‚ñé        | 50/400 [00:08<00:57,  6.08it/s, v_num=1, train_loss_step=565, train_loss_epoch=559]Epoch 50/400:  12%|‚ñà‚ñé        | 50/400 [00:08<00:57,  6.08it/s, v_num=1, train_loss_step=586, train_loss_epoch=559]Epoch 51/400:  12%|‚ñà‚ñé        | 50/400 [00:08<00:57,  6.08it/s, v_num=1, train_loss_step=586, train_loss_epoch=559]Epoch 51/400:  13%|‚ñà‚ñé        | 51/400 [00:08<00:56,  6.15it/s, v_num=1, train_loss_step=586, train_loss_epoch=559]Epoch 51/400:  13%|‚ñà‚ñé        | 51/400 [00:08<00:56,  6.15it/s, v_num=1, train_loss_step=542, train_loss_epoch=558]Epoch 52/400:  13%|‚ñà‚ñé        | 51/400 [00:08<00:56,  6.15it/s, v_num=1, train_loss_step=542, train_loss_epoch=558]Epoch 52/400:  13%|‚ñà‚ñé        | 52/400 [00:08<00:56,  6.18it/s, v_num=1, train_loss_step=542, train_loss_epoch=558]Epoch 52/400:  13%|‚ñà‚ñé        | 52/400 [00:08<00:56,  6.18it/s, v_num=1, train_loss_step=563, train_loss_epoch=559]Epoch 53/400:  13%|‚ñà‚ñé        | 52/400 [00:08<00:56,  6.18it/s, v_num=1, train_loss_step=563, train_loss_epoch=559]Epoch 53/400:  13%|‚ñà‚ñé        | 53/400 [00:09<00:55,  6.23it/s, v_num=1, train_loss_step=563, train_loss_epoch=559]Epoch 53/400:  13%|‚ñà‚ñé        | 53/400 [00:09<00:55,  6.23it/s, v_num=1, train_loss_step=537, train_loss_epoch=558]Epoch 54/400:  13%|‚ñà‚ñé        | 53/400 [00:09<00:55,  6.23it/s, v_num=1, train_loss_step=537, train_loss_epoch=558]Epoch 54/400:  14%|‚ñà‚ñé        | 54/400 [00:09<00:55,  6.24it/s, v_num=1, train_loss_step=537, train_loss_epoch=558]Epoch 54/400:  14%|‚ñà‚ñé        | 54/400 [00:09<00:55,  6.24it/s, v_num=1, train_loss_step=540, train_loss_epoch=557]Epoch 55/400:  14%|‚ñà‚ñé        | 54/400 [00:09<00:55,  6.24it/s, v_num=1, train_loss_step=540, train_loss_epoch=557]Epoch 55/400:  14%|‚ñà‚ñç        | 55/400 [00:09<00:55,  6.25it/s, v_num=1, train_loss_step=540, train_loss_epoch=557]Epoch 55/400:  14%|‚ñà‚ñç        | 55/400 [00:09<00:55,  6.25it/s, v_num=1, train_loss_step=575, train_loss_epoch=557]Epoch 56/400:  14%|‚ñà‚ñç        | 55/400 [00:09<00:55,  6.25it/s, v_num=1, train_loss_step=575, train_loss_epoch=557]Epoch 56/400:  14%|‚ñà‚ñç        | 56/400 [00:09<00:55,  6.19it/s, v_num=1, train_loss_step=575, train_loss_epoch=557]Epoch 56/400:  14%|‚ñà‚ñç        | 56/400 [00:09<00:55,  6.19it/s, v_num=1, train_loss_step=579, train_loss_epoch=556]Epoch 57/400:  14%|‚ñà‚ñç        | 56/400 [00:09<00:55,  6.19it/s, v_num=1, train_loss_step=579, train_loss_epoch=556]Epoch 57/400:  14%|‚ñà‚ñç        | 57/400 [00:09<00:55,  6.21it/s, v_num=1, train_loss_step=579, train_loss_epoch=556]Epoch 57/400:  14%|‚ñà‚ñç        | 57/400 [00:09<00:55,  6.21it/s, v_num=1, train_loss_step=571, train_loss_epoch=556]Epoch 58/400:  14%|‚ñà‚ñç        | 57/400 [00:09<00:55,  6.21it/s, v_num=1, train_loss_step=571, train_loss_epoch=556]Epoch 58/400:  14%|‚ñà‚ñç        | 58/400 [00:09<00:54,  6.23it/s, v_num=1, train_loss_step=571, train_loss_epoch=556]Epoch 58/400:  14%|‚ñà‚ñç        | 58/400 [00:09<00:54,  6.23it/s, v_num=1, train_loss_step=606, train_loss_epoch=556]Epoch 59/400:  14%|‚ñà‚ñç        | 58/400 [00:09<00:54,  6.23it/s, v_num=1, train_loss_step=606, train_loss_epoch=556]Epoch 59/400:  15%|‚ñà‚ñç        | 59/400 [00:09<00:54,  6.25it/s, v_num=1, train_loss_step=606, train_loss_epoch=556]Epoch 59/400:  15%|‚ñà‚ñç        | 59/400 [00:09<00:54,  6.25it/s, v_num=1, train_loss_step=569, train_loss_epoch=556]Epoch 60/400:  15%|‚ñà‚ñç        | 59/400 [00:09<00:54,  6.25it/s, v_num=1, train_loss_step=569, train_loss_epoch=556]Epoch 60/400:  15%|‚ñà‚ñå        | 60/400 [00:10<00:54,  6.25it/s, v_num=1, train_loss_step=569, train_loss_epoch=556]Epoch 60/400:  15%|‚ñà‚ñå        | 60/400 [00:10<00:54,  6.25it/s, v_num=1, train_loss_step=570, train_loss_epoch=555]Epoch 61/400:  15%|‚ñà‚ñå        | 60/400 [00:10<00:54,  6.25it/s, v_num=1, train_loss_step=570, train_loss_epoch=555]Epoch 61/400:  15%|‚ñà‚ñå        | 61/400 [00:10<00:54,  6.26it/s, v_num=1, train_loss_step=570, train_loss_epoch=555]Epoch 61/400:  15%|‚ñà‚ñå        | 61/400 [00:10<00:54,  6.26it/s, v_num=1, train_loss_step=536, train_loss_epoch=554]Epoch 62/400:  15%|‚ñà‚ñå        | 61/400 [00:10<00:54,  6.26it/s, v_num=1, train_loss_step=536, train_loss_epoch=554]Epoch 62/400:  16%|‚ñà‚ñå        | 62/400 [00:10<00:54,  6.26it/s, v_num=1, train_loss_step=536, train_loss_epoch=554]Epoch 62/400:  16%|‚ñà‚ñå        | 62/400 [00:10<00:54,  6.26it/s, v_num=1, train_loss_step=545, train_loss_epoch=554]Epoch 63/400:  16%|‚ñà‚ñå        | 62/400 [00:10<00:54,  6.26it/s, v_num=1, train_loss_step=545, train_loss_epoch=554]Epoch 63/400:  16%|‚ñà‚ñå        | 63/400 [00:10<00:53,  6.26it/s, v_num=1, train_loss_step=545, train_loss_epoch=554]Epoch 63/400:  16%|‚ñà‚ñå        | 63/400 [00:10<00:53,  6.26it/s, v_num=1, train_loss_step=548, train_loss_epoch=554]Epoch 64/400:  16%|‚ñà‚ñå        | 63/400 [00:10<00:53,  6.26it/s, v_num=1, train_loss_step=548, train_loss_epoch=554]Epoch 64/400:  16%|‚ñà‚ñå        | 64/400 [00:10<00:53,  6.25it/s, v_num=1, train_loss_step=548, train_loss_epoch=554]Epoch 64/400:  16%|‚ñà‚ñå        | 64/400 [00:10<00:53,  6.25it/s, v_num=1, train_loss_step=565, train_loss_epoch=554]Epoch 65/400:  16%|‚ñà‚ñå        | 64/400 [00:10<00:53,  6.25it/s, v_num=1, train_loss_step=565, train_loss_epoch=554]Epoch 65/400:  16%|‚ñà‚ñã        | 65/400 [00:10<00:53,  6.26it/s, v_num=1, train_loss_step=565, train_loss_epoch=554]Epoch 65/400:  16%|‚ñà‚ñã        | 65/400 [00:10<00:53,  6.26it/s, v_num=1, train_loss_step=596, train_loss_epoch=553]Epoch 66/400:  16%|‚ñà‚ñã        | 65/400 [00:10<00:53,  6.26it/s, v_num=1, train_loss_step=596, train_loss_epoch=553]Epoch 66/400:  16%|‚ñà‚ñã        | 66/400 [00:11<00:53,  6.23it/s, v_num=1, train_loss_step=596, train_loss_epoch=553]Epoch 66/400:  16%|‚ñà‚ñã        | 66/400 [00:11<00:53,  6.23it/s, v_num=1, train_loss_step=528, train_loss_epoch=553]Epoch 67/400:  16%|‚ñà‚ñã        | 66/400 [00:11<00:53,  6.23it/s, v_num=1, train_loss_step=528, train_loss_epoch=553]Epoch 67/400:  17%|‚ñà‚ñã        | 67/400 [00:11<00:53,  6.22it/s, v_num=1, train_loss_step=528, train_loss_epoch=553]Epoch 67/400:  17%|‚ñà‚ñã        | 67/400 [00:11<00:53,  6.22it/s, v_num=1, train_loss_step=538, train_loss_epoch=553]Epoch 68/400:  17%|‚ñà‚ñã        | 67/400 [00:11<00:53,  6.22it/s, v_num=1, train_loss_step=538, train_loss_epoch=553]Epoch 68/400:  17%|‚ñà‚ñã        | 68/400 [00:11<00:53,  6.25it/s, v_num=1, train_loss_step=538, train_loss_epoch=553]Epoch 68/400:  17%|‚ñà‚ñã        | 68/400 [00:11<00:53,  6.25it/s, v_num=1, train_loss_step=575, train_loss_epoch=552]Epoch 69/400:  17%|‚ñà‚ñã        | 68/400 [00:11<00:53,  6.25it/s, v_num=1, train_loss_step=575, train_loss_epoch=552]Epoch 69/400:  17%|‚ñà‚ñã        | 69/400 [00:11<00:52,  6.25it/s, v_num=1, train_loss_step=575, train_loss_epoch=552]Epoch 69/400:  17%|‚ñà‚ñã        | 69/400 [00:11<00:52,  6.25it/s, v_num=1, train_loss_step=553, train_loss_epoch=552]Epoch 70/400:  17%|‚ñà‚ñã        | 69/400 [00:11<00:52,  6.25it/s, v_num=1, train_loss_step=553, train_loss_epoch=552]Epoch 70/400:  18%|‚ñà‚ñä        | 70/400 [00:11<00:55,  5.99it/s, v_num=1, train_loss_step=553, train_loss_epoch=552]Epoch 70/400:  18%|‚ñà‚ñä        | 70/400 [00:11<00:55,  5.99it/s, v_num=1, train_loss_step=556, train_loss_epoch=552]Epoch 71/400:  18%|‚ñà‚ñä        | 70/400 [00:11<00:55,  5.99it/s, v_num=1, train_loss_step=556, train_loss_epoch=552]Epoch 71/400:  18%|‚ñà‚ñä        | 71/400 [00:11<00:54,  6.06it/s, v_num=1, train_loss_step=556, train_loss_epoch=552]Epoch 71/400:  18%|‚ñà‚ñä        | 71/400 [00:11<00:54,  6.06it/s, v_num=1, train_loss_step=567, train_loss_epoch=551]Epoch 72/400:  18%|‚ñà‚ñä        | 71/400 [00:11<00:54,  6.06it/s, v_num=1, train_loss_step=567, train_loss_epoch=551]Epoch 72/400:  18%|‚ñà‚ñä        | 72/400 [00:12<00:53,  6.10it/s, v_num=1, train_loss_step=567, train_loss_epoch=551]Epoch 72/400:  18%|‚ñà‚ñä        | 72/400 [00:12<00:53,  6.10it/s, v_num=1, train_loss_step=547, train_loss_epoch=551]Epoch 73/400:  18%|‚ñà‚ñä        | 72/400 [00:12<00:53,  6.10it/s, v_num=1, train_loss_step=547, train_loss_epoch=551]Epoch 73/400:  18%|‚ñà‚ñä        | 73/400 [00:12<00:52,  6.17it/s, v_num=1, train_loss_step=547, train_loss_epoch=551]Epoch 73/400:  18%|‚ñà‚ñä        | 73/400 [00:12<00:52,  6.17it/s, v_num=1, train_loss_step=558, train_loss_epoch=551]Epoch 74/400:  18%|‚ñà‚ñä        | 73/400 [00:12<00:52,  6.17it/s, v_num=1, train_loss_step=558, train_loss_epoch=551]Epoch 74/400:  18%|‚ñà‚ñä        | 74/400 [00:12<00:52,  6.22it/s, v_num=1, train_loss_step=558, train_loss_epoch=551]Epoch 74/400:  18%|‚ñà‚ñä        | 74/400 [00:12<00:52,  6.22it/s, v_num=1, train_loss_step=568, train_loss_epoch=551]Epoch 75/400:  18%|‚ñà‚ñä        | 74/400 [00:12<00:52,  6.22it/s, v_num=1, train_loss_step=568, train_loss_epoch=551]Epoch 75/400:  19%|‚ñà‚ñâ        | 75/400 [00:12<00:52,  6.23it/s, v_num=1, train_loss_step=568, train_loss_epoch=551]Epoch 75/400:  19%|‚ñà‚ñâ        | 75/400 [00:12<00:52,  6.23it/s, v_num=1, train_loss_step=544, train_loss_epoch=551]Epoch 76/400:  19%|‚ñà‚ñâ        | 75/400 [00:12<00:52,  6.23it/s, v_num=1, train_loss_step=544, train_loss_epoch=551]Epoch 76/400:  19%|‚ñà‚ñâ        | 76/400 [00:12<00:51,  6.26it/s, v_num=1, train_loss_step=544, train_loss_epoch=551]Epoch 76/400:  19%|‚ñà‚ñâ        | 76/400 [00:12<00:51,  6.26it/s, v_num=1, train_loss_step=583, train_loss_epoch=550]Epoch 77/400:  19%|‚ñà‚ñâ        | 76/400 [00:12<00:51,  6.26it/s, v_num=1, train_loss_step=583, train_loss_epoch=550]Epoch 77/400:  19%|‚ñà‚ñâ        | 77/400 [00:12<00:51,  6.23it/s, v_num=1, train_loss_step=583, train_loss_epoch=550]Epoch 77/400:  19%|‚ñà‚ñâ        | 77/400 [00:12<00:51,  6.23it/s, v_num=1, train_loss_step=546, train_loss_epoch=549]Epoch 78/400:  19%|‚ñà‚ñâ        | 77/400 [00:12<00:51,  6.23it/s, v_num=1, train_loss_step=546, train_loss_epoch=549]Epoch 78/400:  20%|‚ñà‚ñâ        | 78/400 [00:13<00:51,  6.27it/s, v_num=1, train_loss_step=546, train_loss_epoch=549]Epoch 78/400:  20%|‚ñà‚ñâ        | 78/400 [00:13<00:51,  6.27it/s, v_num=1, train_loss_step=572, train_loss_epoch=549]Epoch 79/400:  20%|‚ñà‚ñâ        | 78/400 [00:13<00:51,  6.27it/s, v_num=1, train_loss_step=572, train_loss_epoch=549]Epoch 79/400:  20%|‚ñà‚ñâ        | 79/400 [00:13<00:51,  6.21it/s, v_num=1, train_loss_step=572, train_loss_epoch=549]Epoch 79/400:  20%|‚ñà‚ñâ        | 79/400 [00:13<00:51,  6.21it/s, v_num=1, train_loss_step=556, train_loss_epoch=549]Epoch 80/400:  20%|‚ñà‚ñâ        | 79/400 [00:13<00:51,  6.21it/s, v_num=1, train_loss_step=556, train_loss_epoch=549]Epoch 80/400:  20%|‚ñà‚ñà        | 80/400 [00:13<00:54,  5.91it/s, v_num=1, train_loss_step=556, train_loss_epoch=549]Epoch 80/400:  20%|‚ñà‚ñà        | 80/400 [00:13<00:54,  5.91it/s, v_num=1, train_loss_step=524, train_loss_epoch=548]Epoch 81/400:  20%|‚ñà‚ñà        | 80/400 [00:13<00:54,  5.91it/s, v_num=1, train_loss_step=524, train_loss_epoch=548]Epoch 81/400:  20%|‚ñà‚ñà        | 81/400 [00:13<00:54,  5.83it/s, v_num=1, train_loss_step=524, train_loss_epoch=548]Epoch 81/400:  20%|‚ñà‚ñà        | 81/400 [00:13<00:54,  5.83it/s, v_num=1, train_loss_step=515, train_loss_epoch=548]Epoch 82/400:  20%|‚ñà‚ñà        | 81/400 [00:13<00:54,  5.83it/s, v_num=1, train_loss_step=515, train_loss_epoch=548]Epoch 82/400:  20%|‚ñà‚ñà        | 82/400 [00:13<00:53,  5.97it/s, v_num=1, train_loss_step=515, train_loss_epoch=548]Epoch 82/400:  20%|‚ñà‚ñà        | 82/400 [00:13<00:53,  5.97it/s, v_num=1, train_loss_step=575, train_loss_epoch=548]Epoch 83/400:  20%|‚ñà‚ñà        | 82/400 [00:13<00:53,  5.97it/s, v_num=1, train_loss_step=575, train_loss_epoch=548]Epoch 83/400:  21%|‚ñà‚ñà        | 83/400 [00:13<00:52,  6.05it/s, v_num=1, train_loss_step=575, train_loss_epoch=548]Epoch 83/400:  21%|‚ñà‚ñà        | 83/400 [00:13<00:52,  6.05it/s, v_num=1, train_loss_step=518, train_loss_epoch=548]Epoch 84/400:  21%|‚ñà‚ñà        | 83/400 [00:13<00:52,  6.05it/s, v_num=1, train_loss_step=518, train_loss_epoch=548]Epoch 84/400:  21%|‚ñà‚ñà        | 84/400 [00:14<00:51,  6.13it/s, v_num=1, train_loss_step=518, train_loss_epoch=548]Epoch 84/400:  21%|‚ñà‚ñà        | 84/400 [00:14<00:51,  6.13it/s, v_num=1, train_loss_step=553, train_loss_epoch=547]Epoch 85/400:  21%|‚ñà‚ñà        | 84/400 [00:14<00:51,  6.13it/s, v_num=1, train_loss_step=553, train_loss_epoch=547]Epoch 85/400:  21%|‚ñà‚ñà‚ñè       | 85/400 [00:14<00:51,  6.15it/s, v_num=1, train_loss_step=553, train_loss_epoch=547]Epoch 85/400:  21%|‚ñà‚ñà‚ñè       | 85/400 [00:14<00:51,  6.15it/s, v_num=1, train_loss_step=516, train_loss_epoch=547]Epoch 86/400:  21%|‚ñà‚ñà‚ñè       | 85/400 [00:14<00:51,  6.15it/s, v_num=1, train_loss_step=516, train_loss_epoch=547]Epoch 86/400:  22%|‚ñà‚ñà‚ñè       | 86/400 [00:14<00:50,  6.23it/s, v_num=1, train_loss_step=516, train_loss_epoch=547]Epoch 86/400:  22%|‚ñà‚ñà‚ñè       | 86/400 [00:14<00:50,  6.23it/s, v_num=1, train_loss_step=543, train_loss_epoch=546]Epoch 87/400:  22%|‚ñà‚ñà‚ñè       | 86/400 [00:14<00:50,  6.23it/s, v_num=1, train_loss_step=543, train_loss_epoch=546]Epoch 87/400:  22%|‚ñà‚ñà‚ñè       | 87/400 [00:14<00:50,  6.23it/s, v_num=1, train_loss_step=543, train_loss_epoch=546]Epoch 87/400:  22%|‚ñà‚ñà‚ñè       | 87/400 [00:14<00:50,  6.23it/s, v_num=1, train_loss_step=539, train_loss_epoch=546]Epoch 88/400:  22%|‚ñà‚ñà‚ñè       | 87/400 [00:14<00:50,  6.23it/s, v_num=1, train_loss_step=539, train_loss_epoch=546]Epoch 88/400:  22%|‚ñà‚ñà‚ñè       | 88/400 [00:14<00:50,  6.21it/s, v_num=1, train_loss_step=539, train_loss_epoch=546]Epoch 88/400:  22%|‚ñà‚ñà‚ñè       | 88/400 [00:14<00:50,  6.21it/s, v_num=1, train_loss_step=521, train_loss_epoch=546]Epoch 89/400:  22%|‚ñà‚ñà‚ñè       | 88/400 [00:14<00:50,  6.21it/s, v_num=1, train_loss_step=521, train_loss_epoch=546]Epoch 89/400:  22%|‚ñà‚ñà‚ñè       | 89/400 [00:14<00:50,  6.20it/s, v_num=1, train_loss_step=521, train_loss_epoch=546]Epoch 89/400:  22%|‚ñà‚ñà‚ñè       | 89/400 [00:14<00:50,  6.20it/s, v_num=1, train_loss_step=567, train_loss_epoch=546]Epoch 90/400:  22%|‚ñà‚ñà‚ñè       | 89/400 [00:14<00:50,  6.20it/s, v_num=1, train_loss_step=567, train_loss_epoch=546]Epoch 90/400:  22%|‚ñà‚ñà‚ñé       | 90/400 [00:15<00:49,  6.21it/s, v_num=1, train_loss_step=567, train_loss_epoch=546]Epoch 90/400:  22%|‚ñà‚ñà‚ñé       | 90/400 [00:15<00:49,  6.21it/s, v_num=1, train_loss_step=550, train_loss_epoch=545]Epoch 91/400:  22%|‚ñà‚ñà‚ñé       | 90/400 [00:15<00:49,  6.21it/s, v_num=1, train_loss_step=550, train_loss_epoch=545]Epoch 91/400:  23%|‚ñà‚ñà‚ñé       | 91/400 [00:15<00:49,  6.23it/s, v_num=1, train_loss_step=550, train_loss_epoch=545]Epoch 91/400:  23%|‚ñà‚ñà‚ñé       | 91/400 [00:15<00:49,  6.23it/s, v_num=1, train_loss_step=559, train_loss_epoch=545]Epoch 92/400:  23%|‚ñà‚ñà‚ñé       | 91/400 [00:15<00:49,  6.23it/s, v_num=1, train_loss_step=559, train_loss_epoch=545]Epoch 92/400:  23%|‚ñà‚ñà‚ñé       | 92/400 [00:15<00:49,  6.24it/s, v_num=1, train_loss_step=559, train_loss_epoch=545]Epoch 92/400:  23%|‚ñà‚ñà‚ñé       | 92/400 [00:15<00:49,  6.24it/s, v_num=1, train_loss_step=554, train_loss_epoch=545]Epoch 93/400:  23%|‚ñà‚ñà‚ñé       | 92/400 [00:15<00:49,  6.24it/s, v_num=1, train_loss_step=554, train_loss_epoch=545]Epoch 93/400:  23%|‚ñà‚ñà‚ñé       | 93/400 [00:15<00:50,  6.05it/s, v_num=1, train_loss_step=554, train_loss_epoch=545]Epoch 93/400:  23%|‚ñà‚ñà‚ñé       | 93/400 [00:15<00:50,  6.05it/s, v_num=1, train_loss_step=545, train_loss_epoch=544]Epoch 94/400:  23%|‚ñà‚ñà‚ñé       | 93/400 [00:15<00:50,  6.05it/s, v_num=1, train_loss_step=545, train_loss_epoch=544]Epoch 94/400:  24%|‚ñà‚ñà‚ñé       | 94/400 [00:15<00:53,  5.73it/s, v_num=1, train_loss_step=545, train_loss_epoch=544]Epoch 94/400:  24%|‚ñà‚ñà‚ñé       | 94/400 [00:15<00:53,  5.73it/s, v_num=1, train_loss_step=523, train_loss_epoch=544]Epoch 95/400:  24%|‚ñà‚ñà‚ñé       | 94/400 [00:15<00:53,  5.73it/s, v_num=1, train_loss_step=523, train_loss_epoch=544]Epoch 95/400:  24%|‚ñà‚ñà‚ñç       | 95/400 [00:15<00:52,  5.84it/s, v_num=1, train_loss_step=523, train_loss_epoch=544]Epoch 95/400:  24%|‚ñà‚ñà‚ñç       | 95/400 [00:15<00:52,  5.84it/s, v_num=1, train_loss_step=515, train_loss_epoch=544]Epoch 96/400:  24%|‚ñà‚ñà‚ñç       | 95/400 [00:15<00:52,  5.84it/s, v_num=1, train_loss_step=515, train_loss_epoch=544]Epoch 96/400:  24%|‚ñà‚ñà‚ñç       | 96/400 [00:16<00:50,  5.98it/s, v_num=1, train_loss_step=515, train_loss_epoch=544]Epoch 96/400:  24%|‚ñà‚ñà‚ñç       | 96/400 [00:16<00:50,  5.98it/s, v_num=1, train_loss_step=567, train_loss_epoch=544]Epoch 97/400:  24%|‚ñà‚ñà‚ñç       | 96/400 [00:16<00:50,  5.98it/s, v_num=1, train_loss_step=567, train_loss_epoch=544]Epoch 97/400:  24%|‚ñà‚ñà‚ñç       | 97/400 [00:16<00:50,  6.03it/s, v_num=1, train_loss_step=567, train_loss_epoch=544]Epoch 97/400:  24%|‚ñà‚ñà‚ñç       | 97/400 [00:16<00:50,  6.03it/s, v_num=1, train_loss_step=547, train_loss_epoch=543]Epoch 98/400:  24%|‚ñà‚ñà‚ñç       | 97/400 [00:16<00:50,  6.03it/s, v_num=1, train_loss_step=547, train_loss_epoch=543]Epoch 98/400:  24%|‚ñà‚ñà‚ñç       | 98/400 [00:16<00:49,  6.09it/s, v_num=1, train_loss_step=547, train_loss_epoch=543]Epoch 98/400:  24%|‚ñà‚ñà‚ñç       | 98/400 [00:16<00:49,  6.09it/s, v_num=1, train_loss_step=557, train_loss_epoch=543]Epoch 99/400:  24%|‚ñà‚ñà‚ñç       | 98/400 [00:16<00:49,  6.09it/s, v_num=1, train_loss_step=557, train_loss_epoch=543]Epoch 99/400:  25%|‚ñà‚ñà‚ñç       | 99/400 [00:16<00:49,  6.06it/s, v_num=1, train_loss_step=557, train_loss_epoch=543]Epoch 99/400:  25%|‚ñà‚ñà‚ñç       | 99/400 [00:16<00:49,  6.06it/s, v_num=1, train_loss_step=520, train_loss_epoch=543]Epoch 100/400:  25%|‚ñà‚ñà‚ñç       | 99/400 [00:16<00:49,  6.06it/s, v_num=1, train_loss_step=520, train_loss_epoch=543]Epoch 100/400:  25%|‚ñà‚ñà‚ñå       | 100/400 [00:16<00:51,  5.82it/s, v_num=1, train_loss_step=520, train_loss_epoch=543]Epoch 100/400:  25%|‚ñà‚ñà‚ñå       | 100/400 [00:16<00:51,  5.82it/s, v_num=1, train_loss_step=504, train_loss_epoch=542]Epoch 101/400:  25%|‚ñà‚ñà‚ñå       | 100/400 [00:16<00:51,  5.82it/s, v_num=1, train_loss_step=504, train_loss_epoch=542]Epoch 101/400:  25%|‚ñà‚ñà‚ñå       | 101/400 [00:16<00:53,  5.59it/s, v_num=1, train_loss_step=504, train_loss_epoch=542]Epoch 101/400:  25%|‚ñà‚ñà‚ñå       | 101/400 [00:16<00:53,  5.59it/s, v_num=1, train_loss_step=579, train_loss_epoch=542]Epoch 102/400:  25%|‚ñà‚ñà‚ñå       | 101/400 [00:16<00:53,  5.59it/s, v_num=1, train_loss_step=579, train_loss_epoch=542]Epoch 102/400:  26%|‚ñà‚ñà‚ñå       | 102/400 [00:17<00:52,  5.72it/s, v_num=1, train_loss_step=579, train_loss_epoch=542]Epoch 102/400:  26%|‚ñà‚ñà‚ñå       | 102/400 [00:17<00:52,  5.72it/s, v_num=1, train_loss_step=518, train_loss_epoch=542]Epoch 103/400:  26%|‚ñà‚ñà‚ñå       | 102/400 [00:17<00:52,  5.72it/s, v_num=1, train_loss_step=518, train_loss_epoch=542]Epoch 103/400:  26%|‚ñà‚ñà‚ñå       | 103/400 [00:17<00:54,  5.43it/s, v_num=1, train_loss_step=518, train_loss_epoch=542]Epoch 103/400:  26%|‚ñà‚ñà‚ñå       | 103/400 [00:17<00:54,  5.43it/s, v_num=1, train_loss_step=555, train_loss_epoch=541]Epoch 104/400:  26%|‚ñà‚ñà‚ñå       | 103/400 [00:17<00:54,  5.43it/s, v_num=1, train_loss_step=555, train_loss_epoch=541]Epoch 104/400:  26%|‚ñà‚ñà‚ñå       | 104/400 [00:17<00:52,  5.59it/s, v_num=1, train_loss_step=555, train_loss_epoch=541]Epoch 104/400:  26%|‚ñà‚ñà‚ñå       | 104/400 [00:17<00:52,  5.59it/s, v_num=1, train_loss_step=566, train_loss_epoch=542]Epoch 105/400:  26%|‚ñà‚ñà‚ñå       | 104/400 [00:17<00:52,  5.59it/s, v_num=1, train_loss_step=566, train_loss_epoch=542]Epoch 105/400:  26%|‚ñà‚ñà‚ñã       | 105/400 [00:17<00:51,  5.71it/s, v_num=1, train_loss_step=566, train_loss_epoch=542]Epoch 105/400:  26%|‚ñà‚ñà‚ñã       | 105/400 [00:17<00:51,  5.71it/s, v_num=1, train_loss_step=531, train_loss_epoch=541]Epoch 106/400:  26%|‚ñà‚ñà‚ñã       | 105/400 [00:17<00:51,  5.71it/s, v_num=1, train_loss_step=531, train_loss_epoch=541]Epoch 106/400:  26%|‚ñà‚ñà‚ñã       | 106/400 [00:17<00:50,  5.82it/s, v_num=1, train_loss_step=531, train_loss_epoch=541]Epoch 106/400:  26%|‚ñà‚ñà‚ñã       | 106/400 [00:17<00:50,  5.82it/s, v_num=1, train_loss_step=532, train_loss_epoch=541]Epoch 107/400:  26%|‚ñà‚ñà‚ñã       | 106/400 [00:17<00:50,  5.82it/s, v_num=1, train_loss_step=532, train_loss_epoch=541]Epoch 107/400:  27%|‚ñà‚ñà‚ñã       | 107/400 [00:17<00:49,  5.88it/s, v_num=1, train_loss_step=532, train_loss_epoch=541]Epoch 107/400:  27%|‚ñà‚ñà‚ñã       | 107/400 [00:17<00:49,  5.88it/s, v_num=1, train_loss_step=510, train_loss_epoch=541]Epoch 108/400:  27%|‚ñà‚ñà‚ñã       | 107/400 [00:17<00:49,  5.88it/s, v_num=1, train_loss_step=510, train_loss_epoch=541]Epoch 108/400:  27%|‚ñà‚ñà‚ñã       | 108/400 [00:18<00:49,  5.90it/s, v_num=1, train_loss_step=510, train_loss_epoch=541]Epoch 108/400:  27%|‚ñà‚ñà‚ñã       | 108/400 [00:18<00:49,  5.90it/s, v_num=1, train_loss_step=528, train_loss_epoch=540]Epoch 109/400:  27%|‚ñà‚ñà‚ñã       | 108/400 [00:18<00:49,  5.90it/s, v_num=1, train_loss_step=528, train_loss_epoch=540]Epoch 109/400:  27%|‚ñà‚ñà‚ñã       | 109/400 [00:18<00:49,  5.93it/s, v_num=1, train_loss_step=528, train_loss_epoch=540]Epoch 109/400:  27%|‚ñà‚ñà‚ñã       | 109/400 [00:18<00:49,  5.93it/s, v_num=1, train_loss_step=539, train_loss_epoch=540]Epoch 110/400:  27%|‚ñà‚ñà‚ñã       | 109/400 [00:18<00:49,  5.93it/s, v_num=1, train_loss_step=539, train_loss_epoch=540]Epoch 110/400:  28%|‚ñà‚ñà‚ñä       | 110/400 [00:18<00:48,  5.96it/s, v_num=1, train_loss_step=539, train_loss_epoch=540]Epoch 110/400:  28%|‚ñà‚ñà‚ñä       | 110/400 [00:18<00:48,  5.96it/s, v_num=1, train_loss_step=583, train_loss_epoch=540]Epoch 111/400:  28%|‚ñà‚ñà‚ñä       | 110/400 [00:18<00:48,  5.96it/s, v_num=1, train_loss_step=583, train_loss_epoch=540]Epoch 111/400:  28%|‚ñà‚ñà‚ñä       | 111/400 [00:18<00:48,  5.90it/s, v_num=1, train_loss_step=583, train_loss_epoch=540]Epoch 111/400:  28%|‚ñà‚ñà‚ñä       | 111/400 [00:18<00:48,  5.90it/s, v_num=1, train_loss_step=550, train_loss_epoch=540]Epoch 112/400:  28%|‚ñà‚ñà‚ñä       | 111/400 [00:18<00:48,  5.90it/s, v_num=1, train_loss_step=550, train_loss_epoch=540]Epoch 112/400:  28%|‚ñà‚ñà‚ñä       | 112/400 [00:18<00:48,  5.96it/s, v_num=1, train_loss_step=550, train_loss_epoch=540]Epoch 112/400:  28%|‚ñà‚ñà‚ñä       | 112/400 [00:18<00:48,  5.96it/s, v_num=1, train_loss_step=528, train_loss_epoch=540]Epoch 113/400:  28%|‚ñà‚ñà‚ñä       | 112/400 [00:18<00:48,  5.96it/s, v_num=1, train_loss_step=528, train_loss_epoch=540]Epoch 113/400:  28%|‚ñà‚ñà‚ñä       | 113/400 [00:18<00:48,  5.94it/s, v_num=1, train_loss_step=528, train_loss_epoch=540]Epoch 113/400:  28%|‚ñà‚ñà‚ñä       | 113/400 [00:18<00:48,  5.94it/s, v_num=1, train_loss_step=533, train_loss_epoch=539]Epoch 114/400:  28%|‚ñà‚ñà‚ñä       | 113/400 [00:18<00:48,  5.94it/s, v_num=1, train_loss_step=533, train_loss_epoch=539]Epoch 114/400:  28%|‚ñà‚ñà‚ñä       | 114/400 [00:19<00:47,  6.01it/s, v_num=1, train_loss_step=533, train_loss_epoch=539]Epoch 114/400:  28%|‚ñà‚ñà‚ñä       | 114/400 [00:19<00:47,  6.01it/s, v_num=1, train_loss_step=532, train_loss_epoch=539]Epoch 115/400:  28%|‚ñà‚ñà‚ñä       | 114/400 [00:19<00:47,  6.01it/s, v_num=1, train_loss_step=532, train_loss_epoch=539]Epoch 115/400:  29%|‚ñà‚ñà‚ñâ       | 115/400 [00:19<00:46,  6.09it/s, v_num=1, train_loss_step=532, train_loss_epoch=539]Epoch 115/400:  29%|‚ñà‚ñà‚ñâ       | 115/400 [00:19<00:46,  6.09it/s, v_num=1, train_loss_step=529, train_loss_epoch=539]Epoch 116/400:  29%|‚ñà‚ñà‚ñâ       | 115/400 [00:19<00:46,  6.09it/s, v_num=1, train_loss_step=529, train_loss_epoch=539]Epoch 116/400:  29%|‚ñà‚ñà‚ñâ       | 116/400 [00:19<00:46,  6.10it/s, v_num=1, train_loss_step=529, train_loss_epoch=539]Epoch 116/400:  29%|‚ñà‚ñà‚ñâ       | 116/400 [00:19<00:46,  6.10it/s, v_num=1, train_loss_step=528, train_loss_epoch=538]Epoch 117/400:  29%|‚ñà‚ñà‚ñâ       | 116/400 [00:19<00:46,  6.10it/s, v_num=1, train_loss_step=528, train_loss_epoch=538]Epoch 117/400:  29%|‚ñà‚ñà‚ñâ       | 117/400 [00:19<00:46,  6.08it/s, v_num=1, train_loss_step=528, train_loss_epoch=538]Epoch 117/400:  29%|‚ñà‚ñà‚ñâ       | 117/400 [00:19<00:46,  6.08it/s, v_num=1, train_loss_step=572, train_loss_epoch=539]Epoch 118/400:  29%|‚ñà‚ñà‚ñâ       | 117/400 [00:19<00:46,  6.08it/s, v_num=1, train_loss_step=572, train_loss_epoch=539]Epoch 118/400:  30%|‚ñà‚ñà‚ñâ       | 118/400 [00:19<00:46,  6.09it/s, v_num=1, train_loss_step=572, train_loss_epoch=539]Epoch 118/400:  30%|‚ñà‚ñà‚ñâ       | 118/400 [00:19<00:46,  6.09it/s, v_num=1, train_loss_step=541, train_loss_epoch=538]Epoch 119/400:  30%|‚ñà‚ñà‚ñâ       | 118/400 [00:19<00:46,  6.09it/s, v_num=1, train_loss_step=541, train_loss_epoch=538]Epoch 119/400:  30%|‚ñà‚ñà‚ñâ       | 119/400 [00:19<00:46,  6.10it/s, v_num=1, train_loss_step=541, train_loss_epoch=538]Epoch 119/400:  30%|‚ñà‚ñà‚ñâ       | 119/400 [00:19<00:46,  6.10it/s, v_num=1, train_loss_step=587, train_loss_epoch=538]Epoch 120/400:  30%|‚ñà‚ñà‚ñâ       | 119/400 [00:19<00:46,  6.10it/s, v_num=1, train_loss_step=587, train_loss_epoch=538]Epoch 120/400:  30%|‚ñà‚ñà‚ñà       | 120/400 [00:20<00:45,  6.09it/s, v_num=1, train_loss_step=587, train_loss_epoch=538]Epoch 120/400:  30%|‚ñà‚ñà‚ñà       | 120/400 [00:20<00:45,  6.09it/s, v_num=1, train_loss_step=513, train_loss_epoch=538]Epoch 121/400:  30%|‚ñà‚ñà‚ñà       | 120/400 [00:20<00:45,  6.09it/s, v_num=1, train_loss_step=513, train_loss_epoch=538]Epoch 121/400:  30%|‚ñà‚ñà‚ñà       | 121/400 [00:20<00:45,  6.11it/s, v_num=1, train_loss_step=513, train_loss_epoch=538]Epoch 121/400:  30%|‚ñà‚ñà‚ñà       | 121/400 [00:20<00:45,  6.11it/s, v_num=1, train_loss_step=532, train_loss_epoch=538]Epoch 122/400:  30%|‚ñà‚ñà‚ñà       | 121/400 [00:20<00:45,  6.11it/s, v_num=1, train_loss_step=532, train_loss_epoch=538]Epoch 122/400:  30%|‚ñà‚ñà‚ñà       | 122/400 [00:20<00:45,  6.18it/s, v_num=1, train_loss_step=532, train_loss_epoch=538]Epoch 122/400:  30%|‚ñà‚ñà‚ñà       | 122/400 [00:20<00:45,  6.18it/s, v_num=1, train_loss_step=546, train_loss_epoch=537]Epoch 123/400:  30%|‚ñà‚ñà‚ñà       | 122/400 [00:20<00:45,  6.18it/s, v_num=1, train_loss_step=546, train_loss_epoch=537]Epoch 123/400:  31%|‚ñà‚ñà‚ñà       | 123/400 [00:20<00:45,  6.14it/s, v_num=1, train_loss_step=546, train_loss_epoch=537]Epoch 123/400:  31%|‚ñà‚ñà‚ñà       | 123/400 [00:20<00:45,  6.14it/s, v_num=1, train_loss_step=511, train_loss_epoch=537]Epoch 124/400:  31%|‚ñà‚ñà‚ñà       | 123/400 [00:20<00:45,  6.14it/s, v_num=1, train_loss_step=511, train_loss_epoch=537]Epoch 124/400:  31%|‚ñà‚ñà‚ñà       | 124/400 [00:20<00:44,  6.14it/s, v_num=1, train_loss_step=511, train_loss_epoch=537]Epoch 124/400:  31%|‚ñà‚ñà‚ñà       | 124/400 [00:20<00:44,  6.14it/s, v_num=1, train_loss_step=528, train_loss_epoch=537]Epoch 125/400:  31%|‚ñà‚ñà‚ñà       | 124/400 [00:20<00:44,  6.14it/s, v_num=1, train_loss_step=528, train_loss_epoch=537]Epoch 125/400:  31%|‚ñà‚ñà‚ñà‚ñè      | 125/400 [00:20<00:45,  6.11it/s, v_num=1, train_loss_step=528, train_loss_epoch=537]Epoch 125/400:  31%|‚ñà‚ñà‚ñà‚ñè      | 125/400 [00:20<00:45,  6.11it/s, v_num=1, train_loss_step=506, train_loss_epoch=536]Epoch 126/400:  31%|‚ñà‚ñà‚ñà‚ñè      | 125/400 [00:20<00:45,  6.11it/s, v_num=1, train_loss_step=506, train_loss_epoch=536]Epoch 126/400:  32%|‚ñà‚ñà‚ñà‚ñè      | 126/400 [00:21<00:44,  6.13it/s, v_num=1, train_loss_step=506, train_loss_epoch=536]Epoch 126/400:  32%|‚ñà‚ñà‚ñà‚ñè      | 126/400 [00:21<00:44,  6.13it/s, v_num=1, train_loss_step=544, train_loss_epoch=536]Epoch 127/400:  32%|‚ñà‚ñà‚ñà‚ñè      | 126/400 [00:21<00:44,  6.13it/s, v_num=1, train_loss_step=544, train_loss_epoch=536]Epoch 127/400:  32%|‚ñà‚ñà‚ñà‚ñè      | 127/400 [00:21<00:44,  6.14it/s, v_num=1, train_loss_step=544, train_loss_epoch=536]Epoch 127/400:  32%|‚ñà‚ñà‚ñà‚ñè      | 127/400 [00:21<00:44,  6.14it/s, v_num=1, train_loss_step=549, train_loss_epoch=536]Epoch 128/400:  32%|‚ñà‚ñà‚ñà‚ñè      | 127/400 [00:21<00:44,  6.14it/s, v_num=1, train_loss_step=549, train_loss_epoch=536]Epoch 128/400:  32%|‚ñà‚ñà‚ñà‚ñè      | 128/400 [00:21<00:44,  6.13it/s, v_num=1, train_loss_step=549, train_loss_epoch=536]Epoch 128/400:  32%|‚ñà‚ñà‚ñà‚ñè      | 128/400 [00:21<00:44,  6.13it/s, v_num=1, train_loss_step=525, train_loss_epoch=536]Epoch 129/400:  32%|‚ñà‚ñà‚ñà‚ñè      | 128/400 [00:21<00:44,  6.13it/s, v_num=1, train_loss_step=525, train_loss_epoch=536]Epoch 129/400:  32%|‚ñà‚ñà‚ñà‚ñè      | 129/400 [00:21<00:44,  6.04it/s, v_num=1, train_loss_step=525, train_loss_epoch=536]Epoch 129/400:  32%|‚ñà‚ñà‚ñà‚ñè      | 129/400 [00:21<00:44,  6.04it/s, v_num=1, train_loss_step=536, train_loss_epoch=535]Epoch 130/400:  32%|‚ñà‚ñà‚ñà‚ñè      | 129/400 [00:21<00:44,  6.04it/s, v_num=1, train_loss_step=536, train_loss_epoch=535]Epoch 130/400:  32%|‚ñà‚ñà‚ñà‚ñé      | 130/400 [00:21<00:46,  5.79it/s, v_num=1, train_loss_step=536, train_loss_epoch=535]Epoch 130/400:  32%|‚ñà‚ñà‚ñà‚ñé      | 130/400 [00:21<00:46,  5.79it/s, v_num=1, train_loss_step=528, train_loss_epoch=535]Epoch 131/400:  32%|‚ñà‚ñà‚ñà‚ñé      | 130/400 [00:21<00:46,  5.79it/s, v_num=1, train_loss_step=528, train_loss_epoch=535]Epoch 131/400:  33%|‚ñà‚ñà‚ñà‚ñé      | 131/400 [00:21<00:47,  5.65it/s, v_num=1, train_loss_step=528, train_loss_epoch=535]Epoch 131/400:  33%|‚ñà‚ñà‚ñà‚ñé      | 131/400 [00:21<00:47,  5.65it/s, v_num=1, train_loss_step=538, train_loss_epoch=535]Epoch 132/400:  33%|‚ñà‚ñà‚ñà‚ñé      | 131/400 [00:21<00:47,  5.65it/s, v_num=1, train_loss_step=538, train_loss_epoch=535]Epoch 132/400:  33%|‚ñà‚ñà‚ñà‚ñé      | 132/400 [00:22<00:49,  5.46it/s, v_num=1, train_loss_step=538, train_loss_epoch=535]Epoch 132/400:  33%|‚ñà‚ñà‚ñà‚ñé      | 132/400 [00:22<00:49,  5.46it/s, v_num=1, train_loss_step=539, train_loss_epoch=535]Epoch 133/400:  33%|‚ñà‚ñà‚ñà‚ñé      | 132/400 [00:22<00:49,  5.46it/s, v_num=1, train_loss_step=539, train_loss_epoch=535]Epoch 133/400:  33%|‚ñà‚ñà‚ñà‚ñé      | 133/400 [00:22<00:49,  5.39it/s, v_num=1, train_loss_step=539, train_loss_epoch=535]Epoch 133/400:  33%|‚ñà‚ñà‚ñà‚ñé      | 133/400 [00:22<00:49,  5.39it/s, v_num=1, train_loss_step=543, train_loss_epoch=535]Epoch 134/400:  33%|‚ñà‚ñà‚ñà‚ñé      | 133/400 [00:22<00:49,  5.39it/s, v_num=1, train_loss_step=543, train_loss_epoch=535]Epoch 134/400:  34%|‚ñà‚ñà‚ñà‚ñé      | 134/400 [00:22<00:47,  5.59it/s, v_num=1, train_loss_step=543, train_loss_epoch=535]Epoch 134/400:  34%|‚ñà‚ñà‚ñà‚ñé      | 134/400 [00:22<00:47,  5.59it/s, v_num=1, train_loss_step=555, train_loss_epoch=534]Epoch 135/400:  34%|‚ñà‚ñà‚ñà‚ñé      | 134/400 [00:22<00:47,  5.59it/s, v_num=1, train_loss_step=555, train_loss_epoch=534]Epoch 135/400:  34%|‚ñà‚ñà‚ñà‚ñç      | 135/400 [00:22<00:46,  5.74it/s, v_num=1, train_loss_step=555, train_loss_epoch=534]Epoch 135/400:  34%|‚ñà‚ñà‚ñà‚ñç      | 135/400 [00:22<00:46,  5.74it/s, v_num=1, train_loss_step=561, train_loss_epoch=534]Epoch 136/400:  34%|‚ñà‚ñà‚ñà‚ñç      | 135/400 [00:22<00:46,  5.74it/s, v_num=1, train_loss_step=561, train_loss_epoch=534]Epoch 136/400:  34%|‚ñà‚ñà‚ñà‚ñç      | 136/400 [00:22<00:44,  5.88it/s, v_num=1, train_loss_step=561, train_loss_epoch=534]Epoch 136/400:  34%|‚ñà‚ñà‚ñà‚ñç      | 136/400 [00:22<00:44,  5.88it/s, v_num=1, train_loss_step=521, train_loss_epoch=534]Epoch 137/400:  34%|‚ñà‚ñà‚ñà‚ñç      | 136/400 [00:22<00:44,  5.88it/s, v_num=1, train_loss_step=521, train_loss_epoch=534]Epoch 137/400:  34%|‚ñà‚ñà‚ñà‚ñç      | 137/400 [00:22<00:43,  5.98it/s, v_num=1, train_loss_step=521, train_loss_epoch=534]Epoch 137/400:  34%|‚ñà‚ñà‚ñà‚ñç      | 137/400 [00:22<00:43,  5.98it/s, v_num=1, train_loss_step=532, train_loss_epoch=534]Epoch 138/400:  34%|‚ñà‚ñà‚ñà‚ñç      | 137/400 [00:22<00:43,  5.98it/s, v_num=1, train_loss_step=532, train_loss_epoch=534]Epoch 138/400:  34%|‚ñà‚ñà‚ñà‚ñç      | 138/400 [00:23<00:43,  6.05it/s, v_num=1, train_loss_step=532, train_loss_epoch=534]Epoch 138/400:  34%|‚ñà‚ñà‚ñà‚ñç      | 138/400 [00:23<00:43,  6.05it/s, v_num=1, train_loss_step=501, train_loss_epoch=534]Epoch 139/400:  34%|‚ñà‚ñà‚ñà‚ñç      | 138/400 [00:23<00:43,  6.05it/s, v_num=1, train_loss_step=501, train_loss_epoch=534]Epoch 139/400:  35%|‚ñà‚ñà‚ñà‚ñç      | 139/400 [00:23<00:42,  6.10it/s, v_num=1, train_loss_step=501, train_loss_epoch=534]Epoch 139/400:  35%|‚ñà‚ñà‚ñà‚ñç      | 139/400 [00:23<00:42,  6.10it/s, v_num=1, train_loss_step=539, train_loss_epoch=533]Epoch 140/400:  35%|‚ñà‚ñà‚ñà‚ñç      | 139/400 [00:23<00:42,  6.10it/s, v_num=1, train_loss_step=539, train_loss_epoch=533]Epoch 140/400:  35%|‚ñà‚ñà‚ñà‚ñå      | 140/400 [00:23<00:42,  6.13it/s, v_num=1, train_loss_step=539, train_loss_epoch=533]Epoch 140/400:  35%|‚ñà‚ñà‚ñà‚ñå      | 140/400 [00:23<00:42,  6.13it/s, v_num=1, train_loss_step=548, train_loss_epoch=534]Epoch 141/400:  35%|‚ñà‚ñà‚ñà‚ñå      | 140/400 [00:23<00:42,  6.13it/s, v_num=1, train_loss_step=548, train_loss_epoch=534]Epoch 141/400:  35%|‚ñà‚ñà‚ñà‚ñå      | 141/400 [00:23<00:44,  5.88it/s, v_num=1, train_loss_step=548, train_loss_epoch=534]Epoch 141/400:  35%|‚ñà‚ñà‚ñà‚ñå      | 141/400 [00:23<00:44,  5.88it/s, v_num=1, train_loss_step=482, train_loss_epoch=533]Epoch 142/400:  35%|‚ñà‚ñà‚ñà‚ñå      | 141/400 [00:23<00:44,  5.88it/s, v_num=1, train_loss_step=482, train_loss_epoch=533]Epoch 142/400:  36%|‚ñà‚ñà‚ñà‚ñå      | 142/400 [00:23<00:45,  5.72it/s, v_num=1, train_loss_step=482, train_loss_epoch=533]Epoch 142/400:  36%|‚ñà‚ñà‚ñà‚ñå      | 142/400 [00:23<00:45,  5.72it/s, v_num=1, train_loss_step=540, train_loss_epoch=533]Epoch 143/400:  36%|‚ñà‚ñà‚ñà‚ñå      | 142/400 [00:23<00:45,  5.72it/s, v_num=1, train_loss_step=540, train_loss_epoch=533]Epoch 143/400:  36%|‚ñà‚ñà‚ñà‚ñå      | 143/400 [00:23<00:43,  5.84it/s, v_num=1, train_loss_step=540, train_loss_epoch=533]Epoch 143/400:  36%|‚ñà‚ñà‚ñà‚ñå      | 143/400 [00:23<00:43,  5.84it/s, v_num=1, train_loss_step=536, train_loss_epoch=532]Epoch 144/400:  36%|‚ñà‚ñà‚ñà‚ñå      | 143/400 [00:23<00:43,  5.84it/s, v_num=1, train_loss_step=536, train_loss_epoch=532]Epoch 144/400:  36%|‚ñà‚ñà‚ñà‚ñå      | 144/400 [00:24<00:43,  5.87it/s, v_num=1, train_loss_step=536, train_loss_epoch=532]Epoch 144/400:  36%|‚ñà‚ñà‚ñà‚ñå      | 144/400 [00:24<00:43,  5.87it/s, v_num=1, train_loss_step=545, train_loss_epoch=532]Epoch 145/400:  36%|‚ñà‚ñà‚ñà‚ñå      | 144/400 [00:24<00:43,  5.87it/s, v_num=1, train_loss_step=545, train_loss_epoch=532]Epoch 145/400:  36%|‚ñà‚ñà‚ñà‚ñã      | 145/400 [00:24<00:44,  5.72it/s, v_num=1, train_loss_step=545, train_loss_epoch=532]Epoch 145/400:  36%|‚ñà‚ñà‚ñà‚ñã      | 145/400 [00:24<00:44,  5.72it/s, v_num=1, train_loss_step=531, train_loss_epoch=532]Epoch 146/400:  36%|‚ñà‚ñà‚ñà‚ñã      | 145/400 [00:24<00:44,  5.72it/s, v_num=1, train_loss_step=531, train_loss_epoch=532]Epoch 146/400:  36%|‚ñà‚ñà‚ñà‚ñã      | 146/400 [00:24<00:45,  5.61it/s, v_num=1, train_loss_step=531, train_loss_epoch=532]Epoch 146/400:  36%|‚ñà‚ñà‚ñà‚ñã      | 146/400 [00:24<00:45,  5.61it/s, v_num=1, train_loss_step=578, train_loss_epoch=532]Epoch 147/400:  36%|‚ñà‚ñà‚ñà‚ñã      | 146/400 [00:24<00:45,  5.61it/s, v_num=1, train_loss_step=578, train_loss_epoch=532]Epoch 147/400:  37%|‚ñà‚ñà‚ñà‚ñã      | 147/400 [00:24<00:45,  5.54it/s, v_num=1, train_loss_step=578, train_loss_epoch=532]Epoch 147/400:  37%|‚ñà‚ñà‚ñà‚ñã      | 147/400 [00:24<00:45,  5.54it/s, v_num=1, train_loss_step=527, train_loss_epoch=532]Epoch 148/400:  37%|‚ñà‚ñà‚ñà‚ñã      | 147/400 [00:24<00:45,  5.54it/s, v_num=1, train_loss_step=527, train_loss_epoch=532]Epoch 148/400:  37%|‚ñà‚ñà‚ñà‚ñã      | 148/400 [00:24<00:46,  5.40it/s, v_num=1, train_loss_step=527, train_loss_epoch=532]Epoch 148/400:  37%|‚ñà‚ñà‚ñà‚ñã      | 148/400 [00:24<00:46,  5.40it/s, v_num=1, train_loss_step=550, train_loss_epoch=532]Epoch 149/400:  37%|‚ñà‚ñà‚ñà‚ñã      | 148/400 [00:24<00:46,  5.40it/s, v_num=1, train_loss_step=550, train_loss_epoch=532]Epoch 149/400:  37%|‚ñà‚ñà‚ñà‚ñã      | 149/400 [00:25<00:44,  5.63it/s, v_num=1, train_loss_step=550, train_loss_epoch=532]Epoch 149/400:  37%|‚ñà‚ñà‚ñà‚ñã      | 149/400 [00:25<00:44,  5.63it/s, v_num=1, train_loss_step=511, train_loss_epoch=531]Epoch 150/400:  37%|‚ñà‚ñà‚ñà‚ñã      | 149/400 [00:25<00:44,  5.63it/s, v_num=1, train_loss_step=511, train_loss_epoch=531]Epoch 150/400:  38%|‚ñà‚ñà‚ñà‚ñä      | 150/400 [00:25<00:43,  5.71it/s, v_num=1, train_loss_step=511, train_loss_epoch=531]Epoch 150/400:  38%|‚ñà‚ñà‚ñà‚ñä      | 150/400 [00:25<00:43,  5.71it/s, v_num=1, train_loss_step=508, train_loss_epoch=531]Epoch 151/400:  38%|‚ñà‚ñà‚ñà‚ñä      | 150/400 [00:25<00:43,  5.71it/s, v_num=1, train_loss_step=508, train_loss_epoch=531]Epoch 151/400:  38%|‚ñà‚ñà‚ñà‚ñä      | 151/400 [00:25<00:42,  5.87it/s, v_num=1, train_loss_step=508, train_loss_epoch=531]Epoch 151/400:  38%|‚ñà‚ñà‚ñà‚ñä      | 151/400 [00:25<00:42,  5.87it/s, v_num=1, train_loss_step=565, train_loss_epoch=531]Epoch 152/400:  38%|‚ñà‚ñà‚ñà‚ñä      | 151/400 [00:25<00:42,  5.87it/s, v_num=1, train_loss_step=565, train_loss_epoch=531]Epoch 152/400:  38%|‚ñà‚ñà‚ñà‚ñä      | 152/400 [00:25<00:41,  5.96it/s, v_num=1, train_loss_step=565, train_loss_epoch=531]Epoch 152/400:  38%|‚ñà‚ñà‚ñà‚ñä      | 152/400 [00:25<00:41,  5.96it/s, v_num=1, train_loss_step=546, train_loss_epoch=531]Epoch 153/400:  38%|‚ñà‚ñà‚ñà‚ñä      | 152/400 [00:25<00:41,  5.96it/s, v_num=1, train_loss_step=546, train_loss_epoch=531]Epoch 153/400:  38%|‚ñà‚ñà‚ñà‚ñä      | 153/400 [00:25<00:40,  6.04it/s, v_num=1, train_loss_step=546, train_loss_epoch=531]Epoch 153/400:  38%|‚ñà‚ñà‚ñà‚ñä      | 153/400 [00:25<00:40,  6.04it/s, v_num=1, train_loss_step=512, train_loss_epoch=531]Epoch 154/400:  38%|‚ñà‚ñà‚ñà‚ñä      | 153/400 [00:25<00:40,  6.04it/s, v_num=1, train_loss_step=512, train_loss_epoch=531]Epoch 154/400:  38%|‚ñà‚ñà‚ñà‚ñä      | 154/400 [00:25<00:40,  6.06it/s, v_num=1, train_loss_step=512, train_loss_epoch=531]Epoch 154/400:  38%|‚ñà‚ñà‚ñà‚ñä      | 154/400 [00:25<00:40,  6.06it/s, v_num=1, train_loss_step=526, train_loss_epoch=530]Epoch 155/400:  38%|‚ñà‚ñà‚ñà‚ñä      | 154/400 [00:25<00:40,  6.06it/s, v_num=1, train_loss_step=526, train_loss_epoch=530]Epoch 155/400:  39%|‚ñà‚ñà‚ñà‚ñâ      | 155/400 [00:26<00:40,  6.06it/s, v_num=1, train_loss_step=526, train_loss_epoch=530]Epoch 155/400:  39%|‚ñà‚ñà‚ñà‚ñâ      | 155/400 [00:26<00:40,  6.06it/s, v_num=1, train_loss_step=563, train_loss_epoch=530]Epoch 156/400:  39%|‚ñà‚ñà‚ñà‚ñâ      | 155/400 [00:26<00:40,  6.06it/s, v_num=1, train_loss_step=563, train_loss_epoch=530]Epoch 156/400:  39%|‚ñà‚ñà‚ñà‚ñâ      | 156/400 [00:26<00:40,  6.09it/s, v_num=1, train_loss_step=563, train_loss_epoch=530]Epoch 156/400:  39%|‚ñà‚ñà‚ñà‚ñâ      | 156/400 [00:26<00:40,  6.09it/s, v_num=1, train_loss_step=550, train_loss_epoch=529]Epoch 157/400:  39%|‚ñà‚ñà‚ñà‚ñâ      | 156/400 [00:26<00:40,  6.09it/s, v_num=1, train_loss_step=550, train_loss_epoch=529]Epoch 157/400:  39%|‚ñà‚ñà‚ñà‚ñâ      | 157/400 [00:26<00:39,  6.11it/s, v_num=1, train_loss_step=550, train_loss_epoch=529]Epoch 157/400:  39%|‚ñà‚ñà‚ñà‚ñâ      | 157/400 [00:26<00:39,  6.11it/s, v_num=1, train_loss_step=564, train_loss_epoch=530]Epoch 158/400:  39%|‚ñà‚ñà‚ñà‚ñâ      | 157/400 [00:26<00:39,  6.11it/s, v_num=1, train_loss_step=564, train_loss_epoch=530]Epoch 158/400:  40%|‚ñà‚ñà‚ñà‚ñâ      | 158/400 [00:26<00:39,  6.15it/s, v_num=1, train_loss_step=564, train_loss_epoch=530]Epoch 158/400:  40%|‚ñà‚ñà‚ñà‚ñâ      | 158/400 [00:26<00:39,  6.15it/s, v_num=1, train_loss_step=571, train_loss_epoch=530]Epoch 159/400:  40%|‚ñà‚ñà‚ñà‚ñâ      | 158/400 [00:26<00:39,  6.15it/s, v_num=1, train_loss_step=571, train_loss_epoch=530]Epoch 159/400:  40%|‚ñà‚ñà‚ñà‚ñâ      | 159/400 [00:26<00:38,  6.20it/s, v_num=1, train_loss_step=571, train_loss_epoch=530]Epoch 159/400:  40%|‚ñà‚ñà‚ñà‚ñâ      | 159/400 [00:26<00:38,  6.20it/s, v_num=1, train_loss_step=545, train_loss_epoch=530]Epoch 160/400:  40%|‚ñà‚ñà‚ñà‚ñâ      | 159/400 [00:26<00:38,  6.20it/s, v_num=1, train_loss_step=545, train_loss_epoch=530]Epoch 160/400:  40%|‚ñà‚ñà‚ñà‚ñà      | 160/400 [00:26<00:38,  6.23it/s, v_num=1, train_loss_step=545, train_loss_epoch=530]Epoch 160/400:  40%|‚ñà‚ñà‚ñà‚ñà      | 160/400 [00:26<00:38,  6.23it/s, v_num=1, train_loss_step=562, train_loss_epoch=529]Epoch 161/400:  40%|‚ñà‚ñà‚ñà‚ñà      | 160/400 [00:26<00:38,  6.23it/s, v_num=1, train_loss_step=562, train_loss_epoch=529]Epoch 161/400:  40%|‚ñà‚ñà‚ñà‚ñà      | 161/400 [00:27<00:38,  6.17it/s, v_num=1, train_loss_step=562, train_loss_epoch=529]Epoch 161/400:  40%|‚ñà‚ñà‚ñà‚ñà      | 161/400 [00:27<00:38,  6.17it/s, v_num=1, train_loss_step=520, train_loss_epoch=529]Epoch 162/400:  40%|‚ñà‚ñà‚ñà‚ñà      | 161/400 [00:27<00:38,  6.17it/s, v_num=1, train_loss_step=520, train_loss_epoch=529]Epoch 162/400:  40%|‚ñà‚ñà‚ñà‚ñà      | 162/400 [00:27<00:39,  6.05it/s, v_num=1, train_loss_step=520, train_loss_epoch=529]Epoch 162/400:  40%|‚ñà‚ñà‚ñà‚ñà      | 162/400 [00:27<00:39,  6.05it/s, v_num=1, train_loss_step=530, train_loss_epoch=529]Epoch 163/400:  40%|‚ñà‚ñà‚ñà‚ñà      | 162/400 [00:27<00:39,  6.05it/s, v_num=1, train_loss_step=530, train_loss_epoch=529]Epoch 163/400:  41%|‚ñà‚ñà‚ñà‚ñà      | 163/400 [00:27<00:38,  6.10it/s, v_num=1, train_loss_step=530, train_loss_epoch=529]Epoch 163/400:  41%|‚ñà‚ñà‚ñà‚ñà      | 163/400 [00:27<00:38,  6.10it/s, v_num=1, train_loss_step=545, train_loss_epoch=529]Epoch 164/400:  41%|‚ñà‚ñà‚ñà‚ñà      | 163/400 [00:27<00:38,  6.10it/s, v_num=1, train_loss_step=545, train_loss_epoch=529]Epoch 164/400:  41%|‚ñà‚ñà‚ñà‚ñà      | 164/400 [00:27<00:38,  6.15it/s, v_num=1, train_loss_step=545, train_loss_epoch=529]Epoch 164/400:  41%|‚ñà‚ñà‚ñà‚ñà      | 164/400 [00:27<00:38,  6.15it/s, v_num=1, train_loss_step=529, train_loss_epoch=528]Epoch 165/400:  41%|‚ñà‚ñà‚ñà‚ñà      | 164/400 [00:27<00:38,  6.15it/s, v_num=1, train_loss_step=529, train_loss_epoch=528]Epoch 165/400:  41%|‚ñà‚ñà‚ñà‚ñà‚ñè     | 165/400 [00:27<00:38,  6.17it/s, v_num=1, train_loss_step=529, train_loss_epoch=528]Epoch 165/400:  41%|‚ñà‚ñà‚ñà‚ñà‚ñè     | 165/400 [00:27<00:38,  6.17it/s, v_num=1, train_loss_step=510, train_loss_epoch=528]Epoch 166/400:  41%|‚ñà‚ñà‚ñà‚ñà‚ñè     | 165/400 [00:27<00:38,  6.17it/s, v_num=1, train_loss_step=510, train_loss_epoch=528]Epoch 166/400:  42%|‚ñà‚ñà‚ñà‚ñà‚ñè     | 166/400 [00:27<00:37,  6.20it/s, v_num=1, train_loss_step=510, train_loss_epoch=528]Epoch 166/400:  42%|‚ñà‚ñà‚ñà‚ñà‚ñè     | 166/400 [00:27<00:37,  6.20it/s, v_num=1, train_loss_step=536, train_loss_epoch=528]Epoch 167/400:  42%|‚ñà‚ñà‚ñà‚ñà‚ñè     | 166/400 [00:27<00:37,  6.20it/s, v_num=1, train_loss_step=536, train_loss_epoch=528]Epoch 167/400:  42%|‚ñà‚ñà‚ñà‚ñà‚ñè     | 167/400 [00:28<00:39,  5.92it/s, v_num=1, train_loss_step=536, train_loss_epoch=528]Epoch 167/400:  42%|‚ñà‚ñà‚ñà‚ñà‚ñè     | 167/400 [00:28<00:39,  5.92it/s, v_num=1, train_loss_step=519, train_loss_epoch=528]Epoch 168/400:  42%|‚ñà‚ñà‚ñà‚ñà‚ñè     | 167/400 [00:28<00:39,  5.92it/s, v_num=1, train_loss_step=519, train_loss_epoch=528]Epoch 168/400:  42%|‚ñà‚ñà‚ñà‚ñà‚ñè     | 168/400 [00:28<00:38,  6.00it/s, v_num=1, train_loss_step=519, train_loss_epoch=528]Epoch 168/400:  42%|‚ñà‚ñà‚ñà‚ñà‚ñè     | 168/400 [00:28<00:38,  6.00it/s, v_num=1, train_loss_step=526, train_loss_epoch=527]Epoch 169/400:  42%|‚ñà‚ñà‚ñà‚ñà‚ñè     | 168/400 [00:28<00:38,  6.00it/s, v_num=1, train_loss_step=526, train_loss_epoch=527]Epoch 169/400:  42%|‚ñà‚ñà‚ñà‚ñà‚ñè     | 169/400 [00:28<00:38,  6.06it/s, v_num=1, train_loss_step=526, train_loss_epoch=527]Epoch 169/400:  42%|‚ñà‚ñà‚ñà‚ñà‚ñè     | 169/400 [00:28<00:38,  6.06it/s, v_num=1, train_loss_step=554, train_loss_epoch=527]Epoch 170/400:  42%|‚ñà‚ñà‚ñà‚ñà‚ñè     | 169/400 [00:28<00:38,  6.06it/s, v_num=1, train_loss_step=554, train_loss_epoch=527]Epoch 170/400:  42%|‚ñà‚ñà‚ñà‚ñà‚ñé     | 170/400 [00:28<00:38,  5.97it/s, v_num=1, train_loss_step=554, train_loss_epoch=527]Epoch 170/400:  42%|‚ñà‚ñà‚ñà‚ñà‚ñé     | 170/400 [00:28<00:38,  5.97it/s, v_num=1, train_loss_step=563, train_loss_epoch=527]Epoch 171/400:  42%|‚ñà‚ñà‚ñà‚ñà‚ñé     | 170/400 [00:28<00:38,  5.97it/s, v_num=1, train_loss_step=563, train_loss_epoch=527]Epoch 171/400:  43%|‚ñà‚ñà‚ñà‚ñà‚ñé     | 171/400 [00:28<00:39,  5.77it/s, v_num=1, train_loss_step=563, train_loss_epoch=527]Epoch 171/400:  43%|‚ñà‚ñà‚ñà‚ñà‚ñé     | 171/400 [00:28<00:39,  5.77it/s, v_num=1, train_loss_step=542, train_loss_epoch=527]Epoch 172/400:  43%|‚ñà‚ñà‚ñà‚ñà‚ñé     | 171/400 [00:28<00:39,  5.77it/s, v_num=1, train_loss_step=542, train_loss_epoch=527]Epoch 172/400:  43%|‚ñà‚ñà‚ñà‚ñà‚ñé     | 172/400 [00:28<00:39,  5.81it/s, v_num=1, train_loss_step=542, train_loss_epoch=527]Epoch 172/400:  43%|‚ñà‚ñà‚ñà‚ñà‚ñé     | 172/400 [00:28<00:39,  5.81it/s, v_num=1, train_loss_step=502, train_loss_epoch=527]Epoch 173/400:  43%|‚ñà‚ñà‚ñà‚ñà‚ñé     | 172/400 [00:28<00:39,  5.81it/s, v_num=1, train_loss_step=502, train_loss_epoch=527]Epoch 173/400:  43%|‚ñà‚ñà‚ñà‚ñà‚ñé     | 173/400 [00:29<00:38,  5.85it/s, v_num=1, train_loss_step=502, train_loss_epoch=527]Epoch 173/400:  43%|‚ñà‚ñà‚ñà‚ñà‚ñé     | 173/400 [00:29<00:38,  5.85it/s, v_num=1, train_loss_step=536, train_loss_epoch=527]Epoch 174/400:  43%|‚ñà‚ñà‚ñà‚ñà‚ñé     | 173/400 [00:29<00:38,  5.85it/s, v_num=1, train_loss_step=536, train_loss_epoch=527]Epoch 174/400:  44%|‚ñà‚ñà‚ñà‚ñà‚ñé     | 174/400 [00:29<00:40,  5.60it/s, v_num=1, train_loss_step=536, train_loss_epoch=527]Epoch 174/400:  44%|‚ñà‚ñà‚ñà‚ñà‚ñé     | 174/400 [00:29<00:40,  5.60it/s, v_num=1, train_loss_step=563, train_loss_epoch=527]Epoch 175/400:  44%|‚ñà‚ñà‚ñà‚ñà‚ñé     | 174/400 [00:29<00:40,  5.60it/s, v_num=1, train_loss_step=563, train_loss_epoch=527]Epoch 175/400:  44%|‚ñà‚ñà‚ñà‚ñà‚ñç     | 175/400 [00:29<00:39,  5.63it/s, v_num=1, train_loss_step=563, train_loss_epoch=527]Epoch 175/400:  44%|‚ñà‚ñà‚ñà‚ñà‚ñç     | 175/400 [00:29<00:39,  5.63it/s, v_num=1, train_loss_step=499, train_loss_epoch=527]Epoch 176/400:  44%|‚ñà‚ñà‚ñà‚ñà‚ñç     | 175/400 [00:29<00:39,  5.63it/s, v_num=1, train_loss_step=499, train_loss_epoch=527]Epoch 176/400:  44%|‚ñà‚ñà‚ñà‚ñà‚ñç     | 176/400 [00:29<00:41,  5.41it/s, v_num=1, train_loss_step=499, train_loss_epoch=527]Epoch 176/400:  44%|‚ñà‚ñà‚ñà‚ñà‚ñç     | 176/400 [00:29<00:41,  5.41it/s, v_num=1, train_loss_step=522, train_loss_epoch=526]Epoch 177/400:  44%|‚ñà‚ñà‚ñà‚ñà‚ñç     | 176/400 [00:29<00:41,  5.41it/s, v_num=1, train_loss_step=522, train_loss_epoch=526]Epoch 177/400:  44%|‚ñà‚ñà‚ñà‚ñà‚ñç     | 177/400 [00:29<00:40,  5.51it/s, v_num=1, train_loss_step=522, train_loss_epoch=526]Epoch 177/400:  44%|‚ñà‚ñà‚ñà‚ñà‚ñç     | 177/400 [00:29<00:40,  5.51it/s, v_num=1, train_loss_step=527, train_loss_epoch=525]Epoch 178/400:  44%|‚ñà‚ñà‚ñà‚ñà‚ñç     | 177/400 [00:29<00:40,  5.51it/s, v_num=1, train_loss_step=527, train_loss_epoch=525]Epoch 178/400:  44%|‚ñà‚ñà‚ñà‚ñà‚ñç     | 178/400 [00:29<00:39,  5.68it/s, v_num=1, train_loss_step=527, train_loss_epoch=525]Epoch 178/400:  44%|‚ñà‚ñà‚ñà‚ñà‚ñç     | 178/400 [00:29<00:39,  5.68it/s, v_num=1, train_loss_step=517, train_loss_epoch=526]Epoch 179/400:  44%|‚ñà‚ñà‚ñà‚ñà‚ñç     | 178/400 [00:29<00:39,  5.68it/s, v_num=1, train_loss_step=517, train_loss_epoch=526]Epoch 179/400:  45%|‚ñà‚ñà‚ñà‚ñà‚ñç     | 179/400 [00:30<00:38,  5.78it/s, v_num=1, train_loss_step=517, train_loss_epoch=526]Epoch 179/400:  45%|‚ñà‚ñà‚ñà‚ñà‚ñç     | 179/400 [00:30<00:38,  5.78it/s, v_num=1, train_loss_step=541, train_loss_epoch=526]Epoch 180/400:  45%|‚ñà‚ñà‚ñà‚ñà‚ñç     | 179/400 [00:30<00:38,  5.78it/s, v_num=1, train_loss_step=541, train_loss_epoch=526]Epoch 180/400:  45%|‚ñà‚ñà‚ñà‚ñà‚ñå     | 180/400 [00:30<00:37,  5.87it/s, v_num=1, train_loss_step=541, train_loss_epoch=526]Epoch 180/400:  45%|‚ñà‚ñà‚ñà‚ñà‚ñå     | 180/400 [00:30<00:37,  5.87it/s, v_num=1, train_loss_step=500, train_loss_epoch=525]Epoch 181/400:  45%|‚ñà‚ñà‚ñà‚ñà‚ñå     | 180/400 [00:30<00:37,  5.87it/s, v_num=1, train_loss_step=500, train_loss_epoch=525]Epoch 181/400:  45%|‚ñà‚ñà‚ñà‚ñà‚ñå     | 181/400 [00:30<00:36,  5.95it/s, v_num=1, train_loss_step=500, train_loss_epoch=525]Epoch 181/400:  45%|‚ñà‚ñà‚ñà‚ñà‚ñå     | 181/400 [00:30<00:36,  5.95it/s, v_num=1, train_loss_step=547, train_loss_epoch=525]Epoch 182/400:  45%|‚ñà‚ñà‚ñà‚ñà‚ñå     | 181/400 [00:30<00:36,  5.95it/s, v_num=1, train_loss_step=547, train_loss_epoch=525]Epoch 182/400:  46%|‚ñà‚ñà‚ñà‚ñà‚ñå     | 182/400 [00:30<00:36,  5.98it/s, v_num=1, train_loss_step=547, train_loss_epoch=525]Epoch 182/400:  46%|‚ñà‚ñà‚ñà‚ñà‚ñå     | 182/400 [00:30<00:36,  5.98it/s, v_num=1, train_loss_step=505, train_loss_epoch=525]Epoch 183/400:  46%|‚ñà‚ñà‚ñà‚ñà‚ñå     | 182/400 [00:30<00:36,  5.98it/s, v_num=1, train_loss_step=505, train_loss_epoch=525]Epoch 183/400:  46%|‚ñà‚ñà‚ñà‚ñà‚ñå     | 183/400 [00:30<00:37,  5.84it/s, v_num=1, train_loss_step=505, train_loss_epoch=525]Epoch 183/400:  46%|‚ñà‚ñà‚ñà‚ñà‚ñå     | 183/400 [00:30<00:37,  5.84it/s, v_num=1, train_loss_step=558, train_loss_epoch=525]Epoch 184/400:  46%|‚ñà‚ñà‚ñà‚ñà‚ñå     | 183/400 [00:30<00:37,  5.84it/s, v_num=1, train_loss_step=558, train_loss_epoch=525]Epoch 184/400:  46%|‚ñà‚ñà‚ñà‚ñà‚ñå     | 184/400 [00:30<00:36,  5.90it/s, v_num=1, train_loss_step=558, train_loss_epoch=525]Epoch 184/400:  46%|‚ñà‚ñà‚ñà‚ñà‚ñå     | 184/400 [00:30<00:36,  5.90it/s, v_num=1, train_loss_step=522, train_loss_epoch=525]Epoch 185/400:  46%|‚ñà‚ñà‚ñà‚ñà‚ñå     | 184/400 [00:30<00:36,  5.90it/s, v_num=1, train_loss_step=522, train_loss_epoch=525]Epoch 185/400:  46%|‚ñà‚ñà‚ñà‚ñà‚ñã     | 185/400 [00:31<00:36,  5.90it/s, v_num=1, train_loss_step=522, train_loss_epoch=525]Epoch 185/400:  46%|‚ñà‚ñà‚ñà‚ñà‚ñã     | 185/400 [00:31<00:36,  5.90it/s, v_num=1, train_loss_step=513, train_loss_epoch=524]Epoch 186/400:  46%|‚ñà‚ñà‚ñà‚ñà‚ñã     | 185/400 [00:31<00:36,  5.90it/s, v_num=1, train_loss_step=513, train_loss_epoch=524]Epoch 186/400:  46%|‚ñà‚ñà‚ñà‚ñà‚ñã     | 186/400 [00:31<00:36,  5.94it/s, v_num=1, train_loss_step=513, train_loss_epoch=524]Epoch 186/400:  46%|‚ñà‚ñà‚ñà‚ñà‚ñã     | 186/400 [00:31<00:36,  5.94it/s, v_num=1, train_loss_step=513, train_loss_epoch=525]Epoch 187/400:  46%|‚ñà‚ñà‚ñà‚ñà‚ñã     | 186/400 [00:31<00:36,  5.94it/s, v_num=1, train_loss_step=513, train_loss_epoch=525]Epoch 187/400:  47%|‚ñà‚ñà‚ñà‚ñà‚ñã     | 187/400 [00:31<00:35,  5.97it/s, v_num=1, train_loss_step=513, train_loss_epoch=525]Epoch 187/400:  47%|‚ñà‚ñà‚ñà‚ñà‚ñã     | 187/400 [00:31<00:35,  5.97it/s, v_num=1, train_loss_step=543, train_loss_epoch=525]Epoch 188/400:  47%|‚ñà‚ñà‚ñà‚ñà‚ñã     | 187/400 [00:31<00:35,  5.97it/s, v_num=1, train_loss_step=543, train_loss_epoch=525]Epoch 188/400:  47%|‚ñà‚ñà‚ñà‚ñà‚ñã     | 188/400 [00:31<00:35,  5.92it/s, v_num=1, train_loss_step=543, train_loss_epoch=525]Epoch 188/400:  47%|‚ñà‚ñà‚ñà‚ñà‚ñã     | 188/400 [00:31<00:35,  5.92it/s, v_num=1, train_loss_step=528, train_loss_epoch=524]Epoch 189/400:  47%|‚ñà‚ñà‚ñà‚ñà‚ñã     | 188/400 [00:31<00:35,  5.92it/s, v_num=1, train_loss_step=528, train_loss_epoch=524]Epoch 189/400:  47%|‚ñà‚ñà‚ñà‚ñà‚ñã     | 189/400 [00:31<00:35,  5.99it/s, v_num=1, train_loss_step=528, train_loss_epoch=524]Epoch 189/400:  47%|‚ñà‚ñà‚ñà‚ñà‚ñã     | 189/400 [00:31<00:35,  5.99it/s, v_num=1, train_loss_step=533, train_loss_epoch=524]Epoch 190/400:  47%|‚ñà‚ñà‚ñà‚ñà‚ñã     | 189/400 [00:31<00:35,  5.99it/s, v_num=1, train_loss_step=533, train_loss_epoch=524]Epoch 190/400:  48%|‚ñà‚ñà‚ñà‚ñà‚ñä     | 190/400 [00:31<00:35,  5.95it/s, v_num=1, train_loss_step=533, train_loss_epoch=524]Epoch 190/400:  48%|‚ñà‚ñà‚ñà‚ñà‚ñä     | 190/400 [00:31<00:35,  5.95it/s, v_num=1, train_loss_step=524, train_loss_epoch=524]Epoch 191/400:  48%|‚ñà‚ñà‚ñà‚ñà‚ñä     | 190/400 [00:31<00:35,  5.95it/s, v_num=1, train_loss_step=524, train_loss_epoch=524]Epoch 191/400:  48%|‚ñà‚ñà‚ñà‚ñà‚ñä     | 191/400 [00:32<00:34,  6.02it/s, v_num=1, train_loss_step=524, train_loss_epoch=524]Epoch 191/400:  48%|‚ñà‚ñà‚ñà‚ñà‚ñä     | 191/400 [00:32<00:34,  6.02it/s, v_num=1, train_loss_step=516, train_loss_epoch=523]Epoch 192/400:  48%|‚ñà‚ñà‚ñà‚ñà‚ñä     | 191/400 [00:32<00:34,  6.02it/s, v_num=1, train_loss_step=516, train_loss_epoch=523]Epoch 192/400:  48%|‚ñà‚ñà‚ñà‚ñà‚ñä     | 192/400 [00:32<00:34,  6.09it/s, v_num=1, train_loss_step=516, train_loss_epoch=523]Epoch 192/400:  48%|‚ñà‚ñà‚ñà‚ñà‚ñä     | 192/400 [00:32<00:34,  6.09it/s, v_num=1, train_loss_step=512, train_loss_epoch=524]Epoch 193/400:  48%|‚ñà‚ñà‚ñà‚ñà‚ñä     | 192/400 [00:32<00:34,  6.09it/s, v_num=1, train_loss_step=512, train_loss_epoch=524]Epoch 193/400:  48%|‚ñà‚ñà‚ñà‚ñà‚ñä     | 193/400 [00:32<00:33,  6.12it/s, v_num=1, train_loss_step=512, train_loss_epoch=524]Epoch 193/400:  48%|‚ñà‚ñà‚ñà‚ñà‚ñä     | 193/400 [00:32<00:33,  6.12it/s, v_num=1, train_loss_step=494, train_loss_epoch=524]Epoch 194/400:  48%|‚ñà‚ñà‚ñà‚ñà‚ñä     | 193/400 [00:32<00:33,  6.12it/s, v_num=1, train_loss_step=494, train_loss_epoch=524]Epoch 194/400:  48%|‚ñà‚ñà‚ñà‚ñà‚ñä     | 194/400 [00:32<00:34,  6.06it/s, v_num=1, train_loss_step=494, train_loss_epoch=524]Epoch 194/400:  48%|‚ñà‚ñà‚ñà‚ñà‚ñä     | 194/400 [00:32<00:34,  6.06it/s, v_num=1, train_loss_step=529, train_loss_epoch=523]Epoch 195/400:  48%|‚ñà‚ñà‚ñà‚ñà‚ñä     | 194/400 [00:32<00:34,  6.06it/s, v_num=1, train_loss_step=529, train_loss_epoch=523]Epoch 195/400:  49%|‚ñà‚ñà‚ñà‚ñà‚ñâ     | 195/400 [00:32<00:33,  6.04it/s, v_num=1, train_loss_step=529, train_loss_epoch=523]Epoch 195/400:  49%|‚ñà‚ñà‚ñà‚ñà‚ñâ     | 195/400 [00:32<00:33,  6.04it/s, v_num=1, train_loss_step=531, train_loss_epoch=523]Epoch 196/400:  49%|‚ñà‚ñà‚ñà‚ñà‚ñâ     | 195/400 [00:32<00:33,  6.04it/s, v_num=1, train_loss_step=531, train_loss_epoch=523]Epoch 196/400:  49%|‚ñà‚ñà‚ñà‚ñà‚ñâ     | 196/400 [00:32<00:33,  6.07it/s, v_num=1, train_loss_step=531, train_loss_epoch=523]Epoch 196/400:  49%|‚ñà‚ñà‚ñà‚ñà‚ñâ     | 196/400 [00:32<00:33,  6.07it/s, v_num=1, train_loss_step=531, train_loss_epoch=523]Epoch 197/400:  49%|‚ñà‚ñà‚ñà‚ñà‚ñâ     | 196/400 [00:32<00:33,  6.07it/s, v_num=1, train_loss_step=531, train_loss_epoch=523]Epoch 197/400:  49%|‚ñà‚ñà‚ñà‚ñà‚ñâ     | 197/400 [00:33<00:33,  6.04it/s, v_num=1, train_loss_step=531, train_loss_epoch=523]Epoch 197/400:  49%|‚ñà‚ñà‚ñà‚ñà‚ñâ     | 197/400 [00:33<00:33,  6.04it/s, v_num=1, train_loss_step=499, train_loss_epoch=523]Epoch 198/400:  49%|‚ñà‚ñà‚ñà‚ñà‚ñâ     | 197/400 [00:33<00:33,  6.04it/s, v_num=1, train_loss_step=499, train_loss_epoch=523]Epoch 198/400:  50%|‚ñà‚ñà‚ñà‚ñà‚ñâ     | 198/400 [00:33<00:33,  6.06it/s, v_num=1, train_loss_step=499, train_loss_epoch=523]Epoch 198/400:  50%|‚ñà‚ñà‚ñà‚ñà‚ñâ     | 198/400 [00:33<00:33,  6.06it/s, v_num=1, train_loss_step=525, train_loss_epoch=523]Epoch 199/400:  50%|‚ñà‚ñà‚ñà‚ñà‚ñâ     | 198/400 [00:33<00:33,  6.06it/s, v_num=1, train_loss_step=525, train_loss_epoch=523]Epoch 199/400:  50%|‚ñà‚ñà‚ñà‚ñà‚ñâ     | 199/400 [00:33<00:33,  6.07it/s, v_num=1, train_loss_step=525, train_loss_epoch=523]Epoch 199/400:  50%|‚ñà‚ñà‚ñà‚ñà‚ñâ     | 199/400 [00:33<00:33,  6.07it/s, v_num=1, train_loss_step=528, train_loss_epoch=523]Epoch 200/400:  50%|‚ñà‚ñà‚ñà‚ñà‚ñâ     | 199/400 [00:33<00:33,  6.07it/s, v_num=1, train_loss_step=528, train_loss_epoch=523]Epoch 200/400:  50%|‚ñà‚ñà‚ñà‚ñà‚ñà     | 200/400 [00:33<00:34,  5.79it/s, v_num=1, train_loss_step=528, train_loss_epoch=523]Epoch 200/400:  50%|‚ñà‚ñà‚ñà‚ñà‚ñà     | 200/400 [00:33<00:34,  5.79it/s, v_num=1, train_loss_step=524, train_loss_epoch=523]Epoch 201/400:  50%|‚ñà‚ñà‚ñà‚ñà‚ñà     | 200/400 [00:33<00:34,  5.79it/s, v_num=1, train_loss_step=524, train_loss_epoch=523]Epoch 201/400:  50%|‚ñà‚ñà‚ñà‚ñà‚ñà     | 201/400 [00:33<00:35,  5.60it/s, v_num=1, train_loss_step=524, train_loss_epoch=523]Epoch 201/400:  50%|‚ñà‚ñà‚ñà‚ñà‚ñà     | 201/400 [00:33<00:35,  5.60it/s, v_num=1, train_loss_step=537, train_loss_epoch=523]Epoch 202/400:  50%|‚ñà‚ñà‚ñà‚ñà‚ñà     | 201/400 [00:33<00:35,  5.60it/s, v_num=1, train_loss_step=537, train_loss_epoch=523]Epoch 202/400:  50%|‚ñà‚ñà‚ñà‚ñà‚ñà     | 202/400 [00:34<00:37,  5.32it/s, v_num=1, train_loss_step=537, train_loss_epoch=523]Epoch 202/400:  50%|‚ñà‚ñà‚ñà‚ñà‚ñà     | 202/400 [00:34<00:37,  5.32it/s, v_num=1, train_loss_step=546, train_loss_epoch=522]Epoch 203/400:  50%|‚ñà‚ñà‚ñà‚ñà‚ñà     | 202/400 [00:34<00:37,  5.32it/s, v_num=1, train_loss_step=546, train_loss_epoch=522]Epoch 203/400:  51%|‚ñà‚ñà‚ñà‚ñà‚ñà     | 203/400 [00:34<00:37,  5.26it/s, v_num=1, train_loss_step=546, train_loss_epoch=522]Epoch 203/400:  51%|‚ñà‚ñà‚ñà‚ñà‚ñà     | 203/400 [00:34<00:37,  5.26it/s, v_num=1, train_loss_step=507, train_loss_epoch=522]Epoch 204/400:  51%|‚ñà‚ñà‚ñà‚ñà‚ñà     | 203/400 [00:34<00:37,  5.26it/s, v_num=1, train_loss_step=507, train_loss_epoch=522]Epoch 204/400:  51%|‚ñà‚ñà‚ñà‚ñà‚ñà     | 204/400 [00:34<00:36,  5.38it/s, v_num=1, train_loss_step=507, train_loss_epoch=522]Epoch 204/400:  51%|‚ñà‚ñà‚ñà‚ñà‚ñà     | 204/400 [00:34<00:36,  5.38it/s, v_num=1, train_loss_step=509, train_loss_epoch=522]Epoch 205/400:  51%|‚ñà‚ñà‚ñà‚ñà‚ñà     | 204/400 [00:34<00:36,  5.38it/s, v_num=1, train_loss_step=509, train_loss_epoch=522]Epoch 205/400:  51%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè    | 205/400 [00:34<00:37,  5.20it/s, v_num=1, train_loss_step=509, train_loss_epoch=522]Epoch 205/400:  51%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè    | 205/400 [00:34<00:37,  5.20it/s, v_num=1, train_loss_step=501, train_loss_epoch=522]Epoch 206/400:  51%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè    | 205/400 [00:34<00:37,  5.20it/s, v_num=1, train_loss_step=501, train_loss_epoch=522]Epoch 206/400:  52%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè    | 206/400 [00:34<00:36,  5.32it/s, v_num=1, train_loss_step=501, train_loss_epoch=522]Epoch 206/400:  52%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè    | 206/400 [00:34<00:36,  5.32it/s, v_num=1, train_loss_step=506, train_loss_epoch=522]Epoch 207/400:  52%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè    | 206/400 [00:34<00:36,  5.32it/s, v_num=1, train_loss_step=506, train_loss_epoch=522]Epoch 207/400:  52%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè    | 207/400 [00:34<00:38,  5.07it/s, v_num=1, train_loss_step=506, train_loss_epoch=522]Epoch 207/400:  52%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè    | 207/400 [00:34<00:38,  5.07it/s, v_num=1, train_loss_step=518, train_loss_epoch=522]Epoch 208/400:  52%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè    | 207/400 [00:34<00:38,  5.07it/s, v_num=1, train_loss_step=518, train_loss_epoch=522]Epoch 208/400:  52%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè    | 208/400 [00:35<00:36,  5.28it/s, v_num=1, train_loss_step=518, train_loss_epoch=522]Epoch 208/400:  52%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè    | 208/400 [00:35<00:36,  5.28it/s, v_num=1, train_loss_step=511, train_loss_epoch=521]Epoch 209/400:  52%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè    | 208/400 [00:35<00:36,  5.28it/s, v_num=1, train_loss_step=511, train_loss_epoch=521]Epoch 209/400:  52%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè    | 209/400 [00:35<00:38,  4.95it/s, v_num=1, train_loss_step=511, train_loss_epoch=521]Epoch 209/400:  52%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè    | 209/400 [00:35<00:38,  4.95it/s, v_num=1, train_loss_step=519, train_loss_epoch=522]Epoch 210/400:  52%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè    | 209/400 [00:35<00:38,  4.95it/s, v_num=1, train_loss_step=519, train_loss_epoch=522]Epoch 210/400:  52%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé    | 210/400 [00:35<00:39,  4.78it/s, v_num=1, train_loss_step=519, train_loss_epoch=522]Epoch 210/400:  52%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé    | 210/400 [00:35<00:39,  4.78it/s, v_num=1, train_loss_step=546, train_loss_epoch=521]Epoch 211/400:  52%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé    | 210/400 [00:35<00:39,  4.78it/s, v_num=1, train_loss_step=546, train_loss_epoch=521]Epoch 211/400:  53%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé    | 211/400 [00:35<00:40,  4.61it/s, v_num=1, train_loss_step=546, train_loss_epoch=521]Epoch 211/400:  53%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé    | 211/400 [00:35<00:40,  4.61it/s, v_num=1, train_loss_step=520, train_loss_epoch=521]Epoch 212/400:  53%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé    | 211/400 [00:35<00:40,  4.61it/s, v_num=1, train_loss_step=520, train_loss_epoch=521]Epoch 212/400:  53%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé    | 212/400 [00:36<00:39,  4.76it/s, v_num=1, train_loss_step=520, train_loss_epoch=521]Epoch 212/400:  53%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé    | 212/400 [00:36<00:39,  4.76it/s, v_num=1, train_loss_step=511, train_loss_epoch=521]Epoch 213/400:  53%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé    | 212/400 [00:36<00:39,  4.76it/s, v_num=1, train_loss_step=511, train_loss_epoch=521]Epoch 213/400:  53%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé    | 213/400 [00:36<00:39,  4.79it/s, v_num=1, train_loss_step=511, train_loss_epoch=521]Epoch 213/400:  53%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé    | 213/400 [00:36<00:39,  4.79it/s, v_num=1, train_loss_step=536, train_loss_epoch=521]Epoch 214/400:  53%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé    | 213/400 [00:36<00:39,  4.79it/s, v_num=1, train_loss_step=536, train_loss_epoch=521]Epoch 214/400:  54%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé    | 214/400 [00:36<00:37,  4.96it/s, v_num=1, train_loss_step=536, train_loss_epoch=521]Epoch 214/400:  54%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé    | 214/400 [00:36<00:37,  4.96it/s, v_num=1, train_loss_step=534, train_loss_epoch=521]Epoch 215/400:  54%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé    | 214/400 [00:36<00:37,  4.96it/s, v_num=1, train_loss_step=534, train_loss_epoch=521]Epoch 215/400:  54%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç    | 215/400 [00:36<00:37,  4.88it/s, v_num=1, train_loss_step=534, train_loss_epoch=521]Epoch 215/400:  54%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç    | 215/400 [00:36<00:37,  4.88it/s, v_num=1, train_loss_step=532, train_loss_epoch=520]Epoch 216/400:  54%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç    | 215/400 [00:36<00:37,  4.88it/s, v_num=1, train_loss_step=532, train_loss_epoch=520]Epoch 216/400:  54%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç    | 216/400 [00:36<00:39,  4.65it/s, v_num=1, train_loss_step=532, train_loss_epoch=520]Epoch 216/400:  54%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç    | 216/400 [00:36<00:39,  4.65it/s, v_num=1, train_loss_step=477, train_loss_epoch=520]Epoch 217/400:  54%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç    | 216/400 [00:36<00:39,  4.65it/s, v_num=1, train_loss_step=477, train_loss_epoch=520]Epoch 217/400:  54%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç    | 217/400 [00:37<00:41,  4.44it/s, v_num=1, train_loss_step=477, train_loss_epoch=520]Epoch 217/400:  54%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç    | 217/400 [00:37<00:41,  4.44it/s, v_num=1, train_loss_step=498, train_loss_epoch=520]Epoch 218/400:  54%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç    | 217/400 [00:37<00:41,  4.44it/s, v_num=1, train_loss_step=498, train_loss_epoch=520]Epoch 218/400:  55%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç    | 218/400 [00:37<00:38,  4.79it/s, v_num=1, train_loss_step=498, train_loss_epoch=520]Epoch 218/400:  55%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç    | 218/400 [00:37<00:38,  4.79it/s, v_num=1, train_loss_step=525, train_loss_epoch=520]Epoch 219/400:  55%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç    | 218/400 [00:37<00:38,  4.79it/s, v_num=1, train_loss_step=525, train_loss_epoch=520]Epoch 219/400:  55%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç    | 219/400 [00:37<00:37,  4.87it/s, v_num=1, train_loss_step=525, train_loss_epoch=520]Epoch 219/400:  55%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç    | 219/400 [00:37<00:37,  4.87it/s, v_num=1, train_loss_step=544, train_loss_epoch=520]Epoch 220/400:  55%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç    | 219/400 [00:37<00:37,  4.87it/s, v_num=1, train_loss_step=544, train_loss_epoch=520]Epoch 220/400:  55%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå    | 220/400 [00:37<00:38,  4.71it/s, v_num=1, train_loss_step=544, train_loss_epoch=520]Epoch 220/400:  55%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå    | 220/400 [00:37<00:38,  4.71it/s, v_num=1, train_loss_step=518, train_loss_epoch=519]Epoch 221/400:  55%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå    | 220/400 [00:37<00:38,  4.71it/s, v_num=1, train_loss_step=518, train_loss_epoch=519]Epoch 221/400:  55%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå    | 221/400 [00:37<00:37,  4.74it/s, v_num=1, train_loss_step=518, train_loss_epoch=519]Epoch 221/400:  55%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå    | 221/400 [00:37<00:37,  4.74it/s, v_num=1, train_loss_step=513, train_loss_epoch=520]Epoch 222/400:  55%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå    | 221/400 [00:37<00:37,  4.74it/s, v_num=1, train_loss_step=513, train_loss_epoch=520]Epoch 222/400:  56%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå    | 222/400 [00:38<00:36,  4.94it/s, v_num=1, train_loss_step=513, train_loss_epoch=520]Epoch 222/400:  56%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå    | 222/400 [00:38<00:36,  4.94it/s, v_num=1, train_loss_step=519, train_loss_epoch=520]Epoch 223/400:  56%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå    | 222/400 [00:38<00:36,  4.94it/s, v_num=1, train_loss_step=519, train_loss_epoch=520]Epoch 223/400:  56%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå    | 223/400 [00:38<00:35,  5.03it/s, v_num=1, train_loss_step=519, train_loss_epoch=520]Epoch 223/400:  56%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå    | 223/400 [00:38<00:35,  5.03it/s, v_num=1, train_loss_step=536, train_loss_epoch=519]Epoch 224/400:  56%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå    | 223/400 [00:38<00:35,  5.03it/s, v_num=1, train_loss_step=536, train_loss_epoch=519]Epoch 224/400:  56%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå    | 224/400 [00:38<00:34,  5.03it/s, v_num=1, train_loss_step=536, train_loss_epoch=519]Epoch 224/400:  56%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå    | 224/400 [00:38<00:34,  5.03it/s, v_num=1, train_loss_step=474, train_loss_epoch=519]Epoch 225/400:  56%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå    | 224/400 [00:38<00:34,  5.03it/s, v_num=1, train_loss_step=474, train_loss_epoch=519]Epoch 225/400:  56%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã    | 225/400 [00:38<00:33,  5.15it/s, v_num=1, train_loss_step=474, train_loss_epoch=519]Epoch 225/400:  56%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã    | 225/400 [00:38<00:33,  5.15it/s, v_num=1, train_loss_step=536, train_loss_epoch=519]Epoch 226/400:  56%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã    | 225/400 [00:38<00:33,  5.15it/s, v_num=1, train_loss_step=536, train_loss_epoch=519]Epoch 226/400:  56%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã    | 226/400 [00:38<00:33,  5.25it/s, v_num=1, train_loss_step=536, train_loss_epoch=519]Epoch 226/400:  56%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã    | 226/400 [00:38<00:33,  5.25it/s, v_num=1, train_loss_step=522, train_loss_epoch=519]Epoch 227/400:  56%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã    | 226/400 [00:38<00:33,  5.25it/s, v_num=1, train_loss_step=522, train_loss_epoch=519]Epoch 227/400:  57%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã    | 227/400 [00:39<00:35,  4.88it/s, v_num=1, train_loss_step=522, train_loss_epoch=519]Epoch 227/400:  57%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã    | 227/400 [00:39<00:35,  4.88it/s, v_num=1, train_loss_step=506, train_loss_epoch=519]Epoch 228/400:  57%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã    | 227/400 [00:39<00:35,  4.88it/s, v_num=1, train_loss_step=506, train_loss_epoch=519]Epoch 228/400:  57%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã    | 228/400 [00:39<00:36,  4.65it/s, v_num=1, train_loss_step=506, train_loss_epoch=519]Epoch 228/400:  57%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã    | 228/400 [00:39<00:36,  4.65it/s, v_num=1, train_loss_step=506, train_loss_epoch=519]Epoch 229/400:  57%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã    | 228/400 [00:39<00:36,  4.65it/s, v_num=1, train_loss_step=506, train_loss_epoch=519]Epoch 229/400:  57%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã    | 229/400 [00:39<00:35,  4.86it/s, v_num=1, train_loss_step=506, train_loss_epoch=519]Epoch 229/400:  57%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã    | 229/400 [00:39<00:35,  4.86it/s, v_num=1, train_loss_step=528, train_loss_epoch=518]Epoch 230/400:  57%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã    | 229/400 [00:39<00:35,  4.86it/s, v_num=1, train_loss_step=528, train_loss_epoch=518]Epoch 230/400:  57%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä    | 230/400 [00:39<00:34,  4.97it/s, v_num=1, train_loss_step=528, train_loss_epoch=518]Epoch 230/400:  57%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä    | 230/400 [00:39<00:34,  4.97it/s, v_num=1, train_loss_step=515, train_loss_epoch=518]Epoch 231/400:  57%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä    | 230/400 [00:39<00:34,  4.97it/s, v_num=1, train_loss_step=515, train_loss_epoch=518]Epoch 231/400:  58%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä    | 231/400 [00:39<00:33,  5.03it/s, v_num=1, train_loss_step=515, train_loss_epoch=518]Epoch 231/400:  58%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä    | 231/400 [00:39<00:33,  5.03it/s, v_num=1, train_loss_step=526, train_loss_epoch=519]Epoch 232/400:  58%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä    | 231/400 [00:39<00:33,  5.03it/s, v_num=1, train_loss_step=526, train_loss_epoch=519]Epoch 232/400:  58%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä    | 232/400 [00:40<00:33,  5.02it/s, v_num=1, train_loss_step=526, train_loss_epoch=519]Epoch 232/400:  58%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä    | 232/400 [00:40<00:33,  5.02it/s, v_num=1, train_loss_step=527, train_loss_epoch=519]Epoch 233/400:  58%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä    | 232/400 [00:40<00:33,  5.02it/s, v_num=1, train_loss_step=527, train_loss_epoch=519]Epoch 233/400:  58%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä    | 233/400 [00:40<00:32,  5.19it/s, v_num=1, train_loss_step=527, train_loss_epoch=519]Epoch 233/400:  58%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä    | 233/400 [00:40<00:32,  5.19it/s, v_num=1, train_loss_step=538, train_loss_epoch=518]Epoch 234/400:  58%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä    | 233/400 [00:40<00:32,  5.19it/s, v_num=1, train_loss_step=538, train_loss_epoch=518]Epoch 234/400:  58%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä    | 234/400 [00:40<00:30,  5.39it/s, v_num=1, train_loss_step=538, train_loss_epoch=518]Epoch 234/400:  58%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä    | 234/400 [00:40<00:30,  5.39it/s, v_num=1, train_loss_step=544, train_loss_epoch=518]Epoch 235/400:  58%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä    | 234/400 [00:40<00:30,  5.39it/s, v_num=1, train_loss_step=544, train_loss_epoch=518]Epoch 235/400:  59%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ    | 235/400 [00:40<00:29,  5.57it/s, v_num=1, train_loss_step=544, train_loss_epoch=518]Epoch 235/400:  59%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ    | 235/400 [00:40<00:29,  5.57it/s, v_num=1, train_loss_step=527, train_loss_epoch=518]Epoch 236/400:  59%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ    | 235/400 [00:40<00:29,  5.57it/s, v_num=1, train_loss_step=527, train_loss_epoch=518]Epoch 236/400:  59%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ    | 236/400 [00:40<00:29,  5.61it/s, v_num=1, train_loss_step=527, train_loss_epoch=518]Epoch 236/400:  59%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ    | 236/400 [00:40<00:29,  5.61it/s, v_num=1, train_loss_step=494, train_loss_epoch=518]Epoch 237/400:  59%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ    | 236/400 [00:40<00:29,  5.61it/s, v_num=1, train_loss_step=494, train_loss_epoch=518]Epoch 237/400:  59%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ    | 237/400 [00:40<00:28,  5.67it/s, v_num=1, train_loss_step=494, train_loss_epoch=518]Epoch 237/400:  59%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ    | 237/400 [00:40<00:28,  5.67it/s, v_num=1, train_loss_step=536, train_loss_epoch=518]Epoch 238/400:  59%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ    | 237/400 [00:40<00:28,  5.67it/s, v_num=1, train_loss_step=536, train_loss_epoch=518]Epoch 238/400:  60%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ    | 238/400 [00:41<00:28,  5.69it/s, v_num=1, train_loss_step=536, train_loss_epoch=518]Epoch 238/400:  60%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ    | 238/400 [00:41<00:28,  5.69it/s, v_num=1, train_loss_step=492, train_loss_epoch=517]Epoch 239/400:  60%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ    | 238/400 [00:41<00:28,  5.69it/s, v_num=1, train_loss_step=492, train_loss_epoch=517]Epoch 239/400:  60%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ    | 239/400 [00:41<00:28,  5.69it/s, v_num=1, train_loss_step=492, train_loss_epoch=517]Epoch 239/400:  60%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ    | 239/400 [00:41<00:28,  5.69it/s, v_num=1, train_loss_step=503, train_loss_epoch=518]Epoch 240/400:  60%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ    | 239/400 [00:41<00:28,  5.69it/s, v_num=1, train_loss_step=503, train_loss_epoch=518]Epoch 240/400:  60%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà    | 240/400 [00:41<00:29,  5.34it/s, v_num=1, train_loss_step=503, train_loss_epoch=518]Epoch 240/400:  60%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà    | 240/400 [00:41<00:29,  5.34it/s, v_num=1, train_loss_step=523, train_loss_epoch=517]Epoch 241/400:  60%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà    | 240/400 [00:41<00:29,  5.34it/s, v_num=1, train_loss_step=523, train_loss_epoch=517]Epoch 241/400:  60%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà    | 241/400 [00:41<00:29,  5.38it/s, v_num=1, train_loss_step=523, train_loss_epoch=517]Epoch 241/400:  60%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà    | 241/400 [00:41<00:29,  5.38it/s, v_num=1, train_loss_step=506, train_loss_epoch=517]Epoch 242/400:  60%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà    | 241/400 [00:41<00:29,  5.38it/s, v_num=1, train_loss_step=506, train_loss_epoch=517]Epoch 242/400:  60%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà    | 242/400 [00:41<00:28,  5.46it/s, v_num=1, train_loss_step=506, train_loss_epoch=517]Epoch 242/400:  60%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà    | 242/400 [00:41<00:28,  5.46it/s, v_num=1, train_loss_step=506, train_loss_epoch=517]Epoch 243/400:  60%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà    | 242/400 [00:41<00:28,  5.46it/s, v_num=1, train_loss_step=506, train_loss_epoch=517]Epoch 243/400:  61%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà    | 243/400 [00:42<00:28,  5.57it/s, v_num=1, train_loss_step=506, train_loss_epoch=517]Epoch 243/400:  61%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà    | 243/400 [00:42<00:28,  5.57it/s, v_num=1, train_loss_step=551, train_loss_epoch=517]Epoch 244/400:  61%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà    | 243/400 [00:42<00:28,  5.57it/s, v_num=1, train_loss_step=551, train_loss_epoch=517]Epoch 244/400:  61%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà    | 244/400 [00:42<00:27,  5.57it/s, v_num=1, train_loss_step=551, train_loss_epoch=517]Epoch 244/400:  61%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà    | 244/400 [00:42<00:27,  5.57it/s, v_num=1, train_loss_step=558, train_loss_epoch=517]Epoch 245/400:  61%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà    | 244/400 [00:42<00:27,  5.57it/s, v_num=1, train_loss_step=558, train_loss_epoch=517]Epoch 245/400:  61%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè   | 245/400 [00:42<00:27,  5.70it/s, v_num=1, train_loss_step=558, train_loss_epoch=517]Epoch 245/400:  61%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè   | 245/400 [00:42<00:27,  5.70it/s, v_num=1, train_loss_step=507, train_loss_epoch=517]Epoch 246/400:  61%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè   | 245/400 [00:42<00:27,  5.70it/s, v_num=1, train_loss_step=507, train_loss_epoch=517]Epoch 246/400:  62%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè   | 246/400 [00:42<00:26,  5.74it/s, v_num=1, train_loss_step=507, train_loss_epoch=517]Epoch 246/400:  62%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè   | 246/400 [00:42<00:26,  5.74it/s, v_num=1, train_loss_step=538, train_loss_epoch=517]Epoch 247/400:  62%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè   | 246/400 [00:42<00:26,  5.74it/s, v_num=1, train_loss_step=538, train_loss_epoch=517]Epoch 247/400:  62%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè   | 247/400 [00:42<00:28,  5.36it/s, v_num=1, train_loss_step=538, train_loss_epoch=517]Epoch 247/400:  62%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè   | 247/400 [00:42<00:28,  5.36it/s, v_num=1, train_loss_step=495, train_loss_epoch=517]Epoch 248/400:  62%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè   | 247/400 [00:42<00:28,  5.36it/s, v_num=1, train_loss_step=495, train_loss_epoch=517]Epoch 248/400:  62%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè   | 248/400 [00:43<00:28,  5.28it/s, v_num=1, train_loss_step=495, train_loss_epoch=517]Epoch 248/400:  62%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè   | 248/400 [00:43<00:28,  5.28it/s, v_num=1, train_loss_step=509, train_loss_epoch=517]Epoch 249/400:  62%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè   | 248/400 [00:43<00:28,  5.28it/s, v_num=1, train_loss_step=509, train_loss_epoch=517]Epoch 249/400:  62%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè   | 249/400 [00:43<00:28,  5.33it/s, v_num=1, train_loss_step=509, train_loss_epoch=517]Epoch 249/400:  62%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè   | 249/400 [00:43<00:28,  5.33it/s, v_num=1, train_loss_step=547, train_loss_epoch=517]Epoch 250/400:  62%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè   | 249/400 [00:43<00:28,  5.33it/s, v_num=1, train_loss_step=547, train_loss_epoch=517]Epoch 250/400:  62%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé   | 250/400 [00:43<00:27,  5.47it/s, v_num=1, train_loss_step=547, train_loss_epoch=517]Epoch 250/400:  62%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé   | 250/400 [00:43<00:27,  5.47it/s, v_num=1, train_loss_step=477, train_loss_epoch=517]Epoch 251/400:  62%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé   | 250/400 [00:43<00:27,  5.47it/s, v_num=1, train_loss_step=477, train_loss_epoch=517]Epoch 251/400:  63%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé   | 251/400 [00:43<00:26,  5.58it/s, v_num=1, train_loss_step=477, train_loss_epoch=517]Epoch 251/400:  63%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé   | 251/400 [00:43<00:26,  5.58it/s, v_num=1, train_loss_step=528, train_loss_epoch=516]Epoch 252/400:  63%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé   | 251/400 [00:43<00:26,  5.58it/s, v_num=1, train_loss_step=528, train_loss_epoch=516]Epoch 252/400:  63%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé   | 252/400 [00:43<00:25,  5.73it/s, v_num=1, train_loss_step=528, train_loss_epoch=516]Epoch 252/400:  63%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé   | 252/400 [00:43<00:25,  5.73it/s, v_num=1, train_loss_step=508, train_loss_epoch=516]Epoch 253/400:  63%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé   | 252/400 [00:43<00:25,  5.73it/s, v_num=1, train_loss_step=508, train_loss_epoch=516]Epoch 253/400:  63%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé   | 253/400 [00:43<00:25,  5.85it/s, v_num=1, train_loss_step=508, train_loss_epoch=516]Epoch 253/400:  63%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé   | 253/400 [00:43<00:25,  5.85it/s, v_num=1, train_loss_step=517, train_loss_epoch=516]Epoch 254/400:  63%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé   | 253/400 [00:43<00:25,  5.85it/s, v_num=1, train_loss_step=517, train_loss_epoch=516]Epoch 254/400:  64%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé   | 254/400 [00:44<00:24,  5.91it/s, v_num=1, train_loss_step=517, train_loss_epoch=516]Epoch 254/400:  64%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé   | 254/400 [00:44<00:24,  5.91it/s, v_num=1, train_loss_step=491, train_loss_epoch=516]Epoch 255/400:  64%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé   | 254/400 [00:44<00:24,  5.91it/s, v_num=1, train_loss_step=491, train_loss_epoch=516]Epoch 255/400:  64%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç   | 255/400 [00:44<00:25,  5.66it/s, v_num=1, train_loss_step=491, train_loss_epoch=516]Epoch 255/400:  64%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç   | 255/400 [00:44<00:25,  5.66it/s, v_num=1, train_loss_step=503, train_loss_epoch=516]Epoch 256/400:  64%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç   | 255/400 [00:44<00:25,  5.66it/s, v_num=1, train_loss_step=503, train_loss_epoch=516]Epoch 256/400:  64%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç   | 256/400 [00:44<00:25,  5.64it/s, v_num=1, train_loss_step=503, train_loss_epoch=516]Epoch 256/400:  64%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç   | 256/400 [00:44<00:25,  5.64it/s, v_num=1, train_loss_step=523, train_loss_epoch=515]Epoch 257/400:  64%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç   | 256/400 [00:44<00:25,  5.64it/s, v_num=1, train_loss_step=523, train_loss_epoch=515]Epoch 257/400:  64%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç   | 257/400 [00:44<00:25,  5.62it/s, v_num=1, train_loss_step=523, train_loss_epoch=515]Epoch 257/400:  64%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç   | 257/400 [00:44<00:25,  5.62it/s, v_num=1, train_loss_step=522, train_loss_epoch=516]Epoch 258/400:  64%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç   | 257/400 [00:44<00:25,  5.62it/s, v_num=1, train_loss_step=522, train_loss_epoch=516]Epoch 258/400:  64%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç   | 258/400 [00:44<00:25,  5.65it/s, v_num=1, train_loss_step=522, train_loss_epoch=516]Epoch 258/400:  64%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç   | 258/400 [00:44<00:25,  5.65it/s, v_num=1, train_loss_step=520, train_loss_epoch=516]Epoch 259/400:  64%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç   | 258/400 [00:44<00:25,  5.65it/s, v_num=1, train_loss_step=520, train_loss_epoch=516]Epoch 259/400:  65%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç   | 259/400 [00:44<00:24,  5.68it/s, v_num=1, train_loss_step=520, train_loss_epoch=516]Epoch 259/400:  65%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç   | 259/400 [00:44<00:24,  5.68it/s, v_num=1, train_loss_step=495, train_loss_epoch=516]Epoch 260/400:  65%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç   | 259/400 [00:44<00:24,  5.68it/s, v_num=1, train_loss_step=495, train_loss_epoch=516]Epoch 260/400:  65%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå   | 260/400 [00:45<00:25,  5.57it/s, v_num=1, train_loss_step=495, train_loss_epoch=516]Epoch 260/400:  65%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå   | 260/400 [00:45<00:25,  5.57it/s, v_num=1, train_loss_step=513, train_loss_epoch=516]Epoch 261/400:  65%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå   | 260/400 [00:45<00:25,  5.57it/s, v_num=1, train_loss_step=513, train_loss_epoch=516]Epoch 261/400:  65%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå   | 261/400 [00:45<00:24,  5.71it/s, v_num=1, train_loss_step=513, train_loss_epoch=516]Epoch 261/400:  65%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå   | 261/400 [00:45<00:24,  5.71it/s, v_num=1, train_loss_step=522, train_loss_epoch=515]Epoch 262/400:  65%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå   | 261/400 [00:45<00:24,  5.71it/s, v_num=1, train_loss_step=522, train_loss_epoch=515]Epoch 262/400:  66%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå   | 262/400 [00:45<00:23,  5.87it/s, v_num=1, train_loss_step=522, train_loss_epoch=515]Epoch 262/400:  66%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå   | 262/400 [00:45<00:23,  5.87it/s, v_num=1, train_loss_step=492, train_loss_epoch=516]Epoch 263/400:  66%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå   | 262/400 [00:45<00:23,  5.87it/s, v_num=1, train_loss_step=492, train_loss_epoch=516]Epoch 263/400:  66%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå   | 263/400 [00:45<00:23,  5.94it/s, v_num=1, train_loss_step=492, train_loss_epoch=516]Epoch 263/400:  66%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå   | 263/400 [00:45<00:23,  5.94it/s, v_num=1, train_loss_step=487, train_loss_epoch=516]Epoch 264/400:  66%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå   | 263/400 [00:45<00:23,  5.94it/s, v_num=1, train_loss_step=487, train_loss_epoch=516]Epoch 264/400:  66%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå   | 264/400 [00:45<00:22,  5.93it/s, v_num=1, train_loss_step=487, train_loss_epoch=516]Epoch 264/400:  66%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå   | 264/400 [00:45<00:22,  5.93it/s, v_num=1, train_loss_step=531, train_loss_epoch=515]Epoch 265/400:  66%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå   | 264/400 [00:45<00:22,  5.93it/s, v_num=1, train_loss_step=531, train_loss_epoch=515]Epoch 265/400:  66%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã   | 265/400 [00:45<00:23,  5.86it/s, v_num=1, train_loss_step=531, train_loss_epoch=515]Epoch 265/400:  66%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã   | 265/400 [00:45<00:23,  5.86it/s, v_num=1, train_loss_step=519, train_loss_epoch=515]Epoch 266/400:  66%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã   | 265/400 [00:45<00:23,  5.86it/s, v_num=1, train_loss_step=519, train_loss_epoch=515]Epoch 266/400:  66%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã   | 266/400 [00:46<00:23,  5.76it/s, v_num=1, train_loss_step=519, train_loss_epoch=515]Epoch 266/400:  66%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã   | 266/400 [00:46<00:23,  5.76it/s, v_num=1, train_loss_step=477, train_loss_epoch=515]Epoch 267/400:  66%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã   | 266/400 [00:46<00:23,  5.76it/s, v_num=1, train_loss_step=477, train_loss_epoch=515]Epoch 267/400:  67%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã   | 267/400 [00:46<00:22,  5.81it/s, v_num=1, train_loss_step=477, train_loss_epoch=515]Epoch 267/400:  67%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã   | 267/400 [00:46<00:22,  5.81it/s, v_num=1, train_loss_step=540, train_loss_epoch=515]Epoch 268/400:  67%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã   | 267/400 [00:46<00:22,  5.81it/s, v_num=1, train_loss_step=540, train_loss_epoch=515]Epoch 268/400:  67%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã   | 268/400 [00:46<00:22,  5.92it/s, v_num=1, train_loss_step=540, train_loss_epoch=515]Epoch 268/400:  67%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã   | 268/400 [00:46<00:22,  5.92it/s, v_num=1, train_loss_step=515, train_loss_epoch=515]Epoch 269/400:  67%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã   | 268/400 [00:46<00:22,  5.92it/s, v_num=1, train_loss_step=515, train_loss_epoch=515]Epoch 269/400:  67%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã   | 269/400 [00:46<00:22,  5.94it/s, v_num=1, train_loss_step=515, train_loss_epoch=515]Epoch 269/400:  67%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã   | 269/400 [00:46<00:22,  5.94it/s, v_num=1, train_loss_step=500, train_loss_epoch=515]Epoch 270/400:  67%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã   | 269/400 [00:46<00:22,  5.94it/s, v_num=1, train_loss_step=500, train_loss_epoch=515]Epoch 270/400:  68%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä   | 270/400 [00:46<00:21,  6.00it/s, v_num=1, train_loss_step=500, train_loss_epoch=515]Epoch 270/400:  68%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä   | 270/400 [00:46<00:21,  6.00it/s, v_num=1, train_loss_step=513, train_loss_epoch=515]Epoch 271/400:  68%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä   | 270/400 [00:46<00:21,  6.00it/s, v_num=1, train_loss_step=513, train_loss_epoch=515]Epoch 271/400:  68%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä   | 271/400 [00:46<00:21,  5.99it/s, v_num=1, train_loss_step=513, train_loss_epoch=515]Epoch 271/400:  68%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä   | 271/400 [00:46<00:21,  5.99it/s, v_num=1, train_loss_step=510, train_loss_epoch=515]Epoch 272/400:  68%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä   | 271/400 [00:46<00:21,  5.99it/s, v_num=1, train_loss_step=510, train_loss_epoch=515]Epoch 272/400:  68%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä   | 272/400 [00:47<00:21,  5.94it/s, v_num=1, train_loss_step=510, train_loss_epoch=515]Epoch 272/400:  68%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä   | 272/400 [00:47<00:21,  5.94it/s, v_num=1, train_loss_step=504, train_loss_epoch=515]Epoch 273/400:  68%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä   | 272/400 [00:47<00:21,  5.94it/s, v_num=1, train_loss_step=504, train_loss_epoch=515]Epoch 273/400:  68%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä   | 273/400 [00:47<00:21,  5.97it/s, v_num=1, train_loss_step=504, train_loss_epoch=515]Epoch 273/400:  68%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä   | 273/400 [00:47<00:21,  5.97it/s, v_num=1, train_loss_step=552, train_loss_epoch=514]Epoch 274/400:  68%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä   | 273/400 [00:47<00:21,  5.97it/s, v_num=1, train_loss_step=552, train_loss_epoch=514]Epoch 274/400:  68%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä   | 274/400 [00:47<00:21,  5.94it/s, v_num=1, train_loss_step=552, train_loss_epoch=514]Epoch 274/400:  68%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä   | 274/400 [00:47<00:21,  5.94it/s, v_num=1, train_loss_step=542, train_loss_epoch=514]Epoch 275/400:  68%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä   | 274/400 [00:47<00:21,  5.94it/s, v_num=1, train_loss_step=542, train_loss_epoch=514]Epoch 275/400:  69%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ   | 275/400 [00:47<00:21,  5.71it/s, v_num=1, train_loss_step=542, train_loss_epoch=514]Epoch 275/400:  69%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ   | 275/400 [00:47<00:21,  5.71it/s, v_num=1, train_loss_step=544, train_loss_epoch=514]Epoch 276/400:  69%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ   | 275/400 [00:47<00:21,  5.71it/s, v_num=1, train_loss_step=544, train_loss_epoch=514]Epoch 276/400:  69%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ   | 276/400 [00:47<00:22,  5.51it/s, v_num=1, train_loss_step=544, train_loss_epoch=514]Epoch 276/400:  69%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ   | 276/400 [00:47<00:22,  5.51it/s, v_num=1, train_loss_step=499, train_loss_epoch=514]Epoch 277/400:  69%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ   | 276/400 [00:47<00:22,  5.51it/s, v_num=1, train_loss_step=499, train_loss_epoch=514]Epoch 277/400:  69%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ   | 277/400 [00:48<00:22,  5.39it/s, v_num=1, train_loss_step=499, train_loss_epoch=514]Epoch 277/400:  69%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ   | 277/400 [00:48<00:22,  5.39it/s, v_num=1, train_loss_step=548, train_loss_epoch=514]Epoch 278/400:  69%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ   | 277/400 [00:48<00:22,  5.39it/s, v_num=1, train_loss_step=548, train_loss_epoch=514]Epoch 278/400:  70%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ   | 278/400 [00:48<00:22,  5.49it/s, v_num=1, train_loss_step=548, train_loss_epoch=514]Epoch 278/400:  70%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ   | 278/400 [00:48<00:22,  5.49it/s, v_num=1, train_loss_step=531, train_loss_epoch=514]Epoch 279/400:  70%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ   | 278/400 [00:48<00:22,  5.49it/s, v_num=1, train_loss_step=531, train_loss_epoch=514]Epoch 279/400:  70%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ   | 279/400 [00:48<00:22,  5.38it/s, v_num=1, train_loss_step=531, train_loss_epoch=514]Epoch 279/400:  70%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ   | 279/400 [00:48<00:22,  5.38it/s, v_num=1, train_loss_step=547, train_loss_epoch=514]Epoch 280/400:  70%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ   | 279/400 [00:48<00:22,  5.38it/s, v_num=1, train_loss_step=547, train_loss_epoch=514]Epoch 280/400:  70%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà   | 280/400 [00:48<00:22,  5.34it/s, v_num=1, train_loss_step=547, train_loss_epoch=514]Epoch 280/400:  70%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà   | 280/400 [00:48<00:22,  5.34it/s, v_num=1, train_loss_step=509, train_loss_epoch=514]Epoch 281/400:  70%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà   | 280/400 [00:48<00:22,  5.34it/s, v_num=1, train_loss_step=509, train_loss_epoch=514]Epoch 281/400:  70%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà   | 281/400 [00:48<00:22,  5.36it/s, v_num=1, train_loss_step=509, train_loss_epoch=514]Epoch 281/400:  70%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà   | 281/400 [00:48<00:22,  5.36it/s, v_num=1, train_loss_step=532, train_loss_epoch=514]Epoch 282/400:  70%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà   | 281/400 [00:48<00:22,  5.36it/s, v_num=1, train_loss_step=532, train_loss_epoch=514]Epoch 282/400:  70%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà   | 282/400 [00:48<00:21,  5.51it/s, v_num=1, train_loss_step=532, train_loss_epoch=514]Epoch 282/400:  70%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà   | 282/400 [00:48<00:21,  5.51it/s, v_num=1, train_loss_step=524, train_loss_epoch=514]Epoch 283/400:  70%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà   | 282/400 [00:48<00:21,  5.51it/s, v_num=1, train_loss_step=524, train_loss_epoch=514]Epoch 283/400:  71%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà   | 283/400 [00:49<00:20,  5.59it/s, v_num=1, train_loss_step=524, train_loss_epoch=514]Epoch 283/400:  71%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà   | 283/400 [00:49<00:20,  5.59it/s, v_num=1, train_loss_step=501, train_loss_epoch=514]Epoch 284/400:  71%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà   | 283/400 [00:49<00:20,  5.59it/s, v_num=1, train_loss_step=501, train_loss_epoch=514]Epoch 284/400:  71%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà   | 284/400 [00:49<00:21,  5.50it/s, v_num=1, train_loss_step=501, train_loss_epoch=514]Epoch 284/400:  71%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà   | 284/400 [00:49<00:21,  5.50it/s, v_num=1, train_loss_step=543, train_loss_epoch=513]Epoch 285/400:  71%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà   | 284/400 [00:49<00:21,  5.50it/s, v_num=1, train_loss_step=543, train_loss_epoch=513]Epoch 285/400:  71%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè  | 285/400 [00:49<00:20,  5.69it/s, v_num=1, train_loss_step=543, train_loss_epoch=513]Epoch 285/400:  71%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè  | 285/400 [00:49<00:20,  5.69it/s, v_num=1, train_loss_step=536, train_loss_epoch=513]Epoch 286/400:  71%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè  | 285/400 [00:49<00:20,  5.69it/s, v_num=1, train_loss_step=536, train_loss_epoch=513]Epoch 286/400:  72%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè  | 286/400 [00:49<00:20,  5.70it/s, v_num=1, train_loss_step=536, train_loss_epoch=513]Epoch 286/400:  72%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè  | 286/400 [00:49<00:20,  5.70it/s, v_num=1, train_loss_step=504, train_loss_epoch=513]Epoch 287/400:  72%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè  | 286/400 [00:49<00:20,  5.70it/s, v_num=1, train_loss_step=504, train_loss_epoch=513]Epoch 287/400:  72%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè  | 287/400 [00:49<00:19,  5.80it/s, v_num=1, train_loss_step=504, train_loss_epoch=513]Epoch 287/400:  72%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè  | 287/400 [00:49<00:19,  5.80it/s, v_num=1, train_loss_step=499, train_loss_epoch=513]Epoch 288/400:  72%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè  | 287/400 [00:49<00:19,  5.80it/s, v_num=1, train_loss_step=499, train_loss_epoch=513]Epoch 288/400:  72%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè  | 288/400 [00:49<00:19,  5.75it/s, v_num=1, train_loss_step=499, train_loss_epoch=513]Epoch 288/400:  72%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè  | 288/400 [00:50<00:19,  5.75it/s, v_num=1, train_loss_step=485, train_loss_epoch=513]Epoch 289/400:  72%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè  | 288/400 [00:50<00:19,  5.75it/s, v_num=1, train_loss_step=485, train_loss_epoch=513]Epoch 289/400:  72%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè  | 289/400 [00:50<00:19,  5.81it/s, v_num=1, train_loss_step=485, train_loss_epoch=513]Epoch 289/400:  72%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè  | 289/400 [00:50<00:19,  5.81it/s, v_num=1, train_loss_step=498, train_loss_epoch=513]Epoch 290/400:  72%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè  | 289/400 [00:50<00:19,  5.81it/s, v_num=1, train_loss_step=498, train_loss_epoch=513]Epoch 290/400:  72%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé  | 290/400 [00:50<00:18,  5.88it/s, v_num=1, train_loss_step=498, train_loss_epoch=513]Epoch 290/400:  72%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé  | 290/400 [00:50<00:18,  5.88it/s, v_num=1, train_loss_step=537, train_loss_epoch=513]Epoch 291/400:  72%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé  | 290/400 [00:50<00:18,  5.88it/s, v_num=1, train_loss_step=537, train_loss_epoch=513]Epoch 291/400:  73%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé  | 291/400 [00:50<00:18,  5.89it/s, v_num=1, train_loss_step=537, train_loss_epoch=513]Epoch 291/400:  73%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé  | 291/400 [00:50<00:18,  5.89it/s, v_num=1, train_loss_step=519, train_loss_epoch=513]Epoch 292/400:  73%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé  | 291/400 [00:50<00:18,  5.89it/s, v_num=1, train_loss_step=519, train_loss_epoch=513]Epoch 292/400:  73%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé  | 292/400 [00:50<00:18,  5.91it/s, v_num=1, train_loss_step=519, train_loss_epoch=513]Epoch 292/400:  73%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé  | 292/400 [00:50<00:18,  5.91it/s, v_num=1, train_loss_step=510, train_loss_epoch=513]Epoch 293/400:  73%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé  | 292/400 [00:50<00:18,  5.91it/s, v_num=1, train_loss_step=510, train_loss_epoch=513]Epoch 293/400:  73%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé  | 293/400 [00:50<00:18,  5.91it/s, v_num=1, train_loss_step=510, train_loss_epoch=513]Epoch 293/400:  73%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé  | 293/400 [00:50<00:18,  5.91it/s, v_num=1, train_loss_step=518, train_loss_epoch=513]Epoch 294/400:  73%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé  | 293/400 [00:50<00:18,  5.91it/s, v_num=1, train_loss_step=518, train_loss_epoch=513]Epoch 294/400:  74%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé  | 294/400 [00:51<00:17,  6.00it/s, v_num=1, train_loss_step=518, train_loss_epoch=513]Epoch 294/400:  74%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé  | 294/400 [00:51<00:17,  6.00it/s, v_num=1, train_loss_step=555, train_loss_epoch=513]Epoch 295/400:  74%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé  | 294/400 [00:51<00:17,  6.00it/s, v_num=1, train_loss_step=555, train_loss_epoch=513]Epoch 295/400:  74%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç  | 295/400 [00:51<00:17,  5.95it/s, v_num=1, train_loss_step=555, train_loss_epoch=513]Epoch 295/400:  74%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç  | 295/400 [00:51<00:17,  5.95it/s, v_num=1, train_loss_step=499, train_loss_epoch=513]Epoch 296/400:  74%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç  | 295/400 [00:51<00:17,  5.95it/s, v_num=1, train_loss_step=499, train_loss_epoch=513]Epoch 296/400:  74%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç  | 296/400 [00:51<00:17,  6.01it/s, v_num=1, train_loss_step=499, train_loss_epoch=513]Epoch 296/400:  74%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç  | 296/400 [00:51<00:17,  6.01it/s, v_num=1, train_loss_step=506, train_loss_epoch=513]Epoch 297/400:  74%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç  | 296/400 [00:51<00:17,  6.01it/s, v_num=1, train_loss_step=506, train_loss_epoch=513]Epoch 297/400:  74%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç  | 297/400 [00:51<00:17,  5.79it/s, v_num=1, train_loss_step=506, train_loss_epoch=513]Epoch 297/400:  74%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç  | 297/400 [00:51<00:17,  5.79it/s, v_num=1, train_loss_step=499, train_loss_epoch=513]Epoch 298/400:  74%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç  | 297/400 [00:51<00:17,  5.79it/s, v_num=1, train_loss_step=499, train_loss_epoch=513]Epoch 298/400:  74%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç  | 298/400 [00:51<00:17,  5.74it/s, v_num=1, train_loss_step=499, train_loss_epoch=513]Epoch 298/400:  74%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç  | 298/400 [00:51<00:17,  5.74it/s, v_num=1, train_loss_step=504, train_loss_epoch=513]Epoch 299/400:  74%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç  | 298/400 [00:51<00:17,  5.74it/s, v_num=1, train_loss_step=504, train_loss_epoch=513]Epoch 299/400:  75%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç  | 299/400 [00:51<00:17,  5.83it/s, v_num=1, train_loss_step=504, train_loss_epoch=513]Epoch 299/400:  75%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç  | 299/400 [00:51<00:17,  5.83it/s, v_num=1, train_loss_step=509, train_loss_epoch=512]Epoch 300/400:  75%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç  | 299/400 [00:51<00:17,  5.83it/s, v_num=1, train_loss_step=509, train_loss_epoch=512]Epoch 300/400:  75%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå  | 300/400 [00:52<00:17,  5.82it/s, v_num=1, train_loss_step=509, train_loss_epoch=512]Epoch 300/400:  75%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå  | 300/400 [00:52<00:17,  5.82it/s, v_num=1, train_loss_step=520, train_loss_epoch=513]Epoch 301/400:  75%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå  | 300/400 [00:52<00:17,  5.82it/s, v_num=1, train_loss_step=520, train_loss_epoch=513]Epoch 301/400:  75%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå  | 301/400 [00:52<00:17,  5.56it/s, v_num=1, train_loss_step=520, train_loss_epoch=513]Epoch 301/400:  75%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå  | 301/400 [00:52<00:17,  5.56it/s, v_num=1, train_loss_step=508, train_loss_epoch=513]Epoch 302/400:  75%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå  | 301/400 [00:52<00:17,  5.56it/s, v_num=1, train_loss_step=508, train_loss_epoch=513]Epoch 302/400:  76%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå  | 302/400 [00:52<00:18,  5.43it/s, v_num=1, train_loss_step=508, train_loss_epoch=513]Epoch 302/400:  76%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå  | 302/400 [00:52<00:18,  5.43it/s, v_num=1, train_loss_step=507, train_loss_epoch=512]Epoch 303/400:  76%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå  | 302/400 [00:52<00:18,  5.43it/s, v_num=1, train_loss_step=507, train_loss_epoch=512]Epoch 303/400:  76%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå  | 303/400 [00:52<00:17,  5.64it/s, v_num=1, train_loss_step=507, train_loss_epoch=512]Epoch 303/400:  76%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå  | 303/400 [00:52<00:17,  5.64it/s, v_num=1, train_loss_step=495, train_loss_epoch=513]Epoch 304/400:  76%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå  | 303/400 [00:52<00:17,  5.64it/s, v_num=1, train_loss_step=495, train_loss_epoch=513]Epoch 304/400:  76%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå  | 304/400 [00:52<00:16,  5.72it/s, v_num=1, train_loss_step=495, train_loss_epoch=513]Epoch 304/400:  76%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå  | 304/400 [00:52<00:16,  5.72it/s, v_num=1, train_loss_step=537, train_loss_epoch=512]Epoch 305/400:  76%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå  | 304/400 [00:52<00:16,  5.72it/s, v_num=1, train_loss_step=537, train_loss_epoch=512]Epoch 305/400:  76%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã  | 305/400 [00:52<00:16,  5.63it/s, v_num=1, train_loss_step=537, train_loss_epoch=512]Epoch 305/400:  76%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã  | 305/400 [00:52<00:16,  5.63it/s, v_num=1, train_loss_step=498, train_loss_epoch=512]Epoch 306/400:  76%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã  | 305/400 [00:52<00:16,  5.63it/s, v_num=1, train_loss_step=498, train_loss_epoch=512]Epoch 306/400:  76%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã  | 306/400 [00:53<00:16,  5.72it/s, v_num=1, train_loss_step=498, train_loss_epoch=512]Epoch 306/400:  76%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã  | 306/400 [00:53<00:16,  5.72it/s, v_num=1, train_loss_step=550, train_loss_epoch=512]Epoch 307/400:  76%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã  | 306/400 [00:53<00:16,  5.72it/s, v_num=1, train_loss_step=550, train_loss_epoch=512]Epoch 307/400:  77%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã  | 307/400 [00:53<00:16,  5.77it/s, v_num=1, train_loss_step=550, train_loss_epoch=512]Epoch 307/400:  77%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã  | 307/400 [00:53<00:16,  5.77it/s, v_num=1, train_loss_step=528, train_loss_epoch=511]Epoch 308/400:  77%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã  | 307/400 [00:53<00:16,  5.77it/s, v_num=1, train_loss_step=528, train_loss_epoch=511]Epoch 308/400:  77%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã  | 308/400 [00:53<00:16,  5.66it/s, v_num=1, train_loss_step=528, train_loss_epoch=511]Epoch 308/400:  77%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã  | 308/400 [00:53<00:16,  5.66it/s, v_num=1, train_loss_step=507, train_loss_epoch=512]Epoch 309/400:  77%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã  | 308/400 [00:53<00:16,  5.66it/s, v_num=1, train_loss_step=507, train_loss_epoch=512]Epoch 309/400:  77%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã  | 309/400 [00:53<00:16,  5.55it/s, v_num=1, train_loss_step=507, train_loss_epoch=512]Epoch 309/400:  77%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã  | 309/400 [00:53<00:16,  5.55it/s, v_num=1, train_loss_step=480, train_loss_epoch=513]Epoch 310/400:  77%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã  | 309/400 [00:53<00:16,  5.55it/s, v_num=1, train_loss_step=480, train_loss_epoch=513]Epoch 310/400:  78%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä  | 310/400 [00:53<00:16,  5.49it/s, v_num=1, train_loss_step=480, train_loss_epoch=513]Epoch 310/400:  78%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä  | 310/400 [00:53<00:16,  5.49it/s, v_num=1, train_loss_step=520, train_loss_epoch=512]Epoch 311/400:  78%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä  | 310/400 [00:53<00:16,  5.49it/s, v_num=1, train_loss_step=520, train_loss_epoch=512]Epoch 311/400:  78%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä  | 311/400 [00:54<00:15,  5.67it/s, v_num=1, train_loss_step=520, train_loss_epoch=512]Epoch 311/400:  78%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä  | 311/400 [00:54<00:15,  5.67it/s, v_num=1, train_loss_step=529, train_loss_epoch=512]Epoch 312/400:  78%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä  | 311/400 [00:54<00:15,  5.67it/s, v_num=1, train_loss_step=529, train_loss_epoch=512]Epoch 312/400:  78%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä  | 312/400 [00:54<00:15,  5.74it/s, v_num=1, train_loss_step=529, train_loss_epoch=512]Epoch 312/400:  78%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä  | 312/400 [00:54<00:15,  5.74it/s, v_num=1, train_loss_step=505, train_loss_epoch=511]Epoch 313/400:  78%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä  | 312/400 [00:54<00:15,  5.74it/s, v_num=1, train_loss_step=505, train_loss_epoch=511]Epoch 313/400:  78%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä  | 313/400 [00:54<00:15,  5.77it/s, v_num=1, train_loss_step=505, train_loss_epoch=511]Epoch 313/400:  78%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä  | 313/400 [00:54<00:15,  5.77it/s, v_num=1, train_loss_step=521, train_loss_epoch=512]Epoch 314/400:  78%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä  | 313/400 [00:54<00:15,  5.77it/s, v_num=1, train_loss_step=521, train_loss_epoch=512]Epoch 314/400:  78%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä  | 314/400 [00:54<00:14,  5.80it/s, v_num=1, train_loss_step=521, train_loss_epoch=512]Epoch 314/400:  78%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä  | 314/400 [00:54<00:14,  5.80it/s, v_num=1, train_loss_step=520, train_loss_epoch=512]Epoch 315/400:  78%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä  | 314/400 [00:54<00:14,  5.80it/s, v_num=1, train_loss_step=520, train_loss_epoch=512]Epoch 315/400:  79%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ  | 315/400 [00:54<00:14,  5.89it/s, v_num=1, train_loss_step=520, train_loss_epoch=512]Epoch 315/400:  79%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ  | 315/400 [00:54<00:14,  5.89it/s, v_num=1, train_loss_step=534, train_loss_epoch=512]Epoch 316/400:  79%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ  | 315/400 [00:54<00:14,  5.89it/s, v_num=1, train_loss_step=534, train_loss_epoch=512]Epoch 316/400:  79%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ  | 316/400 [00:54<00:14,  5.87it/s, v_num=1, train_loss_step=534, train_loss_epoch=512]Epoch 316/400:  79%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ  | 316/400 [00:54<00:14,  5.87it/s, v_num=1, train_loss_step=542, train_loss_epoch=512]Epoch 317/400:  79%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ  | 316/400 [00:54<00:14,  5.87it/s, v_num=1, train_loss_step=542, train_loss_epoch=512]Epoch 317/400:  79%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ  | 317/400 [00:55<00:13,  5.94it/s, v_num=1, train_loss_step=542, train_loss_epoch=512]Epoch 317/400:  79%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ  | 317/400 [00:55<00:13,  5.94it/s, v_num=1, train_loss_step=530, train_loss_epoch=512]Epoch 318/400:  79%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ  | 317/400 [00:55<00:13,  5.94it/s, v_num=1, train_loss_step=530, train_loss_epoch=512]Epoch 318/400:  80%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ  | 318/400 [00:55<00:14,  5.78it/s, v_num=1, train_loss_step=530, train_loss_epoch=512]Epoch 318/400:  80%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ  | 318/400 [00:55<00:14,  5.78it/s, v_num=1, train_loss_step=532, train_loss_epoch=512]Epoch 319/400:  80%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ  | 318/400 [00:55<00:14,  5.78it/s, v_num=1, train_loss_step=532, train_loss_epoch=512]Epoch 319/400:  80%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ  | 319/400 [00:55<00:13,  5.79it/s, v_num=1, train_loss_step=532, train_loss_epoch=512]Epoch 319/400:  80%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ  | 319/400 [00:55<00:13,  5.79it/s, v_num=1, train_loss_step=507, train_loss_epoch=511]Epoch 320/400:  80%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ  | 319/400 [00:55<00:13,  5.79it/s, v_num=1, train_loss_step=507, train_loss_epoch=511]Epoch 320/400:  80%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  | 320/400 [00:55<00:14,  5.64it/s, v_num=1, train_loss_step=507, train_loss_epoch=511]Epoch 320/400:  80%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  | 320/400 [00:55<00:14,  5.64it/s, v_num=1, train_loss_step=489, train_loss_epoch=511]Epoch 321/400:  80%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  | 320/400 [00:55<00:14,  5.64it/s, v_num=1, train_loss_step=489, train_loss_epoch=511]Epoch 321/400:  80%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  | 321/400 [00:55<00:14,  5.50it/s, v_num=1, train_loss_step=489, train_loss_epoch=511]Epoch 321/400:  80%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  | 321/400 [00:55<00:14,  5.50it/s, v_num=1, train_loss_step=519, train_loss_epoch=511]Epoch 322/400:  80%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  | 321/400 [00:55<00:14,  5.50it/s, v_num=1, train_loss_step=519, train_loss_epoch=511]Epoch 322/400:  80%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  | 322/400 [00:55<00:13,  5.65it/s, v_num=1, train_loss_step=519, train_loss_epoch=511]Epoch 322/400:  80%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  | 322/400 [00:55<00:13,  5.65it/s, v_num=1, train_loss_step=495, train_loss_epoch=511]Epoch 323/400:  80%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  | 322/400 [00:55<00:13,  5.65it/s, v_num=1, train_loss_step=495, train_loss_epoch=511]Epoch 323/400:  81%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  | 323/400 [00:56<00:13,  5.71it/s, v_num=1, train_loss_step=495, train_loss_epoch=511]Epoch 323/400:  81%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  | 323/400 [00:56<00:13,  5.71it/s, v_num=1, train_loss_step=510, train_loss_epoch=511]Epoch 324/400:  81%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  | 323/400 [00:56<00:13,  5.71it/s, v_num=1, train_loss_step=510, train_loss_epoch=511]Epoch 324/400:  81%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  | 324/400 [00:56<00:13,  5.48it/s, v_num=1, train_loss_step=510, train_loss_epoch=511]Epoch 324/400:  81%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  | 324/400 [00:56<00:13,  5.48it/s, v_num=1, train_loss_step=502, train_loss_epoch=510]Epoch 325/400:  81%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  | 324/400 [00:56<00:13,  5.48it/s, v_num=1, train_loss_step=502, train_loss_epoch=510]Epoch 325/400:  81%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè | 325/400 [00:56<00:13,  5.54it/s, v_num=1, train_loss_step=502, train_loss_epoch=510]Epoch 325/400:  81%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè | 325/400 [00:56<00:13,  5.54it/s, v_num=1, train_loss_step=489, train_loss_epoch=510]Epoch 326/400:  81%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè | 325/400 [00:56<00:13,  5.54it/s, v_num=1, train_loss_step=489, train_loss_epoch=510]Epoch 326/400:  82%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè | 326/400 [00:56<00:13,  5.63it/s, v_num=1, train_loss_step=489, train_loss_epoch=510]Epoch 326/400:  82%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè | 326/400 [00:56<00:13,  5.63it/s, v_num=1, train_loss_step=518, train_loss_epoch=510]Epoch 327/400:  82%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè | 326/400 [00:56<00:13,  5.63it/s, v_num=1, train_loss_step=518, train_loss_epoch=510]Epoch 327/400:  82%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè | 327/400 [00:56<00:13,  5.48it/s, v_num=1, train_loss_step=518, train_loss_epoch=510]Epoch 327/400:  82%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè | 327/400 [00:56<00:13,  5.48it/s, v_num=1, train_loss_step=493, train_loss_epoch=511]Epoch 328/400:  82%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè | 327/400 [00:56<00:13,  5.48it/s, v_num=1, train_loss_step=493, train_loss_epoch=511]Epoch 328/400:  82%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè | 328/400 [00:57<00:13,  5.27it/s, v_num=1, train_loss_step=493, train_loss_epoch=511]Epoch 328/400:  82%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè | 328/400 [00:57<00:13,  5.27it/s, v_num=1, train_loss_step=506, train_loss_epoch=511]Epoch 329/400:  82%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè | 328/400 [00:57<00:13,  5.27it/s, v_num=1, train_loss_step=506, train_loss_epoch=511]Epoch 329/400:  82%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè | 329/400 [00:57<00:13,  5.26it/s, v_num=1, train_loss_step=506, train_loss_epoch=511]Epoch 329/400:  82%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè | 329/400 [00:57<00:13,  5.26it/s, v_num=1, train_loss_step=498, train_loss_epoch=511]Epoch 330/400:  82%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè | 329/400 [00:57<00:13,  5.26it/s, v_num=1, train_loss_step=498, train_loss_epoch=511]Epoch 330/400:  82%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé | 330/400 [00:57<00:13,  5.20it/s, v_num=1, train_loss_step=498, train_loss_epoch=511]Epoch 330/400:  82%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé | 330/400 [00:57<00:13,  5.20it/s, v_num=1, train_loss_step=495, train_loss_epoch=510]Epoch 331/400:  82%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé | 330/400 [00:57<00:13,  5.20it/s, v_num=1, train_loss_step=495, train_loss_epoch=510]Epoch 331/400:  83%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé | 331/400 [00:57<00:13,  5.18it/s, v_num=1, train_loss_step=495, train_loss_epoch=510]Epoch 331/400:  83%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé | 331/400 [00:57<00:13,  5.18it/s, v_num=1, train_loss_step=525, train_loss_epoch=511]Epoch 332/400:  83%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé | 331/400 [00:57<00:13,  5.18it/s, v_num=1, train_loss_step=525, train_loss_epoch=511]Epoch 332/400:  83%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé | 332/400 [00:57<00:12,  5.35it/s, v_num=1, train_loss_step=525, train_loss_epoch=511]Epoch 332/400:  83%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé | 332/400 [00:57<00:12,  5.35it/s, v_num=1, train_loss_step=556, train_loss_epoch=511]Epoch 333/400:  83%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé | 332/400 [00:57<00:12,  5.35it/s, v_num=1, train_loss_step=556, train_loss_epoch=511]Epoch 333/400:  83%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé | 333/400 [00:57<00:12,  5.44it/s, v_num=1, train_loss_step=556, train_loss_epoch=511]Epoch 333/400:  83%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé | 333/400 [00:57<00:12,  5.44it/s, v_num=1, train_loss_step=487, train_loss_epoch=511]Epoch 334/400:  83%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé | 333/400 [00:57<00:12,  5.44it/s, v_num=1, train_loss_step=487, train_loss_epoch=511]Epoch 334/400:  84%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé | 334/400 [00:58<00:11,  5.52it/s, v_num=1, train_loss_step=487, train_loss_epoch=511]Epoch 334/400:  84%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé | 334/400 [00:58<00:11,  5.52it/s, v_num=1, train_loss_step=496, train_loss_epoch=511]Epoch 335/400:  84%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé | 334/400 [00:58<00:11,  5.52it/s, v_num=1, train_loss_step=496, train_loss_epoch=511]Epoch 335/400:  84%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç | 335/400 [00:58<00:11,  5.69it/s, v_num=1, train_loss_step=496, train_loss_epoch=511]Epoch 335/400:  84%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç | 335/400 [00:58<00:11,  5.69it/s, v_num=1, train_loss_step=517, train_loss_epoch=511]Epoch 336/400:  84%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç | 335/400 [00:58<00:11,  5.69it/s, v_num=1, train_loss_step=517, train_loss_epoch=511]Epoch 336/400:  84%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç | 336/400 [00:58<00:11,  5.76it/s, v_num=1, train_loss_step=517, train_loss_epoch=511]Epoch 336/400:  84%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç | 336/400 [00:58<00:11,  5.76it/s, v_num=1, train_loss_step=529, train_loss_epoch=511]Epoch 337/400:  84%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç | 336/400 [00:58<00:11,  5.76it/s, v_num=1, train_loss_step=529, train_loss_epoch=511]Epoch 337/400:  84%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç | 337/400 [00:58<00:10,  5.87it/s, v_num=1, train_loss_step=529, train_loss_epoch=511]Epoch 337/400:  84%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç | 337/400 [00:58<00:10,  5.87it/s, v_num=1, train_loss_step=507, train_loss_epoch=510]Epoch 338/400:  84%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç | 337/400 [00:58<00:10,  5.87it/s, v_num=1, train_loss_step=507, train_loss_epoch=510]Epoch 338/400:  84%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç | 338/400 [00:58<00:10,  5.67it/s, v_num=1, train_loss_step=507, train_loss_epoch=510]Epoch 338/400:  84%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç | 338/400 [00:58<00:10,  5.67it/s, v_num=1, train_loss_step=508, train_loss_epoch=511]Epoch 339/400:  84%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç | 338/400 [00:58<00:10,  5.67it/s, v_num=1, train_loss_step=508, train_loss_epoch=511]Epoch 339/400:  85%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç | 339/400 [00:58<00:10,  5.77it/s, v_num=1, train_loss_step=508, train_loss_epoch=511]Epoch 339/400:  85%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç | 339/400 [00:58<00:10,  5.77it/s, v_num=1, train_loss_step=507, train_loss_epoch=511]Epoch 340/400:  85%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç | 339/400 [00:58<00:10,  5.77it/s, v_num=1, train_loss_step=507, train_loss_epoch=511]Epoch 340/400:  85%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå | 340/400 [00:59<00:10,  5.82it/s, v_num=1, train_loss_step=507, train_loss_epoch=511]Epoch 340/400:  85%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå | 340/400 [00:59<00:10,  5.82it/s, v_num=1, train_loss_step=510, train_loss_epoch=510]Epoch 341/400:  85%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå | 340/400 [00:59<00:10,  5.82it/s, v_num=1, train_loss_step=510, train_loss_epoch=510]Epoch 341/400:  85%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå | 341/400 [00:59<00:10,  5.89it/s, v_num=1, train_loss_step=510, train_loss_epoch=510]Epoch 341/400:  85%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå | 341/400 [00:59<00:10,  5.89it/s, v_num=1, train_loss_step=492, train_loss_epoch=510]Epoch 342/400:  85%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå | 341/400 [00:59<00:10,  5.89it/s, v_num=1, train_loss_step=492, train_loss_epoch=510]Epoch 342/400:  86%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå | 342/400 [00:59<00:09,  5.93it/s, v_num=1, train_loss_step=492, train_loss_epoch=510]Epoch 342/400:  86%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå | 342/400 [00:59<00:09,  5.93it/s, v_num=1, train_loss_step=489, train_loss_epoch=510]Epoch 343/400:  86%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå | 342/400 [00:59<00:09,  5.93it/s, v_num=1, train_loss_step=489, train_loss_epoch=510]Epoch 343/400:  86%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå | 343/400 [00:59<00:09,  5.97it/s, v_num=1, train_loss_step=489, train_loss_epoch=510]Epoch 343/400:  86%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå | 343/400 [00:59<00:09,  5.97it/s, v_num=1, train_loss_step=514, train_loss_epoch=510]Epoch 344/400:  86%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå | 343/400 [00:59<00:09,  5.97it/s, v_num=1, train_loss_step=514, train_loss_epoch=510]Epoch 344/400:  86%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå | 344/400 [00:59<00:09,  6.01it/s, v_num=1, train_loss_step=514, train_loss_epoch=510]Epoch 344/400:  86%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå | 344/400 [00:59<00:09,  6.01it/s, v_num=1, train_loss_step=519, train_loss_epoch=510]Epoch 345/400:  86%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå | 344/400 [00:59<00:09,  6.01it/s, v_num=1, train_loss_step=519, train_loss_epoch=510]Epoch 345/400:  86%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã | 345/400 [00:59<00:09,  6.03it/s, v_num=1, train_loss_step=519, train_loss_epoch=510]Epoch 345/400:  86%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã | 345/400 [00:59<00:09,  6.03it/s, v_num=1, train_loss_step=523, train_loss_epoch=510]Epoch 346/400:  86%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã | 345/400 [00:59<00:09,  6.03it/s, v_num=1, train_loss_step=523, train_loss_epoch=510]Epoch 346/400:  86%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã | 346/400 [01:00<00:08,  6.07it/s, v_num=1, train_loss_step=523, train_loss_epoch=510]Epoch 346/400:  86%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã | 346/400 [01:00<00:08,  6.07it/s, v_num=1, train_loss_step=508, train_loss_epoch=510]Epoch 347/400:  86%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã | 346/400 [01:00<00:08,  6.07it/s, v_num=1, train_loss_step=508, train_loss_epoch=510]Epoch 347/400:  87%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã | 347/400 [01:00<00:08,  6.10it/s, v_num=1, train_loss_step=508, train_loss_epoch=510]Epoch 347/400:  87%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã | 347/400 [01:00<00:08,  6.10it/s, v_num=1, train_loss_step=520, train_loss_epoch=510]Epoch 348/400:  87%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã | 347/400 [01:00<00:08,  6.10it/s, v_num=1, train_loss_step=520, train_loss_epoch=510]Epoch 348/400:  87%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã | 348/400 [01:00<00:08,  6.06it/s, v_num=1, train_loss_step=520, train_loss_epoch=510]Epoch 348/400:  87%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã | 348/400 [01:00<00:08,  6.06it/s, v_num=1, train_loss_step=483, train_loss_epoch=510]Epoch 349/400:  87%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã | 348/400 [01:00<00:08,  6.06it/s, v_num=1, train_loss_step=483, train_loss_epoch=510]Epoch 349/400:  87%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã | 349/400 [01:00<00:08,  6.09it/s, v_num=1, train_loss_step=483, train_loss_epoch=510]Epoch 349/400:  87%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã | 349/400 [01:00<00:08,  6.09it/s, v_num=1, train_loss_step=526, train_loss_epoch=510]Epoch 350/400:  87%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã | 349/400 [01:00<00:08,  6.09it/s, v_num=1, train_loss_step=526, train_loss_epoch=510]Epoch 350/400:  88%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä | 350/400 [01:00<00:08,  6.10it/s, v_num=1, train_loss_step=526, train_loss_epoch=510]Epoch 350/400:  88%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä | 350/400 [01:00<00:08,  6.10it/s, v_num=1, train_loss_step=529, train_loss_epoch=510]Epoch 351/400:  88%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä | 350/400 [01:00<00:08,  6.10it/s, v_num=1, train_loss_step=529, train_loss_epoch=510]Epoch 351/400:  88%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä | 351/400 [01:00<00:07,  6.13it/s, v_num=1, train_loss_step=529, train_loss_epoch=510]Epoch 351/400:  88%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä | 351/400 [01:00<00:07,  6.13it/s, v_num=1, train_loss_step=512, train_loss_epoch=510]Epoch 352/400:  88%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä | 351/400 [01:00<00:07,  6.13it/s, v_num=1, train_loss_step=512, train_loss_epoch=510]Epoch 352/400:  88%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä | 352/400 [01:01<00:07,  6.14it/s, v_num=1, train_loss_step=512, train_loss_epoch=510]Epoch 352/400:  88%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä | 352/400 [01:01<00:07,  6.14it/s, v_num=1, train_loss_step=508, train_loss_epoch=510]Epoch 353/400:  88%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä | 352/400 [01:01<00:07,  6.14it/s, v_num=1, train_loss_step=508, train_loss_epoch=510]Epoch 353/400:  88%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä | 353/400 [01:01<00:07,  6.13it/s, v_num=1, train_loss_step=508, train_loss_epoch=510]Epoch 353/400:  88%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä | 353/400 [01:01<00:07,  6.13it/s, v_num=1, train_loss_step=522, train_loss_epoch=510]Epoch 354/400:  88%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä | 353/400 [01:01<00:07,  6.13it/s, v_num=1, train_loss_step=522, train_loss_epoch=510]Epoch 354/400:  88%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä | 354/400 [01:01<00:07,  6.10it/s, v_num=1, train_loss_step=522, train_loss_epoch=510]Epoch 354/400:  88%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä | 354/400 [01:01<00:07,  6.10it/s, v_num=1, train_loss_step=486, train_loss_epoch=511]Epoch 355/400:  88%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä | 354/400 [01:01<00:07,  6.10it/s, v_num=1, train_loss_step=486, train_loss_epoch=511]Epoch 355/400:  89%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ | 355/400 [01:01<00:07,  6.10it/s, v_num=1, train_loss_step=486, train_loss_epoch=511]Epoch 355/400:  89%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ | 355/400 [01:01<00:07,  6.10it/s, v_num=1, train_loss_step=516, train_loss_epoch=510]Epoch 356/400:  89%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ | 355/400 [01:01<00:07,  6.10it/s, v_num=1, train_loss_step=516, train_loss_epoch=510]Epoch 356/400:  89%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ | 356/400 [01:01<00:07,  6.02it/s, v_num=1, train_loss_step=516, train_loss_epoch=510]Epoch 356/400:  89%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ | 356/400 [01:01<00:07,  6.02it/s, v_num=1, train_loss_step=547, train_loss_epoch=511]Epoch 357/400:  89%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ | 356/400 [01:01<00:07,  6.02it/s, v_num=1, train_loss_step=547, train_loss_epoch=511]Epoch 357/400:  89%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ | 357/400 [01:01<00:07,  6.01it/s, v_num=1, train_loss_step=547, train_loss_epoch=511]Epoch 357/400:  89%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ | 357/400 [01:01<00:07,  6.01it/s, v_num=1, train_loss_step=490, train_loss_epoch=509]Epoch 358/400:  89%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ | 357/400 [01:01<00:07,  6.01it/s, v_num=1, train_loss_step=490, train_loss_epoch=509]Epoch 358/400:  90%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ | 358/400 [01:02<00:06,  6.01it/s, v_num=1, train_loss_step=490, train_loss_epoch=509]Epoch 358/400:  90%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ | 358/400 [01:02<00:06,  6.01it/s, v_num=1, train_loss_step=507, train_loss_epoch=509]Epoch 359/400:  90%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ | 358/400 [01:02<00:06,  6.01it/s, v_num=1, train_loss_step=507, train_loss_epoch=509]Epoch 359/400:  90%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ | 359/400 [01:02<00:06,  6.00it/s, v_num=1, train_loss_step=507, train_loss_epoch=509]Epoch 359/400:  90%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ | 359/400 [01:02<00:06,  6.00it/s, v_num=1, train_loss_step=521, train_loss_epoch=509]Epoch 360/400:  90%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ | 359/400 [01:02<00:06,  6.00it/s, v_num=1, train_loss_step=521, train_loss_epoch=509]Epoch 360/400:  90%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà | 360/400 [01:02<00:06,  6.03it/s, v_num=1, train_loss_step=521, train_loss_epoch=509]Epoch 360/400:  90%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà | 360/400 [01:02<00:06,  6.03it/s, v_num=1, train_loss_step=534, train_loss_epoch=510]Epoch 361/400:  90%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà | 360/400 [01:02<00:06,  6.03it/s, v_num=1, train_loss_step=534, train_loss_epoch=510]Epoch 361/400:  90%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà | 361/400 [01:02<00:06,  5.96it/s, v_num=1, train_loss_step=534, train_loss_epoch=510]Epoch 361/400:  90%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà | 361/400 [01:02<00:06,  5.96it/s, v_num=1, train_loss_step=528, train_loss_epoch=510]Epoch 362/400:  90%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà | 361/400 [01:02<00:06,  5.96it/s, v_num=1, train_loss_step=528, train_loss_epoch=510]Epoch 362/400:  90%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà | 362/400 [01:02<00:06,  5.96it/s, v_num=1, train_loss_step=528, train_loss_epoch=510]Epoch 362/400:  90%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà | 362/400 [01:02<00:06,  5.96it/s, v_num=1, train_loss_step=499, train_loss_epoch=510]Epoch 363/400:  90%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà | 362/400 [01:02<00:06,  5.96it/s, v_num=1, train_loss_step=499, train_loss_epoch=510]Epoch 363/400:  91%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà | 363/400 [01:02<00:06,  6.02it/s, v_num=1, train_loss_step=499, train_loss_epoch=510]Epoch 363/400:  91%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà | 363/400 [01:02<00:06,  6.02it/s, v_num=1, train_loss_step=485, train_loss_epoch=510]Epoch 364/400:  91%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà | 363/400 [01:02<00:06,  6.02it/s, v_num=1, train_loss_step=485, train_loss_epoch=510]Epoch 364/400:  91%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà | 364/400 [01:03<00:05,  6.05it/s, v_num=1, train_loss_step=485, train_loss_epoch=510]Epoch 364/400:  91%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà | 364/400 [01:03<00:05,  6.05it/s, v_num=1, train_loss_step=503, train_loss_epoch=509]Epoch 365/400:  91%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà | 364/400 [01:03<00:05,  6.05it/s, v_num=1, train_loss_step=503, train_loss_epoch=509]Epoch 365/400:  91%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè| 365/400 [01:03<00:05,  6.03it/s, v_num=1, train_loss_step=503, train_loss_epoch=509]Epoch 365/400:  91%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè| 365/400 [01:03<00:05,  6.03it/s, v_num=1, train_loss_step=499, train_loss_epoch=509]Epoch 366/400:  91%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè| 365/400 [01:03<00:05,  6.03it/s, v_num=1, train_loss_step=499, train_loss_epoch=509]Epoch 366/400:  92%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè| 366/400 [01:03<00:05,  6.09it/s, v_num=1, train_loss_step=499, train_loss_epoch=509]Epoch 366/400:  92%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè| 366/400 [01:03<00:05,  6.09it/s, v_num=1, train_loss_step=495, train_loss_epoch=509]Epoch 367/400:  92%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè| 366/400 [01:03<00:05,  6.09it/s, v_num=1, train_loss_step=495, train_loss_epoch=509]Epoch 367/400:  92%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè| 367/400 [01:03<00:05,  6.12it/s, v_num=1, train_loss_step=495, train_loss_epoch=509]Epoch 367/400:  92%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè| 367/400 [01:03<00:05,  6.12it/s, v_num=1, train_loss_step=531, train_loss_epoch=509]Epoch 368/400:  92%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè| 367/400 [01:03<00:05,  6.12it/s, v_num=1, train_loss_step=531, train_loss_epoch=509]Epoch 368/400:  92%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè| 368/400 [01:03<00:05,  6.15it/s, v_num=1, train_loss_step=531, train_loss_epoch=509]Epoch 368/400:  92%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè| 368/400 [01:03<00:05,  6.15it/s, v_num=1, train_loss_step=496, train_loss_epoch=510]Epoch 369/400:  92%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè| 368/400 [01:03<00:05,  6.15it/s, v_num=1, train_loss_step=496, train_loss_epoch=510]Epoch 369/400:  92%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè| 369/400 [01:03<00:05,  6.18it/s, v_num=1, train_loss_step=496, train_loss_epoch=510]Epoch 369/400:  92%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè| 369/400 [01:03<00:05,  6.18it/s, v_num=1, train_loss_step=496, train_loss_epoch=509]Epoch 370/400:  92%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè| 369/400 [01:03<00:05,  6.18it/s, v_num=1, train_loss_step=496, train_loss_epoch=509]Epoch 370/400:  92%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé| 370/400 [01:04<00:04,  6.17it/s, v_num=1, train_loss_step=496, train_loss_epoch=509]Epoch 370/400:  92%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé| 370/400 [01:04<00:04,  6.17it/s, v_num=1, train_loss_step=522, train_loss_epoch=510]Epoch 371/400:  92%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé| 370/400 [01:04<00:04,  6.17it/s, v_num=1, train_loss_step=522, train_loss_epoch=510]Epoch 371/400:  93%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé| 371/400 [01:04<00:04,  6.16it/s, v_num=1, train_loss_step=522, train_loss_epoch=510]Epoch 371/400:  93%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé| 371/400 [01:04<00:04,  6.16it/s, v_num=1, train_loss_step=481, train_loss_epoch=510]Epoch 372/400:  93%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé| 371/400 [01:04<00:04,  6.16it/s, v_num=1, train_loss_step=481, train_loss_epoch=510]Epoch 372/400:  93%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé| 372/400 [01:04<00:04,  6.05it/s, v_num=1, train_loss_step=481, train_loss_epoch=510]Epoch 372/400:  93%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé| 372/400 [01:04<00:04,  6.05it/s, v_num=1, train_loss_step=517, train_loss_epoch=509]Epoch 373/400:  93%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé| 372/400 [01:04<00:04,  6.05it/s, v_num=1, train_loss_step=517, train_loss_epoch=509]Epoch 373/400:  93%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé| 373/400 [01:04<00:04,  5.96it/s, v_num=1, train_loss_step=517, train_loss_epoch=509]Epoch 373/400:  93%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé| 373/400 [01:04<00:04,  5.96it/s, v_num=1, train_loss_step=518, train_loss_epoch=509]Epoch 374/400:  93%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé| 373/400 [01:04<00:04,  5.96it/s, v_num=1, train_loss_step=518, train_loss_epoch=509]Epoch 374/400:  94%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé| 374/400 [01:04<00:04,  5.96it/s, v_num=1, train_loss_step=518, train_loss_epoch=509]Epoch 374/400:  94%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé| 374/400 [01:04<00:04,  5.96it/s, v_num=1, train_loss_step=504, train_loss_epoch=509]Epoch 375/400:  94%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé| 374/400 [01:04<00:04,  5.96it/s, v_num=1, train_loss_step=504, train_loss_epoch=509]Epoch 375/400:  94%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç| 375/400 [01:04<00:04,  6.03it/s, v_num=1, train_loss_step=504, train_loss_epoch=509]Epoch 375/400:  94%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç| 375/400 [01:04<00:04,  6.03it/s, v_num=1, train_loss_step=508, train_loss_epoch=508]Epoch 376/400:  94%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç| 375/400 [01:04<00:04,  6.03it/s, v_num=1, train_loss_step=508, train_loss_epoch=508]Epoch 376/400:  94%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç| 376/400 [01:05<00:03,  6.02it/s, v_num=1, train_loss_step=508, train_loss_epoch=508]Epoch 376/400:  94%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç| 376/400 [01:05<00:03,  6.02it/s, v_num=1, train_loss_step=555, train_loss_epoch=509]Epoch 377/400:  94%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç| 376/400 [01:05<00:03,  6.02it/s, v_num=1, train_loss_step=555, train_loss_epoch=509]Epoch 377/400:  94%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç| 377/400 [01:05<00:03,  5.92it/s, v_num=1, train_loss_step=555, train_loss_epoch=509]Epoch 377/400:  94%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç| 377/400 [01:05<00:03,  5.92it/s, v_num=1, train_loss_step=516, train_loss_epoch=509]Epoch 378/400:  94%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç| 377/400 [01:05<00:03,  5.92it/s, v_num=1, train_loss_step=516, train_loss_epoch=509]Epoch 378/400:  94%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç| 378/400 [01:05<00:03,  5.72it/s, v_num=1, train_loss_step=516, train_loss_epoch=509]Epoch 378/400:  94%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç| 378/400 [01:05<00:03,  5.72it/s, v_num=1, train_loss_step=503, train_loss_epoch=509]Epoch 379/400:  94%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç| 378/400 [01:05<00:03,  5.72it/s, v_num=1, train_loss_step=503, train_loss_epoch=509]Epoch 379/400:  95%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç| 379/400 [01:05<00:03,  5.77it/s, v_num=1, train_loss_step=503, train_loss_epoch=509]Epoch 379/400:  95%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç| 379/400 [01:05<00:03,  5.77it/s, v_num=1, train_loss_step=533, train_loss_epoch=510]Epoch 380/400:  95%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç| 379/400 [01:05<00:03,  5.77it/s, v_num=1, train_loss_step=533, train_loss_epoch=510]Epoch 380/400:  95%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå| 380/400 [01:05<00:03,  5.45it/s, v_num=1, train_loss_step=533, train_loss_epoch=510]Epoch 380/400:  95%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå| 380/400 [01:05<00:03,  5.45it/s, v_num=1, train_loss_step=476, train_loss_epoch=510]Epoch 381/400:  95%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå| 380/400 [01:05<00:03,  5.45it/s, v_num=1, train_loss_step=476, train_loss_epoch=510]Epoch 381/400:  95%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå| 381/400 [01:06<00:03,  5.30it/s, v_num=1, train_loss_step=476, train_loss_epoch=510]Epoch 381/400:  95%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå| 381/400 [01:06<00:03,  5.30it/s, v_num=1, train_loss_step=496, train_loss_epoch=509]Epoch 382/400:  95%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå| 381/400 [01:06<00:03,  5.30it/s, v_num=1, train_loss_step=496, train_loss_epoch=509]Epoch 382/400:  96%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå| 382/400 [01:06<00:03,  5.34it/s, v_num=1, train_loss_step=496, train_loss_epoch=509]Epoch 382/400:  96%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå| 382/400 [01:06<00:03,  5.34it/s, v_num=1, train_loss_step=507, train_loss_epoch=509]Epoch 383/400:  96%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå| 382/400 [01:06<00:03,  5.34it/s, v_num=1, train_loss_step=507, train_loss_epoch=509]Epoch 383/400:  96%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå| 383/400 [01:06<00:03,  5.47it/s, v_num=1, train_loss_step=507, train_loss_epoch=509]Epoch 383/400:  96%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå| 383/400 [01:06<00:03,  5.47it/s, v_num=1, train_loss_step=510, train_loss_epoch=509]Epoch 384/400:  96%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå| 383/400 [01:06<00:03,  5.47it/s, v_num=1, train_loss_step=510, train_loss_epoch=509]Epoch 384/400:  96%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå| 384/400 [01:06<00:03,  5.22it/s, v_num=1, train_loss_step=510, train_loss_epoch=509]Epoch 384/400:  96%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå| 384/400 [01:06<00:03,  5.22it/s, v_num=1, train_loss_step=498, train_loss_epoch=509]Epoch 385/400:  96%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå| 384/400 [01:06<00:03,  5.22it/s, v_num=1, train_loss_step=498, train_loss_epoch=509]Epoch 385/400:  96%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã| 385/400 [01:06<00:02,  5.15it/s, v_num=1, train_loss_step=498, train_loss_epoch=509]Epoch 385/400:  96%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã| 385/400 [01:06<00:02,  5.15it/s, v_num=1, train_loss_step=499, train_loss_epoch=509]Epoch 386/400:  96%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã| 385/400 [01:06<00:02,  5.15it/s, v_num=1, train_loss_step=499, train_loss_epoch=509]Epoch 386/400:  96%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã| 386/400 [01:06<00:02,  5.32it/s, v_num=1, train_loss_step=499, train_loss_epoch=509]Epoch 386/400:  96%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã| 386/400 [01:06<00:02,  5.32it/s, v_num=1, train_loss_step=535, train_loss_epoch=509]Epoch 387/400:  96%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã| 386/400 [01:06<00:02,  5.32it/s, v_num=1, train_loss_step=535, train_loss_epoch=509]Epoch 387/400:  97%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã| 387/400 [01:07<00:02,  5.41it/s, v_num=1, train_loss_step=535, train_loss_epoch=509]Epoch 387/400:  97%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã| 387/400 [01:07<00:02,  5.41it/s, v_num=1, train_loss_step=531, train_loss_epoch=510]Epoch 388/400:  97%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã| 387/400 [01:07<00:02,  5.41it/s, v_num=1, train_loss_step=531, train_loss_epoch=510]Epoch 388/400:  97%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã| 388/400 [01:07<00:02,  5.59it/s, v_num=1, train_loss_step=531, train_loss_epoch=510]Epoch 388/400:  97%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã| 388/400 [01:07<00:02,  5.59it/s, v_num=1, train_loss_step=487, train_loss_epoch=509]Epoch 389/400:  97%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã| 388/400 [01:07<00:02,  5.59it/s, v_num=1, train_loss_step=487, train_loss_epoch=509]Epoch 389/400:  97%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã| 389/400 [01:07<00:01,  5.69it/s, v_num=1, train_loss_step=487, train_loss_epoch=509]Epoch 389/400:  97%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã| 389/400 [01:07<00:01,  5.69it/s, v_num=1, train_loss_step=528, train_loss_epoch=509]Epoch 390/400:  97%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã| 389/400 [01:07<00:01,  5.69it/s, v_num=1, train_loss_step=528, train_loss_epoch=509]Epoch 390/400:  98%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä| 390/400 [01:07<00:01,  5.68it/s, v_num=1, train_loss_step=528, train_loss_epoch=509]Epoch 390/400:  98%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä| 390/400 [01:07<00:01,  5.68it/s, v_num=1, train_loss_step=490, train_loss_epoch=509]Epoch 391/400:  98%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä| 390/400 [01:07<00:01,  5.68it/s, v_num=1, train_loss_step=490, train_loss_epoch=509]Epoch 391/400:  98%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä| 391/400 [01:07<00:01,  5.82it/s, v_num=1, train_loss_step=490, train_loss_epoch=509]Epoch 391/400:  98%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä| 391/400 [01:07<00:01,  5.82it/s, v_num=1, train_loss_step=527, train_loss_epoch=509]Epoch 392/400:  98%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä| 391/400 [01:07<00:01,  5.82it/s, v_num=1, train_loss_step=527, train_loss_epoch=509]Epoch 392/400:  98%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä| 392/400 [01:07<00:01,  5.87it/s, v_num=1, train_loss_step=527, train_loss_epoch=509]Epoch 392/400:  98%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä| 392/400 [01:07<00:01,  5.87it/s, v_num=1, train_loss_step=506, train_loss_epoch=508]Epoch 393/400:  98%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä| 392/400 [01:07<00:01,  5.87it/s, v_num=1, train_loss_step=506, train_loss_epoch=508]Epoch 393/400:  98%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä| 393/400 [01:08<00:01,  5.72it/s, v_num=1, train_loss_step=506, train_loss_epoch=508]Epoch 393/400:  98%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä| 393/400 [01:08<00:01,  5.72it/s, v_num=1, train_loss_step=484, train_loss_epoch=508]Epoch 394/400:  98%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä| 393/400 [01:08<00:01,  5.72it/s, v_num=1, train_loss_step=484, train_loss_epoch=508]Epoch 394/400:  98%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä| 394/400 [01:08<00:01,  5.44it/s, v_num=1, train_loss_step=484, train_loss_epoch=508]Epoch 394/400:  98%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä| 394/400 [01:08<00:01,  5.44it/s, v_num=1, train_loss_step=525, train_loss_epoch=509]Epoch 395/400:  98%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä| 394/400 [01:08<00:01,  5.44it/s, v_num=1, train_loss_step=525, train_loss_epoch=509]Epoch 395/400:  99%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ| 395/400 [01:08<00:00,  5.43it/s, v_num=1, train_loss_step=525, train_loss_epoch=509]Epoch 395/400:  99%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ| 395/400 [01:08<00:00,  5.43it/s, v_num=1, train_loss_step=490, train_loss_epoch=509]Epoch 396/400:  99%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ| 395/400 [01:08<00:00,  5.43it/s, v_num=1, train_loss_step=490, train_loss_epoch=509]Epoch 396/400:  99%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ| 396/400 [01:08<00:00,  5.59it/s, v_num=1, train_loss_step=490, train_loss_epoch=509]Epoch 396/400:  99%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ| 396/400 [01:08<00:00,  5.59it/s, v_num=1, train_loss_step=522, train_loss_epoch=509]Epoch 397/400:  99%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ| 396/400 [01:08<00:00,  5.59it/s, v_num=1, train_loss_step=522, train_loss_epoch=509]Epoch 397/400:  99%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ| 397/400 [01:08<00:00,  5.69it/s, v_num=1, train_loss_step=522, train_loss_epoch=509]Epoch 397/400:  99%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ| 397/400 [01:08<00:00,  5.69it/s, v_num=1, train_loss_step=532, train_loss_epoch=508]Epoch 398/400:  99%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ| 397/400 [01:08<00:00,  5.69it/s, v_num=1, train_loss_step=532, train_loss_epoch=508]Epoch 398/400: 100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ| 398/400 [01:09<00:00,  5.64it/s, v_num=1, train_loss_step=532, train_loss_epoch=508]Epoch 398/400: 100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ| 398/400 [01:09<00:00,  5.64it/s, v_num=1, train_loss_step=506, train_loss_epoch=508]Epoch 399/400: 100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ| 398/400 [01:09<00:00,  5.64it/s, v_num=1, train_loss_step=506, train_loss_epoch=508]Epoch 399/400: 100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ| 399/400 [01:09<00:00,  5.55it/s, v_num=1, train_loss_step=506, train_loss_epoch=508]Epoch 399/400: 100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ| 399/400 [01:09<00:00,  5.55it/s, v_num=1, train_loss_step=503, train_loss_epoch=508]Epoch 400/400: 100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ| 399/400 [01:09<00:00,  5.55it/s, v_num=1, train_loss_step=503, train_loss_epoch=508]Epoch 400/400: 100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 400/400 [01:09<00:00,  5.65it/s, v_num=1, train_loss_step=503, train_loss_epoch=508]Epoch 400/400: 100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 400/400 [01:09<00:00,  5.65it/s, v_num=1, train_loss_step=531, train_loss_epoch=508]Epoch 400/400: 100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 400/400 [01:09<00:00,  5.76it/s, v_num=1, train_loss_step=531, train_loss_epoch=508] Seu_obj <- FindNeighbors(object = Seu_obj, reduction = \"integrated.cca\", dims = 1:50) #change dims accrodingly #> Computing nearest neighbor graph #> Computing SNN Seu_obj <- FindClusters(Seu_obj, resolution = 0.3, algorithm=4, random.seed = 1234) Seu_obj <- RunUMAP(object = Seu_obj, reduction = \"integrated.cca\", dims = 1:50) #> 16:36:27 UMAP embedding parameters a = 0.9922 b = 1.112 #> 16:36:27 Read 2807 rows and found 50 numeric columns #> 16:36:27 Using Annoy for neighbor search, n_neighbors = 30 #> 16:36:27 Building Annoy index with metric = cosine, n_trees = 50 #> 0%   10   20   30   40   50   60   70   80   90   100% #> [----|----|----|----|----|----|----|----|----|----| #> **************************************************| #> 16:36:28 Writing NN index file to temp file /tmp/RtmpPt7xdc/file1cd64e8460d7 #> 16:36:28 Searching Annoy index using 1 thread, search_k = 3000 #> 16:36:28 Annoy recall = 100% #> 16:36:29 Commencing smooth kNN distance calibration using 1 thread with target n_neighbors = 30 #> 16:36:30 Initializing from normalized Laplacian + noise (using RSpectra) #> 16:36:30 Commencing optimization for 500 epochs, with 129308 positive edges #> 16:36:30 Using rng type: pcg #> 16:36:33 Optimization finished  DO.UMAP(Seu_obj, group.by = \"seurat_clusters\") DO.UMAP(Seu_obj, group.by = \"condition\", legend.position = \"right\", label = F)"},{"path":"https://marianoruzjurado.github.io/DOtools/articles/DOtools.html","id":"semi-automatic-annotation-with-celltypist","dir":"Articles","previous_headings":"Usage","what":"Semi-automatic annotation with Celltypist","title":"Quality control of sc/snRNA-seq","text":"Next , implemented wrapper around semi-automatic annotation tool celltypist. annotate defined clusters based Adult_COVID19_PBMC.pkl model.   semi-automatic annotation good estimate cell types object. always manually validate findings model. can manually define set marker genes cell population check preeminent genes per cluster using Seurat‚Äôs FindAllMarkers function.   manual markers immune cells show agreement annotation therefore can continue minor adjustments","code":"Seu_obj <- DO.CellTypist(Seu_obj,                          modelName = \"Healthy_COVID19_PBMC.pkl\",                           runCelltypistUpdate=T,                          over_clustering = \"seurat_clusters\") #> 2025-06-30 16:36:34 - Running celltypist using model: Healthy_COVID19_PBMC.pkl #> 2025-06-30 16:36:34 - Saving celltypist results to temporary folder: /tmp/RtmpPt7xdc/file1cd6414abc057 #> 2025-06-30 16:37:00 - Running Celltypist #> 2025-06-30 16:37:04 - Creating probality plot DO.UMAP(Seu_obj, group.by = \"autoAnnot\", legend.position = \"right\") #pick top 5 per cluster annotation_Markers <- FindAllMarkers(object = Seu_obj,                                      assay = \"RNA\",                                      group.by = \"autoAnnot\",                                      min.pct = 0.25,                                      logfc.threshold = 0.25) #> Calculating cluster CD14_mono #> Calculating cluster CD4.Naive #> Calculating cluster CD8.Naive #> Calculating cluster NK_16hi #> Calculating cluster CD8.EM #> Calculating cluster B_naive #> Calculating cluster pDC  annotation_Markers <- annotation_Markers %>%   arrange(desc(avg_log2FC)) %>%                 distinct(gene, .keep_all = TRUE) %>%          group_by(cluster) %>%   slice_head(n = 5)     p1 <- DO.Dotplot(Seu_object = Seu_obj,                  Feature = annotation_Markers,                  group.by.x = \"seurat_clusters\",                  plot.margin = c(1,1,1,1),                  annotation_x = T,                  point_stroke = 0.1,                  annotation_x_rev = T,                  textSize = 14,                  hjust = 0.5,                  vjust = 0,                  textRot = 0,                  segWidth = 0.3,                  lwd = 3) #> Scale for size is already present. #> Adding another scale for size, which will replace the existing scale. #manual set of markers annotation_Markers <-  data.frame(cluster = c(\"ImmuneCells\",                                             rep(\"B_cells\", 3),                                             rep(\"T_cells\",3),                                             rep(\"NK\", 2),                                             rep(\"Myeloid\",3),                                             rep(\"pDC\",3)),                                 genes = c(\"PTPRC\", \"CD79A\", \"BANK1\", \"MS4A1\", \"CD3E\", \"CD4\", \"IL7R\", \"NKG7\",                                            \"KLRD1\",\"CD68\", \"CD14\",\"ITGAM\", \"LILRA4\", \"CLEC4C\", \"LRRC26\"))  p2 <- DO.Dotplot(Seu_object = Seu_obj,                  Feature = annotation_Markers,                  group.by.x = \"seurat_clusters\",                  plot.margin = c(1,1,1,1),                  annotation_x = T,                  point_stroke = 0.1,                  annotation_x_rev = T,                  textSize = 14,                  hjust = 0.5,                  vjust = 0,                  textRot = 0,                  segWidth = 0.3,                  lwd = 3) #> Scale for size is already present. #> Adding another scale for size, which will replace the existing scale. Seu_obj$annotation <- plyr::revalue(Seu_obj$seurat_clusters, c(`1` = \"T_cells\",                                                                `2` = \"T_cells\",                                                                `3` = \"NK\",                                                                `4` = \"B_cells\",                                                                `5` = \"Monocytes\",                                                                `6` = \"NK\",                                                                `7` = \"T_cells\",                                                                `8` = \"pDC\"))  DO.UMAP(Seu_obj, group.by = \"annotation\", legend.position = \"right\")"},{"path":"https://marianoruzjurado.github.io/DOtools/articles/DOtools.html","id":"cell-composition","dir":"Articles","previous_headings":"Usage","what":"Cell composition","title":"Quality control of sc/snRNA-seq","text":"identification celltype populations, can also evaluate significant changes populations healthy diseased condition using wrapper function around python tool scanpro.","code":"DO.CellComposition(Seu_obj,                    assay_normalized = \"RNA\",                    cluster_column = \"annotation\",                    sample_column = \"orig.ident\",                    condition_column = \"condition\",                    transform_method = \"arcsin\",                    n_reps = 3) #> ‚Ñπ Using the 'counts' assay as the X matrix #> [INFO] Your data doesn't have replicates! Artificial replicates will be simulated to run scanpro. #> [INFO] Simulation may take some minutes... #> [INFO] Generating 3 replicates and running 100 simulations... #> [INFO] Finished 100 simulations in 2.17 seconds #> Using orig.ident, condition as id variables #> Using condition as id variables"},{"path":"https://marianoruzjurado.github.io/DOtools/articles/DOtools.html","id":"reclustering-of-cell-populations","dir":"Articles","previous_headings":"Usage","what":"Reclustering of cell populations","title":"Quality control of sc/snRNA-seq","text":"Subpopulations can tricky find, therefore always good practice perform reclustering given cell populations, interested specific set cells population. example T cells. identify subpopulations markers defining .   Now identified marker genes describing different T cell populations. can re-annotate based expression profile new prediciton Celltypist. , can easily transfer labels subset original object.","code":"Seu_obj <- DO.FullRecluster(Seu_obj, over_clustering = \"annotation\") DO.UMAP(Seu_obj, group.by = \"annotation_recluster\") T_cells <- DO.Subset(Seu_obj,                      ident = \"annotation_recluster\",                      ident_name = grep(\"T_cells\", unique(Seu_obj$annotation_recluster), value = T)) #> Specified 'ident_name': expecting a categorical variable.  T_markers <- FindAllMarkers(T_cells, group.by = \"annotation_recluster\") #> Calculating cluster T_cells_1 #> Calculating cluster T_cells_2 #> Calculating cluster T_cells_4 #> Calculating cluster T_cells_3  T_cells <- DO.CellTypist(T_cells,                          modelName = \"Healthy_COVID19_PBMC.pkl\",                          runCelltypistUpdate=F,                          over_clustering = \"annotation_recluster\",                          SeuV5 = F) #> 2025-06-30 16:37:16 - Running celltypist using model: Healthy_COVID19_PBMC.pkl #> 2025-06-30 16:37:16 - Saving celltypist results to temporary folder: /tmp/RtmpPt7xdc/file1cd641ae040d8 #> 2025-06-30 16:37:25 - Running Celltypist #> 2025-06-30 16:37:29 - Creating probality plot T_cells$annotation <- plyr::revalue(T_cells$annotation_recluster, c(`T_cells_1` = \"CD4_T_cells\",                                                                     `T_cells_2` = \"CD4_T_cells\",                                                                     `T_cells_3` = \"CD4_T_cells\",                                                                     `T_cells_4` = \"CD8_T_cells\")) Seu_obj <- DO.TransferLabel(Seu_obj,                             Subset_obj = T_cells,                             annotation_column = \"annotation\",                             subset_annotation = \"annotation\")  DO.UMAP(Seu_obj, group.by = \"annotation\", legend.position = \"right\")"},{"path":"https://marianoruzjurado.github.io/DOtools/articles/DOtools.html","id":"gene-ontology-analysis","dir":"Articles","previous_headings":"Usage","what":"Gene ontology analysis","title":"Quality control of sc/snRNA-seq","text":"explore biological processes enriched specific cell type across conditions, can perform gene ontology analysis. ‚Äôll start identifying differentially expressed genes, focusing T cells. differential gene expression analysis, introduced new function, combines DGE analysis using single cell approach, e.g.¬†popular Wilcoxon test pseudobulk testing using DESeq2. can observe results combined dataframe. inspecting DGE analysis, continue .enrichR function, uses enrichR API run gene set enrichment. separates DE genes - -regulated sets runs analysis group independently top significant results can visualized bar plot.","code":"# this data set contains only one sample per condition we introduce replicates for showing the pseudo bulk approach set.seed(123) Seu_obj$orig.ident2 <- sample(rep(c(\"A\", \"B\", \"C\", \"D\", \"E\", \"F\"), length.out = ncol(Seu_obj))) CD4T_cells <- DO.Subset(Seu_obj, ident = \"annotation\", ident_name = \"CD4_T_cells\") #> Specified 'ident_name': expecting a categorical variable.  DGE_result <- DO.MultiDGE(CD4T_cells,                           sample_col = \"orig.ident2\",                           method_sc = \"wilcox\",                           ident_ctrl = \"healthy\") #> Names of identity class contain underscores ('_'), replacing with dashes ('-') #> Centering and scaling data matrix #>  #> This message is displayed once every 8 hours. #> 2025-06-30 16:37:30 - Corrected annotation names in pseudo-bulk object by replacing '-' with '_'. #> 2025-06-30 16:37:30 - Starting DGE single cell method analysis #> 2025-06-30 16:37:30 - Comparing disease with healthy in: CD4_T_cells #> 2025-06-30 16:37:31 - Finished DGE single cell method analysis #> 2025-06-30 16:37:31 - Starting DGE pseudo bulk method analysis #> 2025-06-30 16:37:31 - Comparing disease with healthy in: CD4_T_cells #> converting counts to integer mode #> gene-wise dispersion estimates #> mean-dispersion relationship #> final dispersion estimates #> 2025-06-30 16:37:36 - Finished DGE pseudo bulk method analysis  head(DGE_result,10) %>%   kable(format = \"html\", table.attr = \"style='width:100%;'\") %>%   kable_styling(bootstrap_options = c(\"striped\", \"hover\", \"condensed\", \"responsive\")) result_GO <- DO.enrichR(df_DGE = DGE_result,                         gene_column = \"gene\",                         pval_column = \"p_val_adj_SC_wilcox\",                         log2fc_column = \"avg_log2FC_SC_wilcox\",                         pval_cutoff = 0.05,                         log2fc_cutoff = 0.25,                         path = NULL,                         filename = \"\",                         species = \"Human\",                         go_catgs = \"GO_Biological_Process_2023\") #> Connection changed to https://maayanlab.cloud/Enrichr/ #> Connection is Live! #> Uploading data to Enrichr... Done. #>   Querying GO_Biological_Process_2023... Done. #> Parsing results... Done. #> Uploading data to Enrichr... Done. #>   Querying GO_Biological_Process_2023... Done. #> Parsing results... Done.  head(result_GO,5) %>%   kable(format = \"html\", table.attr = \"style='width:100%;'\") %>%   kable_styling(bootstrap_options = c(\"striped\", \"hover\", \"condensed\", \"responsive\")) result_GO_sig <- result_GO[result_GO$Adjusted.P.value < 0.05, ]  result_GO_sig$celltype <- \"CD4T_cells\"  DO.SplitBarGSEA(df_GSEA = result_GO_sig,                 term_col = \"Term\",                 col_split = \"Combined.Score\",                 cond_col = \"State\",                 pos_cond = \"enriched\",                 showP = F,                 path = paste0(base, \"/\")) #> !!! Assuming GO Terms are preprocessed (Only Significant terms included) GSEA_plot <- list.files(path = base, pattern = \"SplitBar.*\\\\.svg$\", full.names = TRUE, recursive = TRUE) plot(magick::image_read_svg(GSEA_plot)) saveRDS(Seu_obj, \"~/Downloads/Data10x/Seu_obj_blood10x.rds\")"},{"path":"https://marianoruzjurado.github.io/DOtools/articles/DOtools.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"Quality control of sc/snRNA-seq","text":"","code":"#> ‚îÄ Session info ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ #>  setting  value #>  version  R version 4.5.1 (2025-06-13) #>  os       Ubuntu 24.04.2 LTS #>  system   x86_64, linux-gnu #>  ui       X11 #>  language en #>  collate  en_US.UTF-8 #>  ctype    en_US.UTF-8 #>  tz       Europe/Berlin #>  date     2025-06-30 #>  pandoc   3.4 @ /usr/lib/rstudio/resources/app/bin/quarto/bin/tools/x86_64/ (via rmarkdown) #>  quarto   1.6.42 @ /usr/lib/rstudio/resources/app/bin/quarto/bin/quarto #>  #> ‚îÄ Packages ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ #>  package              * version   date (UTC) lib source #>  abind                  1.4-8     2024-09-12 [2] CRAN (R 4.5.0) #>  backports              1.5.0     2024-05-23 [2] CRAN (R 4.5.0) #>  basilisk               1.20.0    2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  basilisk.utils         1.20.0    2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  beachmat               2.24.0    2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  beeswarm               0.4.0     2021-06-01 [2] CRAN (R 4.5.0) #>  Biobase                2.68.0    2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  BiocGenerics           0.54.0    2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  BiocIO                 1.18.0    2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  BiocManager            1.30.26   2025-06-05 [2] CRAN (R 4.5.0) #>  BiocNeighbors          2.2.0     2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  BiocParallel           1.42.1    2025-06-01 [2] Bioconductor 3.21 (R 4.5.0) #>  BiocSingular           1.24.0    2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  BiocStyle            * 2.36.0    2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  Biostrings             2.76.0    2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  bit                    4.6.0     2025-03-06 [2] CRAN (R 4.5.0) #>  bit64                  4.6.0-1   2025-01-16 [2] CRAN (R 4.5.0) #>  bitops                 1.0-9     2024-10-03 [2] CRAN (R 4.5.0) #>  bluster                1.18.0    2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  bookdown               0.43      2025-04-15 [2] CRAN (R 4.5.0) #>  broom                  1.0.8     2025-03-28 [2] CRAN (R 4.5.0) #>  bslib                  0.9.0     2025-01-30 [2] CRAN (R 4.5.0) #>  cachem                 1.1.0     2024-05-16 [2] CRAN (R 4.5.0) #>  car                    3.1-3     2024-09-27 [2] CRAN (R 4.5.0) #>  carData                3.0-5     2022-01-06 [2] CRAN (R 4.5.0) #>  cli                    3.6.5     2025-04-23 [2] CRAN (R 4.5.0) #>  cluster                2.1.8.1   2025-03-12 [5] CRAN (R 4.4.3) #>  codetools              0.2-20    2024-03-31 [5] CRAN (R 4.4.0) #>  cowplot                1.1.3     2024-01-22 [2] CRAN (R 4.5.0) #>  crayon                 1.5.3     2024-06-20 [2] CRAN (R 4.5.0) #>  curl                   6.3.0     2025-06-06 [2] CRAN (R 4.5.0) #>  data.table             1.17.4    2025-05-26 [2] CRAN (R 4.5.0) #>  DelayedArray           0.34.1    2025-04-17 [2] Bioconductor 3.21 (R 4.5.0) #>  DelayedMatrixStats     1.30.0    2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  deldir                 2.0-4     2024-02-28 [2] CRAN (R 4.5.0) #>  desc                   1.4.3     2023-12-10 [2] CRAN (R 4.5.0) #>  DESeq2                 1.48.1    2025-05-11 [2] Bioconductor 3.21 (R 4.5.0) #>  digest                 0.6.37    2024-08-19 [2] CRAN (R 4.5.0) #>  dir.expiry             1.16.0    2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  dotCall64              1.2       2024-10-04 [2] CRAN (R 4.5.0) #>  DOtools              * 0.4.0     2025-06-30 [1] Bioconductor #>  dplyr                * 1.1.4     2023-11-17 [2] CRAN (R 4.5.0) #>  dqrng                  0.4.1     2024-05-28 [2] CRAN (R 4.5.0) #>  DropletUtils           1.28.0    2025-04-17 [2] Bioconductor 3.21 (R 4.5.0) #>  edgeR                  4.6.2     2025-05-07 [2] Bioconductor 3.21 (R 4.5.0) #>  enrichR              * 3.4       2025-02-02 [2] CRAN (R 4.5.0) #>  evaluate               1.0.3     2025-01-10 [2] CRAN (R 4.5.0) #>  farver                 2.1.2     2024-05-13 [2] CRAN (R 4.5.0) #>  fastDummies            1.7.5     2025-01-20 [2] CRAN (R 4.5.0) #>  fastmap                1.2.0     2024-05-15 [2] CRAN (R 4.5.0) #>  filelock               1.0.3     2023-12-11 [2] CRAN (R 4.5.0) #>  fitdistrplus           1.2-2     2025-01-07 [2] CRAN (R 4.5.0) #>  Formula                1.2-5     2023-02-24 [2] CRAN (R 4.5.0) #>  fs                     1.6.6     2025-04-12 [2] CRAN (R 4.5.0) #>  future               * 1.58.0    2025-06-05 [2] CRAN (R 4.5.0) #>  future.apply           1.20.0    2025-06-06 [2] CRAN (R 4.5.0) #>  generics               0.1.4     2025-05-09 [2] CRAN (R 4.5.0) #>  GenomeInfoDb           1.44.0    2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  GenomeInfoDbData       1.2.14    2025-05-13 [2] Bioconductor #>  GenomicAlignments      1.44.0    2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  GenomicRanges          1.60.0    2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  ggalluvial             0.12.5    2023-02-22 [2] CRAN (R 4.5.0) #>  ggbeeswarm             0.7.2     2023-04-29 [2] CRAN (R 4.5.0) #>  ggcorrplot             0.1.4.1   2023-09-05 [2] CRAN (R 4.5.1) #>  ggiraph                0.8.13    2025-03-28 [2] CRAN (R 4.5.0) #>  ggiraphExtra           0.3.0     2020-10-06 [2] CRAN (R 4.5.0) #>  ggplot2                3.5.2     2025-04-09 [2] CRAN (R 4.5.0) #>  ggpubr                 0.6.0     2023-02-10 [2] CRAN (R 4.5.0) #>  ggrastr                1.0.2     2023-06-01 [2] CRAN (R 4.5.0) #>  ggrepel                0.9.6     2024-09-07 [2] CRAN (R 4.5.0) #>  ggridges               0.5.6     2024-01-23 [2] CRAN (R 4.5.0) #>  ggsignif               0.6.4     2022-10-13 [2] CRAN (R 4.5.0) #>  ggtext                 0.1.2     2022-09-16 [2] CRAN (R 4.5.0) #>  globals                0.18.0    2025-05-08 [2] CRAN (R 4.5.0) #>  glue                   1.8.0     2024-09-30 [2] CRAN (R 4.5.0) #>  goftest                1.2-3     2021-10-07 [2] CRAN (R 4.5.0) #>  gridExtra              2.3       2017-09-09 [2] CRAN (R 4.5.0) #>  gridtext               0.1.5     2022-09-16 [2] CRAN (R 4.5.0) #>  gtable                 0.3.6     2024-10-25 [2] CRAN (R 4.5.0) #>  h5mread                1.0.1     2025-05-21 [2] Bioconductor 3.21 (R 4.5.0) #>  HDF5Array              1.36.0    2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  hdf5r                  1.3.12    2025-01-20 [2] CRAN (R 4.5.0) #>  hms                    1.1.3     2023-03-21 [2] CRAN (R 4.5.0) #>  htmltools              0.5.8.1   2024-04-04 [2] CRAN (R 4.5.0) #>  htmlwidgets            1.6.4     2023-12-06 [2] CRAN (R 4.5.0) #>  httpuv                 1.6.16    2025-04-16 [2] CRAN (R 4.5.0) #>  httr                   1.4.7     2023-08-15 [2] CRAN (R 4.5.0) #>  ica                    1.0-3     2022-07-08 [2] CRAN (R 4.5.0) #>  igraph                 2.1.4     2025-01-23 [2] CRAN (R 4.5.0) #>  insight                1.3.0     2025-05-20 [2] CRAN (R 4.5.0) #>  IRanges                2.42.0    2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  irlba                  2.3.5.1   2022-10-03 [2] CRAN (R 4.5.0) #>  jquerylib              0.1.4     2021-04-26 [2] CRAN (R 4.5.0) #>  jsonlite               2.0.0     2025-03-27 [2] CRAN (R 4.5.0) #>  kableExtra           * 1.4.0     2024-01-24 [2] CRAN (R 4.5.1) #>  KernSmooth             2.23-26   2025-01-01 [5] CRAN (R 4.4.2) #>  knitr                  1.50      2025-03-16 [2] CRAN (R 4.5.0) #>  labeling               0.4.3     2023-08-29 [2] CRAN (R 4.5.0) #>  later                  1.4.2     2025-04-08 [2] CRAN (R 4.5.0) #>  lattice                0.22-5    2023-10-24 [5] CRAN (R 4.3.3) #>  lazyeval               0.2.2     2019-03-15 [2] CRAN (R 4.5.0) #>  leidenbase             0.1.35    2025-04-02 [2] CRAN (R 4.5.0) #>  lifecycle              1.0.4     2023-11-07 [2] CRAN (R 4.5.0) #>  limma                  3.64.1    2025-05-25 [2] Bioconductor 3.21 (R 4.5.0) #>  listenv                0.9.1     2024-01-29 [2] CRAN (R 4.5.0) #>  lmtest                 0.9-40    2022-03-21 [2] CRAN (R 4.5.0) #>  locfit                 1.5-9.12  2025-03-05 [2] CRAN (R 4.5.0) #>  magick                 2.8.7     2025-06-06 [2] CRAN (R 4.5.0) #>  magrittr               2.0.3     2022-03-30 [2] CRAN (R 4.5.0) #>  MASS                   7.3-65    2025-02-28 [5] CRAN (R 4.4.3) #>  Matrix                 1.7-3     2025-03-11 [5] CRAN (R 4.4.3) #>  MatrixGenerics         1.20.0    2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  matrixStats            1.5.0     2025-01-07 [2] CRAN (R 4.5.0) #>  metapod                1.16.0    2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  mgcv                   1.9-1     2023-12-21 [5] CRAN (R 4.3.2) #>  mime                   0.13      2025-03-17 [2] CRAN (R 4.5.0) #>  miniUI                 0.1.2     2025-04-17 [2] CRAN (R 4.5.0) #>  mycor                  0.1.1     2018-04-10 [2] CRAN (R 4.5.0) #>  nlme                   3.1-168   2025-03-31 [5] CRAN (R 4.4.3) #>  openxlsx               4.2.8     2025-01-25 [2] CRAN (R 4.5.0) #>  parallelly             1.45.0    2025-06-02 [2] CRAN (R 4.5.0) #>  patchwork              1.3.0     2024-09-16 [2] CRAN (R 4.5.0) #>  pbapply                1.7-2     2023-06-27 [2] CRAN (R 4.5.0) #>  pillar                 1.10.2    2025-04-05 [2] CRAN (R 4.5.0) #>  pkgconfig              2.0.3     2019-09-22 [2] CRAN (R 4.5.0) #>  pkgdown                2.1.3     2025-05-25 [2] CRAN (R 4.5.0) #>  plotly                 4.10.4    2024-01-13 [2] CRAN (R 4.5.0) #>  plyr                 * 1.8.9     2023-10-02 [2] CRAN (R 4.5.0) #>  png                    0.1-8     2022-11-29 [2] CRAN (R 4.5.0) #>  polyclip               1.10-7    2024-07-23 [2] CRAN (R 4.5.0) #>  ppcor                  1.1       2015-12-03 [2] CRAN (R 4.5.0) #>  presto                 1.0.0     2025-05-22 [2] Github (immunogenomics/presto@7636b3d) #>  prettyunits            1.2.0     2023-09-24 [2] CRAN (R 4.5.0) #>  progress               1.2.3     2023-12-06 [2] CRAN (R 4.5.0) #>  progressr              0.15.1    2024-11-22 [2] CRAN (R 4.5.0) #>  promises               1.3.3     2025-05-29 [2] CRAN (R 4.5.0) #>  purrr                  1.0.4     2025-02-05 [2] CRAN (R 4.5.0) #>  R.methodsS3            1.8.2     2022-06-13 [2] CRAN (R 4.5.0) #>  R.oo                   1.27.1    2025-05-02 [2] CRAN (R 4.5.0) #>  R.utils                2.13.0    2025-02-24 [2] CRAN (R 4.5.0) #>  R6                     2.6.1     2025-02-15 [2] CRAN (R 4.5.0) #>  ragg                   1.4.0     2025-04-10 [2] CRAN (R 4.5.0) #>  RANN                   2.6.2     2024-08-25 [2] CRAN (R 4.5.0) #>  RColorBrewer           1.1-3     2022-04-03 [2] CRAN (R 4.5.0) #>  Rcpp                   1.0.14    2025-01-12 [2] CRAN (R 4.5.0) #>  RcppAnnoy              0.0.22    2024-01-23 [2] CRAN (R 4.5.0) #>  RcppHNSW               0.6.0     2024-02-04 [2] CRAN (R 4.5.0) #>  RCurl                  1.98-1.17 2025-03-22 [2] CRAN (R 4.5.0) #>  reshape2               1.4.4     2020-04-09 [2] CRAN (R 4.5.0) #>  restfulr               0.0.15    2022-06-16 [2] CRAN (R 4.5.0) #>  reticulate             1.42.0    2025-03-25 [2] CRAN (R 4.5.0) #>  rhdf5                  2.52.1    2025-06-08 [2] Bioconductor 3.21 (R 4.5.0) #>  rhdf5filters           1.20.0    2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  Rhdf5lib               1.30.0    2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  rjson                  0.2.23    2024-09-16 [2] CRAN (R 4.5.0) #>  rlang                  1.1.6     2025-04-11 [2] CRAN (R 4.5.0) #>  rmarkdown              2.29      2024-11-04 [2] CRAN (R 4.5.0) #>  ROCR                   1.0-11    2020-05-02 [2] CRAN (R 4.5.0) #>  Rsamtools              2.24.0    2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  RSpectra               0.16-2    2024-07-18 [2] CRAN (R 4.5.0) #>  rstatix                0.7.2     2023-02-01 [2] CRAN (R 4.5.0) #>  rstudioapi             0.17.1    2024-10-22 [2] CRAN (R 4.5.0) #>  rsvd                   1.0.5     2021-04-16 [2] CRAN (R 4.5.0) #>  rsvg                   2.6.2     2025-03-23 [2] CRAN (R 4.5.1) #>  rtracklayer            1.68.0    2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  Rtsne                  0.17      2023-12-07 [2] CRAN (R 4.5.0) #>  S4Arrays               1.8.1     2025-06-01 [2] Bioconductor 3.21 (R 4.5.0) #>  S4Vectors              0.46.0    2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  sass                   0.4.10    2025-04-11 [2] CRAN (R 4.5.0) #>  ScaledMatrix           1.16.0    2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  scales                 1.4.0     2025-04-24 [2] CRAN (R 4.5.0) #>  scater                 1.36.0    2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  scattermore            1.2       2023-06-12 [2] CRAN (R 4.5.0) #>  scDblFinder            1.22.0    2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  scran                  1.36.0    2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  sctransform            0.4.2     2025-04-30 [2] CRAN (R 4.5.0) #>  scuttle                1.18.0    2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  sessioninfo            1.2.3     2025-02-05 [2] CRAN (R 4.5.0) #>  Seurat               * 5.3.0     2025-04-23 [2] CRAN (R 4.5.0) #>  SeuratObject         * 5.1.0     2025-04-22 [2] CRAN (R 4.5.0) #>  shiny                  1.10.0    2024-12-14 [2] CRAN (R 4.5.0) #>  SingleCellExperiment   1.30.1    2025-05-07 [2] Bioconductor 3.21 (R 4.5.0) #>  sjlabelled             1.2.0     2022-04-10 [2] CRAN (R 4.5.0) #>  sjmisc                 2.8.10    2024-05-13 [2] CRAN (R 4.5.0) #>  sp                   * 2.2-0     2025-02-01 [2] CRAN (R 4.5.0) #>  spam                   2.11-1    2025-01-20 [2] CRAN (R 4.5.0) #>  SparseArray            1.8.0     2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  sparseMatrixStats      1.20.0    2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  spatstat.data          3.1-6     2025-03-17 [2] CRAN (R 4.5.0) #>  spatstat.explore       3.4-3     2025-05-21 [2] CRAN (R 4.5.0) #>  spatstat.geom          3.4-1     2025-05-20 [2] CRAN (R 4.5.0) #>  spatstat.random        3.4-1     2025-05-20 [2] CRAN (R 4.5.0) #>  spatstat.sparse        3.1-0     2024-06-21 [2] CRAN (R 4.5.0) #>  spatstat.univar        3.1-3     2025-05-08 [2] CRAN (R 4.5.0) #>  spatstat.utils         3.1-4     2025-05-15 [2] CRAN (R 4.5.0) #>  statmod                1.5.0     2023-01-06 [2] CRAN (R 4.5.0) #>  stringi                1.8.7     2025-03-27 [2] CRAN (R 4.5.0) #>  stringr                1.5.1     2023-11-14 [2] CRAN (R 4.5.0) #>  SummarizedExperiment   1.38.1    2025-04-30 [2] Bioconductor 3.21 (R 4.5.0) #>  survival               3.8-3     2024-12-17 [5] CRAN (R 4.4.2) #>  svglite                2.2.1     2025-05-12 [2] CRAN (R 4.5.0) #>  systemfonts            1.2.3     2025-04-30 [2] CRAN (R 4.5.0) #>  tensor                 1.5       2012-05-05 [2] CRAN (R 4.5.0) #>  textshaping            1.0.1     2025-05-01 [2] CRAN (R 4.5.0) #>  tibble               * 3.3.0     2025-06-08 [2] CRAN (R 4.5.0) #>  tidyr                  1.3.1     2024-01-24 [2] CRAN (R 4.5.0) #>  tidyselect             1.2.1     2024-03-11 [2] CRAN (R 4.5.0) #>  tidyverse              2.0.0     2023-02-22 [2] CRAN (R 4.5.0) #>  UCSC.utils             1.4.0     2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  uuid                   1.2-1     2024-07-29 [2] CRAN (R 4.5.0) #>  uwot                   0.2.3     2025-02-24 [2] CRAN (R 4.5.0) #>  vctrs                  0.6.5     2023-12-01 [2] CRAN (R 4.5.0) #>  vipor                  0.4.7     2023-12-18 [2] CRAN (R 4.5.0) #>  viridis                0.6.5     2024-01-29 [2] CRAN (R 4.5.0) #>  viridisLite            0.4.2     2023-05-02 [2] CRAN (R 4.5.0) #>  withr                  3.0.2     2024-10-28 [2] CRAN (R 4.5.0) #>  WriteXLS               6.8.0     2025-05-22 [2] CRAN (R 4.5.0) #>  xfun                   0.52      2025-04-02 [2] CRAN (R 4.5.0) #>  xgboost                1.7.11.1  2025-05-15 [2] CRAN (R 4.5.0) #>  XML                    3.99-0.18 2025-01-01 [2] CRAN (R 4.5.0) #>  xml2                   1.3.8     2025-03-14 [2] CRAN (R 4.5.0) #>  xtable                 1.8-4     2019-04-21 [2] CRAN (R 4.5.0) #>  XVector                0.48.0    2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  yaml                   2.3.10    2024-07-26 [2] CRAN (R 4.5.0) #>  zellkonverter          1.18.0    2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  zip                    2.3.3     2025-05-13 [2] CRAN (R 4.5.0) #>  zoo                    1.8-14    2025-04-10 [2] CRAN (R 4.5.0) #>  #>  [1] /tmp/RtmpuFksXT/temp_libpath11c41779698a8 #>  [2] /home/mariano/R/x86_64-pc-linux-gnu-library/4.5 #>  [3] /usr/local/lib/R/site-library #>  [4] /usr/lib/R/site-library #>  [5] /usr/lib/R/library #>  * ‚îÄ‚îÄ Packages attached to the search path. #>  #> ‚îÄ Python configuration ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ #>  python:         /home/mariano/.venv/DOtools/bin/python #>  libpython:      /home/mariano/.venv/DOtools/lib/libpython3.11.so #>  pythonhome:     /home/mariano/.venv/DOtools:/home/mariano/.venv/DOtools #>  version:        3.11.13 | packaged by conda-forge | (main, Jun  4 2025, 14:48:23) [GCC 13.3.0] #>  numpy:          /home/mariano/.venv/DOtools/lib/python3.11/site-packages/numpy #>  numpy_version:  1.26.4 #>  anndata:        /home/mariano/.venv/DOtools/lib/python3.11/site-packages/anndata #>   #>  NOTE: Python version was forced by use_python() function #>  #> ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ"},{"path":"https://marianoruzjurado.github.io/DOtools/articles/adfct.html","id":"libraries-set-up","dir":"Articles","previous_headings":"","what":"Libraries & Set-Up","title":"Usage of functions","text":"","code":"#> 2025-06-30 16:10:08 - Using existing conda environment at: /home/mariano/.venv/DOtools #> 2025-06-30 16:10:08 - Python packages ready for DOtools!"},{"path":"https://marianoruzjurado.github.io/DOtools/articles/adfct.html","id":"dotplot","dir":"Articles","previous_headings":"","what":"Dotplot","title":"Usage of functions","text":".Dotplot function generates plot similar manner Dotplot function implemented scanpy additional functionalities, e.g.¬†visualisation 3 variables time. example, can visualise expression gene across celltypes conditions:","code":"DO.Dotplot(Seu_object = Seu_obj,            group.by.x = \"condition\",            group.by.y = \"annotation\",            Feature = \"NKG7\") #> Scale for size is already present. #> Adding another scale for size, which will replace the existing scale."},{"path":"https://marianoruzjurado.github.io/DOtools/articles/adfct.html","id":"umap","dir":"Articles","previous_headings":"","what":"UMAP","title":"Usage of functions","text":".UMAP function facilitatesthe visualisation UMAP embeddings since combines ability show cell groupings gene expression.","code":"DO.UMAP(Seu_object = Seu_obj,         group.by = \"annotation\",         split.by = \"condition\",         FeaturePlot = T,         features = \"NKG7\",         legend.position = \"right\")"},{"path":"https://marianoruzjurado.github.io/DOtools/articles/adfct.html","id":"cell-composition-changes","dir":"Articles","previous_headings":"","what":"Cell composition changes","title":"Usage of functions","text":"shown tutorial, can also test significant changes cell population.","code":"DO.CellComposition(Seu_object = Seu_obj,                    assay_normalized = \"RNA\",                    cluster_column = \"annotation\",                    sample_column = \"orig.ident\",                    condition_column = \"condition\",                    transform_method = \"arcsin\",                    n_reps = 3) #> ‚Ñπ Using the 'counts' assay as the X matrix #> [INFO] Your data doesn't have replicates! Artificial replicates will be simulated to run scanpro. #> [INFO] Simulation may take some minutes... #> [INFO] Generating 3 replicates and running 100 simulations... #> [INFO] Finished 100 simulations in 2.19 seconds #> Using orig.ident, condition as id variables #> Using condition as id variables"},{"path":"https://marianoruzjurado.github.io/DOtools/articles/adfct.html","id":"expression-of-genes-and-continuous-metadata","dir":"Articles","previous_headings":"","what":"Expression of genes and continuous metadata","title":"Usage of functions","text":"can visualize average expression gene cell type continuous metadata information across condition violinplots, barplots boxplots. Additionally, can test significance.","code":"p <- DO.VlnPlot(Seu_obj,                 Feature = \"NKG7\",                 group.by = \"condition\",                 group.by.2 = \"annotation\",                 ctrl.condition = \"healthy\") #> Using group, orig.ident, annotation as id variables #> ListTest empty, comparing every sample with each other Seu_obj_NK <- DO.Subset(Seu_obj, ident = \"annotation\", ident_name = \"NK\") #> Specified 'ident_name': expecting a categorical variable. DO.BarplotWilcox(Seu_obj_NK,                  group.by = \"condition\",                  ctrl.condition = \"healthy\",                  Feature = \"NKG7\",                  x_label_rotation = 0) #> Using condition, orig.ident as id variables #> ListTest empty, comparing every sample with each other set.seed(123) Seu_obj$rdm_sample <- sample(rep(c(\"A\", \"B\", \"C\"), length.out = ncol(Seu_obj))) DO.BoxPlot(Seu_obj,            group.by = \"rdm_sample\",            ctrl.condition = \"A\",            Feature = \"nCount_RNA\",            step_mod = 100,            plot_sample = F) #> Using group, cluster as id variables #> ListTest empty, comparing every sample with each other #> Scale for fill is already present. #> Adding another scale for fill, which will replace the existing scale."},{"path":"https://marianoruzjurado.github.io/DOtools/articles/adfct.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"Usage of functions","text":"","code":"#> ‚îÄ Session info ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ #>  setting  value #>  version  R version 4.5.1 (2025-06-13) #>  os       Ubuntu 24.04.2 LTS #>  system   x86_64, linux-gnu #>  ui       X11 #>  language en #>  collate  en_US.UTF-8 #>  ctype    en_US.UTF-8 #>  tz       Europe/Berlin #>  date     2025-06-30 #>  pandoc   3.4 @ /usr/lib/rstudio/resources/app/bin/quarto/bin/tools/x86_64/ (via rmarkdown) #>  quarto   1.6.42 @ /usr/lib/rstudio/resources/app/bin/quarto/bin/quarto #>  #> ‚îÄ Packages ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ #>  package              * version  date (UTC) lib source #>  abind                  1.4-8    2024-09-12 [2] CRAN (R 4.5.0) #>  assertthat             0.2.1    2019-03-21 [2] CRAN (R 4.5.0) #>  backports              1.5.0    2024-05-23 [2] CRAN (R 4.5.0) #>  basilisk               1.20.0   2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  basilisk.utils         1.20.0   2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  beachmat               2.24.0   2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  Biobase                2.68.0   2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  BiocGenerics           0.54.0   2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  BiocManager            1.30.26  2025-06-05 [2] CRAN (R 4.5.0) #>  BiocParallel           1.42.1   2025-06-01 [2] Bioconductor 3.21 (R 4.5.0) #>  BiocStyle            * 2.36.0   2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  bookdown               0.43     2025-04-15 [2] CRAN (R 4.5.0) #>  broom                  1.0.8    2025-03-28 [2] CRAN (R 4.5.0) #>  bslib                  0.9.0    2025-01-30 [2] CRAN (R 4.5.0) #>  cachem                 1.1.0    2024-05-16 [2] CRAN (R 4.5.0) #>  car                    3.1-3    2024-09-27 [2] CRAN (R 4.5.0) #>  carData                3.0-5    2022-01-06 [2] CRAN (R 4.5.0) #>  cli                    3.6.5    2025-04-23 [2] CRAN (R 4.5.0) #>  cluster                2.1.8.1  2025-03-12 [5] CRAN (R 4.4.3) #>  codetools              0.2-20   2024-03-31 [5] CRAN (R 4.4.0) #>  colorspace             2.1-1    2024-07-26 [2] CRAN (R 4.5.0) #>  cowplot                1.1.3    2024-01-22 [2] CRAN (R 4.5.0) #>  crayon                 1.5.3    2024-06-20 [2] CRAN (R 4.5.0) #>  curl                   6.3.0    2025-06-06 [2] CRAN (R 4.5.0) #>  data.table             1.17.4   2025-05-26 [2] CRAN (R 4.5.0) #>  DelayedArray           0.34.1   2025-04-17 [2] Bioconductor 3.21 (R 4.5.0) #>  DelayedMatrixStats     1.30.0   2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  deldir                 2.0-4    2024-02-28 [2] CRAN (R 4.5.0) #>  desc                   1.4.3    2023-12-10 [2] CRAN (R 4.5.0) #>  DESeq2                 1.48.1   2025-05-11 [2] Bioconductor 3.21 (R 4.5.0) #>  digest                 0.6.37   2024-08-19 [2] CRAN (R 4.5.0) #>  dir.expiry             1.16.0   2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  dotCall64              1.2      2024-10-04 [2] CRAN (R 4.5.0) #>  DOtools              * 0.4.0    2025-06-30 [1] Bioconductor #>  dplyr                  1.1.4    2023-11-17 [2] CRAN (R 4.5.0) #>  dqrng                  0.4.1    2024-05-28 [2] CRAN (R 4.5.0) #>  DropletUtils           1.28.0   2025-04-17 [2] Bioconductor 3.21 (R 4.5.0) #>  edgeR                  4.6.2    2025-05-07 [2] Bioconductor 3.21 (R 4.5.0) #>  enrichR                3.4      2025-02-02 [2] CRAN (R 4.5.0) #>  evaluate               1.0.3    2025-01-10 [2] CRAN (R 4.5.0) #>  farver                 2.1.2    2024-05-13 [2] CRAN (R 4.5.0) #>  fastDummies            1.7.5    2025-01-20 [2] CRAN (R 4.5.0) #>  fastmap                1.2.0    2024-05-15 [2] CRAN (R 4.5.0) #>  filelock               1.0.3    2023-12-11 [2] CRAN (R 4.5.0) #>  fitdistrplus           1.2-2    2025-01-07 [2] CRAN (R 4.5.0) #>  forcats                1.0.0    2023-01-29 [2] CRAN (R 4.5.0) #>  Formula                1.2-5    2023-02-24 [2] CRAN (R 4.5.0) #>  fs                     1.6.6    2025-04-12 [2] CRAN (R 4.5.0) #>  future                 1.58.0   2025-06-05 [2] CRAN (R 4.5.0) #>  future.apply           1.20.0   2025-06-06 [2] CRAN (R 4.5.0) #>  generics               0.1.4    2025-05-09 [2] CRAN (R 4.5.0) #>  GenomeInfoDb           1.44.0   2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  GenomeInfoDbData       1.2.14   2025-05-13 [2] Bioconductor #>  GenomicRanges          1.60.0   2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  ggalluvial             0.12.5   2023-02-22 [2] CRAN (R 4.5.0) #>  ggcorrplot             0.1.4.1  2023-09-05 [2] CRAN (R 4.5.1) #>  ggplot2                3.5.2    2025-04-09 [2] CRAN (R 4.5.0) #>  ggpubr                 0.6.0    2023-02-10 [2] CRAN (R 4.5.0) #>  ggrepel                0.9.6    2024-09-07 [2] CRAN (R 4.5.0) #>  ggridges               0.5.6    2024-01-23 [2] CRAN (R 4.5.0) #>  ggsignif               0.6.4    2022-10-13 [2] CRAN (R 4.5.0) #>  ggtext                 0.1.2    2022-09-16 [2] CRAN (R 4.5.0) #>  globals                0.18.0   2025-05-08 [2] CRAN (R 4.5.0) #>  glue                   1.8.0    2024-09-30 [2] CRAN (R 4.5.0) #>  goftest                1.2-3    2021-10-07 [2] CRAN (R 4.5.0) #>  gridExtra              2.3      2017-09-09 [2] CRAN (R 4.5.0) #>  gridtext               0.1.5    2022-09-16 [2] CRAN (R 4.5.0) #>  gtable                 0.3.6    2024-10-25 [2] CRAN (R 4.5.0) #>  h5mread                1.0.1    2025-05-21 [2] Bioconductor 3.21 (R 4.5.0) #>  HDF5Array              1.36.0   2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  hms                    1.1.3    2023-03-21 [2] CRAN (R 4.5.0) #>  htmltools              0.5.8.1  2024-04-04 [2] CRAN (R 4.5.0) #>  htmlwidgets            1.6.4    2023-12-06 [2] CRAN (R 4.5.0) #>  httpuv                 1.6.16   2025-04-16 [2] CRAN (R 4.5.0) #>  httr                   1.4.7    2023-08-15 [2] CRAN (R 4.5.0) #>  ica                    1.0-3    2022-07-08 [2] CRAN (R 4.5.0) #>  igraph                 2.1.4    2025-01-23 [2] CRAN (R 4.5.0) #>  IRanges                2.42.0   2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  irlba                  2.3.5.1  2022-10-03 [2] CRAN (R 4.5.0) #>  jquerylib              0.1.4    2021-04-26 [2] CRAN (R 4.5.0) #>  jsonlite               2.0.0    2025-03-27 [2] CRAN (R 4.5.0) #>  KernSmooth             2.23-26  2025-01-01 [5] CRAN (R 4.4.2) #>  knitr                  1.50     2025-03-16 [2] CRAN (R 4.5.0) #>  labeling               0.4.3    2023-08-29 [2] CRAN (R 4.5.0) #>  later                  1.4.2    2025-04-08 [2] CRAN (R 4.5.0) #>  lattice                0.22-5   2023-10-24 [5] CRAN (R 4.3.3) #>  lazyeval               0.2.2    2019-03-15 [2] CRAN (R 4.5.0) #>  lifecycle              1.0.4    2023-11-07 [2] CRAN (R 4.5.0) #>  limma                  3.64.1   2025-05-25 [2] Bioconductor 3.21 (R 4.5.0) #>  listenv                0.9.1    2024-01-29 [2] CRAN (R 4.5.0) #>  lmtest                 0.9-40   2022-03-21 [2] CRAN (R 4.5.0) #>  locfit                 1.5-9.12 2025-03-05 [2] CRAN (R 4.5.0) #>  magrittr               2.0.3    2022-03-30 [2] CRAN (R 4.5.0) #>  MASS                   7.3-65   2025-02-28 [5] CRAN (R 4.4.3) #>  Matrix                 1.7-3    2025-03-11 [5] CRAN (R 4.4.3) #>  MatrixGenerics         1.20.0   2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  matrixStats            1.5.0    2025-01-07 [2] CRAN (R 4.5.0) #>  mime                   0.13     2025-03-17 [2] CRAN (R 4.5.0) #>  miniUI                 0.1.2    2025-04-17 [2] CRAN (R 4.5.0) #>  nlme                   3.1-168  2025-03-31 [5] CRAN (R 4.4.3) #>  openxlsx               4.2.8    2025-01-25 [2] CRAN (R 4.5.0) #>  parallelly             1.45.0   2025-06-02 [2] CRAN (R 4.5.0) #>  patchwork              1.3.0    2024-09-16 [2] CRAN (R 4.5.0) #>  pbapply                1.7-2    2023-06-27 [2] CRAN (R 4.5.0) #>  pillar                 1.10.2   2025-04-05 [2] CRAN (R 4.5.0) #>  pkgconfig              2.0.3    2019-09-22 [2] CRAN (R 4.5.0) #>  pkgdown                2.1.3    2025-05-25 [2] CRAN (R 4.5.0) #>  plotly                 4.10.4   2024-01-13 [2] CRAN (R 4.5.0) #>  plyr                   1.8.9    2023-10-02 [2] CRAN (R 4.5.0) #>  png                    0.1-8    2022-11-29 [2] CRAN (R 4.5.0) #>  polyclip               1.10-7   2024-07-23 [2] CRAN (R 4.5.0) #>  prettyunits            1.2.0    2023-09-24 [2] CRAN (R 4.5.0) #>  progress               1.2.3    2023-12-06 [2] CRAN (R 4.5.0) #>  progressr              0.15.1   2024-11-22 [2] CRAN (R 4.5.0) #>  promises               1.3.3    2025-05-29 [2] CRAN (R 4.5.0) #>  purrr                  1.0.4    2025-02-05 [2] CRAN (R 4.5.0) #>  R.methodsS3            1.8.2    2022-06-13 [2] CRAN (R 4.5.0) #>  R.oo                   1.27.1   2025-05-02 [2] CRAN (R 4.5.0) #>  R.utils                2.13.0   2025-02-24 [2] CRAN (R 4.5.0) #>  R6                     2.6.1    2025-02-15 [2] CRAN (R 4.5.0) #>  ragg                   1.4.0    2025-04-10 [2] CRAN (R 4.5.0) #>  RANN                   2.6.2    2024-08-25 [2] CRAN (R 4.5.0) #>  RColorBrewer           1.1-3    2022-04-03 [2] CRAN (R 4.5.0) #>  Rcpp                   1.0.14   2025-01-12 [2] CRAN (R 4.5.0) #>  RcppAnnoy              0.0.22   2024-01-23 [2] CRAN (R 4.5.0) #>  RcppHNSW               0.6.0    2024-02-04 [2] CRAN (R 4.5.0) #>  reshape2               1.4.4    2020-04-09 [2] CRAN (R 4.5.0) #>  reticulate             1.42.0   2025-03-25 [2] CRAN (R 4.5.0) #>  rhdf5                  2.52.1   2025-06-08 [2] Bioconductor 3.21 (R 4.5.0) #>  rhdf5filters           1.20.0   2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  Rhdf5lib               1.30.0   2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  rjson                  0.2.23   2024-09-16 [2] CRAN (R 4.5.0) #>  rlang                  1.1.6    2025-04-11 [2] CRAN (R 4.5.0) #>  rmarkdown              2.29     2024-11-04 [2] CRAN (R 4.5.0) #>  ROCR                   1.0-11   2020-05-02 [2] CRAN (R 4.5.0) #>  RSpectra               0.16-2   2024-07-18 [2] CRAN (R 4.5.0) #>  rstatix                0.7.2    2023-02-01 [2] CRAN (R 4.5.0) #>  rstudioapi             0.17.1   2024-10-22 [2] CRAN (R 4.5.0) #>  Rtsne                  0.17     2023-12-07 [2] CRAN (R 4.5.0) #>  S4Arrays               1.8.1    2025-06-01 [2] Bioconductor 3.21 (R 4.5.0) #>  S4Vectors              0.46.0   2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  sass                   0.4.10   2025-04-11 [2] CRAN (R 4.5.0) #>  scales                 1.4.0    2025-04-24 [2] CRAN (R 4.5.0) #>  scattermore            1.2      2023-06-12 [2] CRAN (R 4.5.0) #>  SCpubr                 2.0.2    2023-10-11 [2] CRAN (R 4.5.0) #>  sctransform            0.4.2    2025-04-30 [2] CRAN (R 4.5.0) #>  scuttle                1.18.0   2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  sessioninfo            1.2.3    2025-02-05 [2] CRAN (R 4.5.0) #>  Seurat                 5.3.0    2025-04-23 [2] CRAN (R 4.5.0) #>  SeuratObject           5.1.0    2025-04-22 [2] CRAN (R 4.5.0) #>  shiny                  1.10.0   2024-12-14 [2] CRAN (R 4.5.0) #>  SingleCellExperiment   1.30.1   2025-05-07 [2] Bioconductor 3.21 (R 4.5.0) #>  sp                     2.2-0    2025-02-01 [2] CRAN (R 4.5.0) #>  spam                   2.11-1   2025-01-20 [2] CRAN (R 4.5.0) #>  SparseArray            1.8.0    2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  sparseMatrixStats      1.20.0   2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  spatstat.data          3.1-6    2025-03-17 [2] CRAN (R 4.5.0) #>  spatstat.explore       3.4-3    2025-05-21 [2] CRAN (R 4.5.0) #>  spatstat.geom          3.4-1    2025-05-20 [2] CRAN (R 4.5.0) #>  spatstat.random        3.4-1    2025-05-20 [2] CRAN (R 4.5.0) #>  spatstat.sparse        3.1-0    2024-06-21 [2] CRAN (R 4.5.0) #>  spatstat.univar        3.1-3    2025-05-08 [2] CRAN (R 4.5.0) #>  spatstat.utils         3.1-4    2025-05-15 [2] CRAN (R 4.5.0) #>  statmod                1.5.0    2023-01-06 [2] CRAN (R 4.5.0) #>  stringi                1.8.7    2025-03-27 [2] CRAN (R 4.5.0) #>  stringr                1.5.1    2023-11-14 [2] CRAN (R 4.5.0) #>  SummarizedExperiment   1.38.1   2025-04-30 [2] Bioconductor 3.21 (R 4.5.0) #>  survival               3.8-3    2024-12-17 [5] CRAN (R 4.4.2) #>  systemfonts            1.2.3    2025-04-30 [2] CRAN (R 4.5.0) #>  tensor                 1.5      2012-05-05 [2] CRAN (R 4.5.0) #>  textshaping            1.0.1    2025-05-01 [2] CRAN (R 4.5.0) #>  tibble                 3.3.0    2025-06-08 [2] CRAN (R 4.5.0) #>  tidyr                  1.3.1    2024-01-24 [2] CRAN (R 4.5.0) #>  tidyselect             1.2.1    2024-03-11 [2] CRAN (R 4.5.0) #>  tidyverse              2.0.0    2023-02-22 [2] CRAN (R 4.5.0) #>  UCSC.utils             1.4.0    2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  uwot                   0.2.3    2025-02-24 [2] CRAN (R 4.5.0) #>  vctrs                  0.6.5    2023-12-01 [2] CRAN (R 4.5.0) #>  viridis                0.6.5    2024-01-29 [2] CRAN (R 4.5.0) #>  viridisLite            0.4.2    2023-05-02 [2] CRAN (R 4.5.0) #>  withr                  3.0.2    2024-10-28 [2] CRAN (R 4.5.0) #>  WriteXLS               6.8.0    2025-05-22 [2] CRAN (R 4.5.0) #>  xfun                   0.52     2025-04-02 [2] CRAN (R 4.5.0) #>  xml2                   1.3.8    2025-03-14 [2] CRAN (R 4.5.0) #>  xtable                 1.8-4    2019-04-21 [2] CRAN (R 4.5.0) #>  XVector                0.48.0   2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  yaml                   2.3.10   2024-07-26 [2] CRAN (R 4.5.0) #>  zellkonverter          1.18.0   2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  zip                    2.3.3    2025-05-13 [2] CRAN (R 4.5.0) #>  zoo                    1.8-14   2025-04-10 [2] CRAN (R 4.5.0) #>  #>  [1] /tmp/RtmpuFksXT/temp_libpath11c41779698a8 #>  [2] /home/mariano/R/x86_64-pc-linux-gnu-library/4.5 #>  [3] /usr/local/lib/R/site-library #>  [4] /usr/lib/R/site-library #>  [5] /usr/lib/R/library #>  * ‚îÄ‚îÄ Packages attached to the search path. #>  #> ‚îÄ Python configuration ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ #>  python:         /home/mariano/.venv/DOtools/bin/python #>  libpython:      /home/mariano/.venv/DOtools/lib/libpython3.11.so #>  pythonhome:     /home/mariano/.venv/DOtools:/home/mariano/.venv/DOtools #>  version:        3.11.13 | packaged by conda-forge | (main, Jun  4 2025, 14:48:23) [GCC 13.3.0] #>  numpy:          /home/mariano/.venv/DOtools/lib/python3.11/site-packages/numpy #>  numpy_version:  1.26.4 #>   #>  NOTE: Python version was forced by use_python() function #>  #> ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ"},{"path":"https://marianoruzjurado.github.io/DOtools/articles/cb.html","id":"libraries","dir":"Articles","previous_headings":"","what":"Libraries","title":"Remove ambient RNA with CellBender","text":"","code":"library(DOtools)"},{"path":"https://marianoruzjurado.github.io/DOtools/articles/cb.html","id":"ambient-removal","dir":"Articles","previous_headings":"","what":"Ambient removal","title":"Remove ambient RNA with CellBender","text":"running analysis, several files saved output_folder, including summary report check issues CellBender execution, individual log files sample, commands_Cellbender.txt file exact command used. corrected .h5 files can now used downstream analysis.","code":"base <- DOtools:::.example_10x() #> üì• Downloading data to /tmp/RtmpWffyRJ/dotools_datasets_1a0a92254cff4 #> ‚¨áÔ∏è  Downloading healthy filtered to /tmp/RtmpWffyRJ/dotools_datasets_1a0a92254cff4/healthy/outs/filtered_feature_bc_matrix.h5 #> ‚¨áÔ∏è  Downloading healthy raw to /tmp/RtmpWffyRJ/dotools_datasets_1a0a92254cff4/healthy/outs/raw_feature_bc_matrix.h5 #> ‚¨áÔ∏è  Downloading disease filtered to /tmp/RtmpWffyRJ/dotools_datasets_1a0a92254cff4/disease/outs/filtered_feature_bc_matrix.h5 #> ‚¨áÔ∏è  Downloading disease raw to /tmp/RtmpWffyRJ/dotools_datasets_1a0a92254cff4/disease/outs/raw_feature_bc_matrix.h5 dir.create(file.path(base, \"/cellbender\"))   DO.CellBender(cellranger_path = base,               output_path = file.path(base, \"/cellbender\"),               samplenames = c(\"healthy\", \"disease\"),               cuda = T,               BarcodeRanking = F,                 cpu_threads = 38,               epochs = 5) # 150 is default  #> 2025-06-30 16:10:39 - Using existing conda environment at: /home/mariano/.venv/cellbender #> 2025-06-30 16:10:39 - Running CellBender for 2 sample(s) #> 2025-06-30 16:10:54 - Running CellBender for sample: healthy #> 2025-06-30 16:22:31 - Running CellBender for sample: disease #> 2025-06-30 16:34:10 - Finished running CellBender."},{"path":"https://marianoruzjurado.github.io/DOtools/articles/cb.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"Remove ambient RNA with CellBender","text":"","code":"#> ‚îÄ Session info ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ #>  setting  value #>  version  R version 4.5.1 (2025-06-13) #>  os       Ubuntu 24.04.2 LTS #>  system   x86_64, linux-gnu #>  ui       X11 #>  language en #>  collate  en_US.UTF-8 #>  ctype    en_US.UTF-8 #>  tz       Europe/Berlin #>  date     2025-06-30 #>  pandoc   3.4 @ /usr/lib/rstudio/resources/app/bin/quarto/bin/tools/x86_64/ (via rmarkdown) #>  quarto   1.6.42 @ /usr/lib/rstudio/resources/app/bin/quarto/bin/quarto #>  #> ‚îÄ Packages ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ #>  package              * version  date (UTC) lib source #>  abind                  1.4-8    2024-09-12 [2] CRAN (R 4.5.0) #>  backports              1.5.0    2024-05-23 [2] CRAN (R 4.5.0) #>  basilisk               1.20.0   2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  basilisk.utils         1.20.0   2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  beachmat               2.24.0   2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  Biobase                2.68.0   2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  BiocGenerics           0.54.0   2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  BiocManager            1.30.26  2025-06-05 [2] CRAN (R 4.5.0) #>  BiocParallel           1.42.1   2025-06-01 [2] Bioconductor 3.21 (R 4.5.0) #>  BiocStyle            * 2.36.0   2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  bookdown               0.43     2025-04-15 [2] CRAN (R 4.5.0) #>  broom                  1.0.8    2025-03-28 [2] CRAN (R 4.5.0) #>  bslib                  0.9.0    2025-01-30 [2] CRAN (R 4.5.0) #>  cachem                 1.1.0    2024-05-16 [2] CRAN (R 4.5.0) #>  car                    3.1-3    2024-09-27 [2] CRAN (R 4.5.0) #>  carData                3.0-5    2022-01-06 [2] CRAN (R 4.5.0) #>  cli                    3.6.5    2025-04-23 [2] CRAN (R 4.5.0) #>  cluster                2.1.8.1  2025-03-12 [5] CRAN (R 4.4.3) #>  codetools              0.2-20   2024-03-31 [5] CRAN (R 4.4.0) #>  cowplot                1.1.3    2024-01-22 [2] CRAN (R 4.5.0) #>  crayon                 1.5.3    2024-06-20 [2] CRAN (R 4.5.0) #>  curl                   6.3.0    2025-06-06 [2] CRAN (R 4.5.0) #>  data.table             1.17.4   2025-05-26 [2] CRAN (R 4.5.0) #>  DelayedArray           0.34.1   2025-04-17 [2] Bioconductor 3.21 (R 4.5.0) #>  DelayedMatrixStats     1.30.0   2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  deldir                 2.0-4    2024-02-28 [2] CRAN (R 4.5.0) #>  desc                   1.4.3    2023-12-10 [2] CRAN (R 4.5.0) #>  DESeq2                 1.48.1   2025-05-11 [2] Bioconductor 3.21 (R 4.5.0) #>  digest                 0.6.37   2024-08-19 [2] CRAN (R 4.5.0) #>  dir.expiry             1.16.0   2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  dotCall64              1.2      2024-10-04 [2] CRAN (R 4.5.0) #>  DOtools              * 0.4.0    2025-06-30 [1] Bioconductor #>  dplyr                  1.1.4    2023-11-17 [2] CRAN (R 4.5.0) #>  dqrng                  0.4.1    2024-05-28 [2] CRAN (R 4.5.0) #>  DropletUtils           1.28.0   2025-04-17 [2] Bioconductor 3.21 (R 4.5.0) #>  edgeR                  4.6.2    2025-05-07 [2] Bioconductor 3.21 (R 4.5.0) #>  enrichR                3.4      2025-02-02 [2] CRAN (R 4.5.0) #>  evaluate               1.0.3    2025-01-10 [2] CRAN (R 4.5.0) #>  farver                 2.1.2    2024-05-13 [2] CRAN (R 4.5.0) #>  fastDummies            1.7.5    2025-01-20 [2] CRAN (R 4.5.0) #>  fastmap                1.2.0    2024-05-15 [2] CRAN (R 4.5.0) #>  filelock               1.0.3    2023-12-11 [2] CRAN (R 4.5.0) #>  fitdistrplus           1.2-2    2025-01-07 [2] CRAN (R 4.5.0) #>  Formula                1.2-5    2023-02-24 [2] CRAN (R 4.5.0) #>  fs                     1.6.6    2025-04-12 [2] CRAN (R 4.5.0) #>  future                 1.58.0   2025-06-05 [2] CRAN (R 4.5.0) #>  future.apply           1.20.0   2025-06-06 [2] CRAN (R 4.5.0) #>  generics               0.1.4    2025-05-09 [2] CRAN (R 4.5.0) #>  GenomeInfoDb           1.44.0   2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  GenomeInfoDbData       1.2.14   2025-05-13 [2] Bioconductor #>  GenomicRanges          1.60.0   2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  ggalluvial             0.12.5   2023-02-22 [2] CRAN (R 4.5.0) #>  ggcorrplot             0.1.4.1  2023-09-05 [2] CRAN (R 4.5.1) #>  ggplot2                3.5.2    2025-04-09 [2] CRAN (R 4.5.0) #>  ggpubr                 0.6.0    2023-02-10 [2] CRAN (R 4.5.0) #>  ggrepel                0.9.6    2024-09-07 [2] CRAN (R 4.5.0) #>  ggridges               0.5.6    2024-01-23 [2] CRAN (R 4.5.0) #>  ggsignif               0.6.4    2022-10-13 [2] CRAN (R 4.5.0) #>  ggtext                 0.1.2    2022-09-16 [2] CRAN (R 4.5.0) #>  globals                0.18.0   2025-05-08 [2] CRAN (R 4.5.0) #>  glue                   1.8.0    2024-09-30 [2] CRAN (R 4.5.0) #>  goftest                1.2-3    2021-10-07 [2] CRAN (R 4.5.0) #>  gridExtra              2.3      2017-09-09 [2] CRAN (R 4.5.0) #>  gridtext               0.1.5    2022-09-16 [2] CRAN (R 4.5.0) #>  gtable                 0.3.6    2024-10-25 [2] CRAN (R 4.5.0) #>  h5mread                1.0.1    2025-05-21 [2] Bioconductor 3.21 (R 4.5.0) #>  HDF5Array              1.36.0   2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  hms                    1.1.3    2023-03-21 [2] CRAN (R 4.5.0) #>  htmltools              0.5.8.1  2024-04-04 [2] CRAN (R 4.5.0) #>  htmlwidgets            1.6.4    2023-12-06 [2] CRAN (R 4.5.0) #>  httpuv                 1.6.16   2025-04-16 [2] CRAN (R 4.5.0) #>  httr                   1.4.7    2023-08-15 [2] CRAN (R 4.5.0) #>  ica                    1.0-3    2022-07-08 [2] CRAN (R 4.5.0) #>  igraph                 2.1.4    2025-01-23 [2] CRAN (R 4.5.0) #>  IRanges                2.42.0   2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  irlba                  2.3.5.1  2022-10-03 [2] CRAN (R 4.5.0) #>  jquerylib              0.1.4    2021-04-26 [2] CRAN (R 4.5.0) #>  jsonlite               2.0.0    2025-03-27 [2] CRAN (R 4.5.0) #>  KernSmooth             2.23-26  2025-01-01 [5] CRAN (R 4.4.2) #>  knitr                  1.50     2025-03-16 [2] CRAN (R 4.5.0) #>  later                  1.4.2    2025-04-08 [2] CRAN (R 4.5.0) #>  lattice                0.22-5   2023-10-24 [5] CRAN (R 4.3.3) #>  lazyeval               0.2.2    2019-03-15 [2] CRAN (R 4.5.0) #>  lifecycle              1.0.4    2023-11-07 [2] CRAN (R 4.5.0) #>  limma                  3.64.1   2025-05-25 [2] Bioconductor 3.21 (R 4.5.0) #>  listenv                0.9.1    2024-01-29 [2] CRAN (R 4.5.0) #>  lmtest                 0.9-40   2022-03-21 [2] CRAN (R 4.5.0) #>  locfit                 1.5-9.12 2025-03-05 [2] CRAN (R 4.5.0) #>  magrittr               2.0.3    2022-03-30 [2] CRAN (R 4.5.0) #>  MASS                   7.3-65   2025-02-28 [5] CRAN (R 4.4.3) #>  Matrix                 1.7-3    2025-03-11 [5] CRAN (R 4.4.3) #>  MatrixGenerics         1.20.0   2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  matrixStats            1.5.0    2025-01-07 [2] CRAN (R 4.5.0) #>  mime                   0.13     2025-03-17 [2] CRAN (R 4.5.0) #>  miniUI                 0.1.2    2025-04-17 [2] CRAN (R 4.5.0) #>  nlme                   3.1-168  2025-03-31 [5] CRAN (R 4.4.3) #>  openxlsx               4.2.8    2025-01-25 [2] CRAN (R 4.5.0) #>  parallelly             1.45.0   2025-06-02 [2] CRAN (R 4.5.0) #>  patchwork              1.3.0    2024-09-16 [2] CRAN (R 4.5.0) #>  pbapply                1.7-2    2023-06-27 [2] CRAN (R 4.5.0) #>  pillar                 1.10.2   2025-04-05 [2] CRAN (R 4.5.0) #>  pkgconfig              2.0.3    2019-09-22 [2] CRAN (R 4.5.0) #>  pkgdown                2.1.3    2025-05-25 [2] CRAN (R 4.5.0) #>  plotly                 4.10.4   2024-01-13 [2] CRAN (R 4.5.0) #>  plyr                   1.8.9    2023-10-02 [2] CRAN (R 4.5.0) #>  png                    0.1-8    2022-11-29 [2] CRAN (R 4.5.0) #>  polyclip               1.10-7   2024-07-23 [2] CRAN (R 4.5.0) #>  prettyunits            1.2.0    2023-09-24 [2] CRAN (R 4.5.0) #>  progress               1.2.3    2023-12-06 [2] CRAN (R 4.5.0) #>  progressr              0.15.1   2024-11-22 [2] CRAN (R 4.5.0) #>  promises               1.3.3    2025-05-29 [2] CRAN (R 4.5.0) #>  purrr                  1.0.4    2025-02-05 [2] CRAN (R 4.5.0) #>  R.methodsS3            1.8.2    2022-06-13 [2] CRAN (R 4.5.0) #>  R.oo                   1.27.1   2025-05-02 [2] CRAN (R 4.5.0) #>  R.utils                2.13.0   2025-02-24 [2] CRAN (R 4.5.0) #>  R6                     2.6.1    2025-02-15 [2] CRAN (R 4.5.0) #>  ragg                   1.4.0    2025-04-10 [2] CRAN (R 4.5.0) #>  RANN                   2.6.2    2024-08-25 [2] CRAN (R 4.5.0) #>  RColorBrewer           1.1-3    2022-04-03 [2] CRAN (R 4.5.0) #>  Rcpp                   1.0.14   2025-01-12 [2] CRAN (R 4.5.0) #>  RcppAnnoy              0.0.22   2024-01-23 [2] CRAN (R 4.5.0) #>  RcppHNSW               0.6.0    2024-02-04 [2] CRAN (R 4.5.0) #>  reshape2               1.4.4    2020-04-09 [2] CRAN (R 4.5.0) #>  reticulate             1.42.0   2025-03-25 [2] CRAN (R 4.5.0) #>  rhdf5                  2.52.1   2025-06-08 [2] Bioconductor 3.21 (R 4.5.0) #>  rhdf5filters           1.20.0   2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  Rhdf5lib               1.30.0   2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  rjson                  0.2.23   2024-09-16 [2] CRAN (R 4.5.0) #>  rlang                  1.1.6    2025-04-11 [2] CRAN (R 4.5.0) #>  rmarkdown              2.29     2024-11-04 [2] CRAN (R 4.5.0) #>  ROCR                   1.0-11   2020-05-02 [2] CRAN (R 4.5.0) #>  RSpectra               0.16-2   2024-07-18 [2] CRAN (R 4.5.0) #>  rstatix                0.7.2    2023-02-01 [2] CRAN (R 4.5.0) #>  rstudioapi             0.17.1   2024-10-22 [2] CRAN (R 4.5.0) #>  Rtsne                  0.17     2023-12-07 [2] CRAN (R 4.5.0) #>  S4Arrays               1.8.1    2025-06-01 [2] Bioconductor 3.21 (R 4.5.0) #>  S4Vectors              0.46.0   2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  sass                   0.4.10   2025-04-11 [2] CRAN (R 4.5.0) #>  scales                 1.4.0    2025-04-24 [2] CRAN (R 4.5.0) #>  scattermore            1.2      2023-06-12 [2] CRAN (R 4.5.0) #>  sctransform            0.4.2    2025-04-30 [2] CRAN (R 4.5.0) #>  scuttle                1.18.0   2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  sessioninfo            1.2.3    2025-02-05 [2] CRAN (R 4.5.0) #>  Seurat                 5.3.0    2025-04-23 [2] CRAN (R 4.5.0) #>  SeuratObject           5.1.0    2025-04-22 [2] CRAN (R 4.5.0) #>  shiny                  1.10.0   2024-12-14 [2] CRAN (R 4.5.0) #>  SingleCellExperiment   1.30.1   2025-05-07 [2] Bioconductor 3.21 (R 4.5.0) #>  sp                     2.2-0    2025-02-01 [2] CRAN (R 4.5.0) #>  spam                   2.11-1   2025-01-20 [2] CRAN (R 4.5.0) #>  SparseArray            1.8.0    2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  sparseMatrixStats      1.20.0   2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  spatstat.data          3.1-6    2025-03-17 [2] CRAN (R 4.5.0) #>  spatstat.explore       3.4-3    2025-05-21 [2] CRAN (R 4.5.0) #>  spatstat.geom          3.4-1    2025-05-20 [2] CRAN (R 4.5.0) #>  spatstat.random        3.4-1    2025-05-20 [2] CRAN (R 4.5.0) #>  spatstat.sparse        3.1-0    2024-06-21 [2] CRAN (R 4.5.0) #>  spatstat.univar        3.1-3    2025-05-08 [2] CRAN (R 4.5.0) #>  spatstat.utils         3.1-4    2025-05-15 [2] CRAN (R 4.5.0) #>  statmod                1.5.0    2023-01-06 [2] CRAN (R 4.5.0) #>  stringi                1.8.7    2025-03-27 [2] CRAN (R 4.5.0) #>  stringr                1.5.1    2023-11-14 [2] CRAN (R 4.5.0) #>  SummarizedExperiment   1.38.1   2025-04-30 [2] Bioconductor 3.21 (R 4.5.0) #>  survival               3.8-3    2024-12-17 [5] CRAN (R 4.4.2) #>  systemfonts            1.2.3    2025-04-30 [2] CRAN (R 4.5.0) #>  tensor                 1.5      2012-05-05 [2] CRAN (R 4.5.0) #>  textshaping            1.0.1    2025-05-01 [2] CRAN (R 4.5.0) #>  tibble                 3.3.0    2025-06-08 [2] CRAN (R 4.5.0) #>  tidyr                  1.3.1    2024-01-24 [2] CRAN (R 4.5.0) #>  tidyselect             1.2.1    2024-03-11 [2] CRAN (R 4.5.0) #>  tidyverse              2.0.0    2023-02-22 [2] CRAN (R 4.5.0) #>  UCSC.utils             1.4.0    2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  uwot                   0.2.3    2025-02-24 [2] CRAN (R 4.5.0) #>  vctrs                  0.6.5    2023-12-01 [2] CRAN (R 4.5.0) #>  viridisLite            0.4.2    2023-05-02 [2] CRAN (R 4.5.0) #>  WriteXLS               6.8.0    2025-05-22 [2] CRAN (R 4.5.0) #>  xfun                   0.52     2025-04-02 [2] CRAN (R 4.5.0) #>  xml2                   1.3.8    2025-03-14 [2] CRAN (R 4.5.0) #>  xtable                 1.8-4    2019-04-21 [2] CRAN (R 4.5.0) #>  XVector                0.48.0   2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  yaml                   2.3.10   2024-07-26 [2] CRAN (R 4.5.0) #>  zellkonverter          1.18.0   2025-04-15 [2] Bioconductor 3.21 (R 4.5.0) #>  zip                    2.3.3    2025-05-13 [2] CRAN (R 4.5.0) #>  zoo                    1.8-14   2025-04-10 [2] CRAN (R 4.5.0) #>  #>  [1] /tmp/RtmpuFksXT/temp_libpath11c41779698a8 #>  [2] /home/mariano/R/x86_64-pc-linux-gnu-library/4.5 #>  [3] /usr/local/lib/R/site-library #>  [4] /usr/lib/R/site-library #>  [5] /usr/lib/R/library #>  * ‚îÄ‚îÄ Packages attached to the search path. #>  #> ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ"},{"path":"https://marianoruzjurado.github.io/DOtools/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Mariano Ruz Jurado. Author, maintainer. David Rodriguez Morales. Author. David John. Author.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ruz Jurado M, Rodriguez Morales D, John D (2025). DOtools: Convenient functions streamline single cell data analysis workflow.. R package version 0.4.0, https://marianoruzjurado.github.io/DOtools/.","code":"@Manual{,   title = {DOtools: Convenient functions to streamline your single cell data analysis workflow.},   author = {Mariano {Ruz Jurado} and David {Rodriguez Morales} and David John},   year = {2025},   note = {R package version 0.4.0},   url = {https://marianoruzjurado.github.io/DOtools/}, }"},{"path":[]},{"path":"https://marianoruzjurado.github.io/DOtools/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Convenient functions to streamline your single cell data analysis workflow.","text":"DOtools user-friendly R package designed streamline common workflows single-cell RNA sequencing (scRNA-seq) data analysis using Seurat ecosystem third-party tools scVI, CellTypist, CellBender. provides high-level wrappers visualisation utilities help efficiently preprocess, analyze, interpret single-cell data.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/index.html","id":"id_-installation-","dir":"","previous_headings":"","what":"Installation","title":"Convenient functions to streamline your single cell data analysis workflow.","text":"DOtools currently available github. install package, start R run:","code":"install.packages(\"devtools\") # if not installed already devtools::install_github(\"MarianoRuzJurado/DOtools\")"},{"path":"https://marianoruzjurado.github.io/DOtools/index.html","id":"id_-python-package-","dir":"","previous_headings":"","what":"Python package","title":"Convenient functions to streamline your single cell data analysis workflow.","text":"prefer python R data analysis, also provide python version DOtools package. Please refer python version : DOtools_py","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/index.html","id":"id_-contribution-guidelines-","dir":"","previous_headings":"","what":"Contribution Guidelines","title":"Convenient functions to streamline your single cell data analysis workflow.","text":"Raising issue Github repository might fastest way submitting suggestions bugs. Alternatively can write email: ruzjurado@med.uni-frankfurt.de","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/index.html","id":"id_-citation-","dir":"","previous_headings":"","what":"Citation","title":"Convenient functions to streamline your single cell data analysis workflow.","text":"tba","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.BarplotClustert.html","id":null,"dir":"Reference","previous_headings":"","what":"SEM Graph with t test on cluster level ‚Äî DO.BarplotClustert","title":"SEM Graph with t test on cluster level ‚Äî DO.BarplotClustert","text":"Perform SEM-based graphs t-test cluster level Seurat objects. Calculates mean expression values SEM selected features, visualizes . Performs pairwise t-tests comparing conditions, optional custom control condition clustering. Optionally returns summary data frame.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.BarplotClustert.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SEM Graph with t test on cluster level ‚Äî DO.BarplotClustert","text":"","code":"DO.BarplotClustert(   Seu_object,   Feature,   ListTest = NULL,   returnValues = FALSE,   ctrl.condition = NULL,   group.by = \"condition\",   returnPlot = TRUE,   bar_colours = NULL,   stat_pos_mod = 1.15,   step_mod = 0.2,   x_label_rotation = 45,   y_limits = NULL,   log1p_nUMI = T )"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.BarplotClustert.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SEM Graph with t test on cluster level ‚Äî DO.BarplotClustert","text":"Seu_object Combined Seu_object ListTest List conditions t-test performed, NULL always provided CTRL returnValues return df.melt.sum data frame containing means SEM set group ctrl.condition set ctrl condition, relevant running empty comparison List group.select seurat object slot conditions can found, default conditon bar_colours colour vector stat_pos_mod Defines distance graphs statistic step_mod Defines distance statistics bracket x_label_rotation Rotation x-labels y_limits set limits y-axis log1p_nUMI nUMIs log1p transformed Features Vector containing featurenames","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.BarplotClustert.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SEM Graph with t test on cluster level ‚Äî DO.BarplotClustert","text":"ggplot dataframe","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.BarplotClustert.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"SEM Graph with t test on cluster level ‚Äî DO.BarplotClustert","text":"Mariano Ruz Jurado","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.BarplotClustert.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SEM Graph with t test on cluster level ‚Äî DO.BarplotClustert","text":"","code":"if (FALSE) { # \\dontrun{  (optional) ListTest <- list() ListTest[[1]] <- c(\"CTRL\", \"CONDITION\")  DO.BarplotClustert(   Seu_object = Seurat,   Features = \"CDH5\",   ListTest = ListTest,   ctrl.condition = \"CTRL\",   group.by=\"condition\" ) } # }"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.BarplotWilcox.html","id":null,"dir":"Reference","previous_headings":"","what":"SEM Graph with wilcox test on single cell level ‚Äî DO.BarplotWilcox","title":"SEM Graph with wilcox test on single cell level ‚Äî DO.BarplotWilcox","text":"Perform SEM-based graphs Wilcox test single-cell level Seurat objects. Calculates mean expression values SEM selected feature, visualizes . Performs pairwise Wilcox tests comparing conditions, optional custom control condition clustering. Optionally returns summary data frame, statistical test results, generated plot.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.BarplotWilcox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SEM Graph with wilcox test on single cell level ‚Äî DO.BarplotWilcox","text":"","code":"DO.BarplotWilcox(   Seu_object,   Feature,   ListTest = NULL,   returnValues = FALSE,   ctrl.condition = NULL,   group.by = \"condition\",   wilcox_test = TRUE,   bar_colours = NULL,   stat_pos_mod = 1.15,   step_mod = 0.2,   x_label_rotation = 45,   plotPvalue = FALSE,   y_limits = NULL,   log1p_nUMI = T )"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.BarplotWilcox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SEM Graph with wilcox test on single cell level ‚Äî DO.BarplotWilcox","text":"Seu_object combined Seurat object Feature name feature/gene ListTest List conditions wilcoxon test performed, NULL always CTRL group everything returnValues return data frames needed plot, containing df.melt, df.melt.sum, df.melt.orig wilcoxstats ctrl.condition set ctrl condition, relevant running empty comparison List group.select seurat object slot conditions can found, default conditon bar_colours colour vector stat_pos_mod Defines distance graphs statistic step_mod Defines distance statistics bracket x_label_rotation Rotation x-labels plotPvalue plot non adjusted p-value without correcting multiple tests y_limits set limits y-axis log1p_nUMI nUMIs log1p transformed","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.BarplotWilcox.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SEM Graph with wilcox test on single cell level ‚Äî DO.BarplotWilcox","text":"ggplot list plot data frame","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.BarplotWilcox.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"SEM Graph with wilcox test on single cell level ‚Äî DO.BarplotWilcox","text":"Mariano Ruz Jurado","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.BarplotWilcox.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SEM Graph with wilcox test on single cell level ‚Äî DO.BarplotWilcox","text":"","code":"if (FALSE) { # \\dontrun{  (optional) ListTest <- list() ListTest[[1]] <- c(\"CTRL\", \"CONDITION\")  DO.BarplotWilcox(   Seu_object = Seurat,   Feature = \"CDH5\",   ListTest = ListTest,   ctrl.condition = \"CTRL\",   group.by=\"condition\" ) } # }"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.BoxPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Box Graph with wilcox test on single cell level ‚Äî DO.BoxPlot","title":"Box Graph with wilcox test on single cell level ‚Äî DO.BoxPlot","text":"Creates box plot using pseudo-bulk approach performs Wilcoxon test single-cell level. Allows customization outlier removal, statistical labels, color schemes. Supports comparison conditions optional second grouping. Useful visualizing gene expression statistical differences.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.BoxPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Box Graph with wilcox test on single cell level ‚Äî DO.BoxPlot","text":"","code":"DO.BoxPlot(   Seu_object,   Feature,   sample.column = \"orig.ident\",   ListTest = NULL,   group.by = \"condition\",   group.by.2 = NULL,   ctrl.condition = NULL,   outlier_removal = T,   plot_sample = T,   vector_colors = c(\"#1f77b4\", \"#ea7e1eff\", \"royalblue4\", \"tomato2\", \"darkgoldenrod\",     \"palegreen4\", \"maroon\", \"thistle3\"),   wilcox_test = T,   stat_pos_mod = 1.15,   step_mod = 0,   hjust.wilcox = 0.5,   vjust.wilcox = 0.25,   size.wilcox = 3.33,   hjust.wilcox.2 = 0.5,   vjust.wilcox.2 = 0,   sign_bar = 0.8,   orderAxis = NULL )"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.BoxPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Box Graph with wilcox test on single cell level ‚Äî DO.BoxPlot","text":"Seu_object seurat object group.group name look meta data group..2 second group name look meta data ctrl.condition select condition compare outlier_removal Outlier calculation vector_colors get colours plot wilcox_test want wilcoxon performed ctrl.condition given ones stat_pos_mod modificator p-value plotted increase higher step_mod value defining space one test next one hjust.wilcox value adjusting height text vjust.wilcox value vertical text size.wilcox value size text statistical test orderAxis vector xaxis sorting, alphabetically default","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.BoxPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Box Graph with wilcox test on single cell level ‚Äî DO.BoxPlot","text":"ggplot","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.BoxPlot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Box Graph with wilcox test on single cell level ‚Äî DO.BoxPlot","text":"Mariano Ruz Jurado","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.BoxPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Box Graph with wilcox test on single cell level ‚Äî DO.BoxPlot","text":"","code":"if (FALSE) { # \\dontrun{  (optional) ListTest <- list() ListTest[[1]] <- c(\"CTRL\", \"CONDITION\")  DO.BoxPlot(   Seu_object = Seurat,   Feature = \"CDH5\",   sample.column=\"orig.ident\",   ListTest = ListTest,   group.by=\"condition\",   ctrl.condition = \"CTRL\", ) } # }"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.CellBender.html","id":null,"dir":"Reference","previous_headings":"","what":"DO.CellBender ‚Äî DO.CellBender","title":"DO.CellBender ‚Äî DO.CellBender","text":"supposed make something similar longer working DietSeurat function, removing longer needed layers th object. function wraps system call bash script running CellBender CellRanger outputs. ensures required inputs available optionally installs CellBender conda env.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.CellBender.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DO.CellBender ‚Äî DO.CellBender","text":"","code":"DO.CellBender(   cellranger_path,   output_path,   samplenames = NULL,   cuda = TRUE,   cpu_threads = 15,   epochs = 150,   lr = 1e-05,   estimator_multiple_cpu = FALSE,   log = TRUE,   conda_path = NULL,   BarcodeRanking = TRUE,   bash_script = system.file(\"bash\", \"_run_CellBender.sh\", package = \"DOtools\") )"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.CellBender.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DO.CellBender ‚Äî DO.CellBender","text":"cellranger_path Path folder CellRanger outputs. output_path Output directory CellBender results. samplenames Optional vector sample names. NULL, autodetect folders cellranger_path. cuda Logical, whether use GPU (CUDA). cpu_threads Number CPU threads use. epochs Number training epochs. lr Learning rate. estimator_multiple_cpu Use estimator multiple CPU threads (experimental). log Whether enable logging. conda_path Optional path conda environment. BarcodeRanking Optional Calculation estimated cells samples DropletUtils implementation bash_script Path bash script runs CellBender.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.CellBender.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DO.CellBender ‚Äî DO.CellBender","text":"","code":"if (FALSE) { # \\dontrun{ # Define paths cellranger_path <- \"/mnt/data/cellranger_outputs\" output_path <- \"/mnt/data/cellbender_outputs\"  # Optional: specify sample names if automatic detection is not desired samplenames <- c(\"Sample_1\", \"Sample_2\")  # Run CellBender (uses GPU by default) DO.CellBender(cellranger_path = cellranger_path,               output_path = output_path,               samplenames = samplenames,               cuda = TRUE,               cpu_threads = 8,               epochs = 100,               lr = 0.00001,               estimator_multiple_cpu = FALSE,               log = TRUE) } # }"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.CellComposition.html","id":null,"dir":"Reference","previous_headings":"","what":"DO CellComposition ‚Äî DO.CellComposition","title":"DO CellComposition ‚Äî DO.CellComposition","text":"Computes visualizes cell composition changes Seurat object using Scanpro. Integrates R Python via reticulate convert Seurat AnnData run Scanpro. Generates customizable plots options transformation, grouping, bootstrapping. Returns ggplot object list containing plot data visualization.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.CellComposition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DO CellComposition ‚Äî DO.CellComposition","text":"","code":"DO.CellComposition(   Seu_object,   assay_normalized = \"RNA\",   cluster_column = \"seurat_clusters\",   sample_column = \"orig.ident\",   condition_column = \"condition\",   transform_method = \"logit\",   sort_x = NULL,   sub_ident = NULL,   sort_fill = NULL,   scanpro_plots = F,   scanpro_group = NULL,   outputFolder = NULL,   return_df = FALSE,   bar_colors = NULL,   n_reps = NULL,   legend.pos.x = 0.48,   legend.pos.y = 0,   cowplot_width = 0.9,   cowlegend_width = 0.9,   ... )"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.CellComposition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DO CellComposition ‚Äî DO.CellComposition","text":"Seu_object seurat object assay_normalized Assay raw counts cluster_column Column meta data used segment bar plot sample_column Column meta data containing individual sample names condition_column Column meta data plotted xaxis transform_method Method transformation proporties, default: \"logit\" sort_x Vector sorting xaxis sub_ident vector subset whole plot sort_fill Vector sorting bar segments scanpro_plots Boolean, create plots provided scanpro package, default: FALSE scanpro_group Defines clusters showed scanpro plots outputFolder Scanpro plots saved directory, defaults current working directory return_df Boolean, makes list first entry beeaing dataframe used create ggplot second entry plot bar_colors (named) vector colors used plotting, names sued factorize segments n_reps Number replicates generated scanpro legend.pos.x adjusts position legend horizontal legend.pos.y adjusts position legend vertical cowplot_width Changes width plotting device plot cowlegend_width Changes width plotting device legend, useful adjusting legend position combination legend.pos.x y ... arguments passed scanpro plotting functions","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.CellComposition.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DO CellComposition ‚Äî DO.CellComposition","text":"ggplot object list","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.CellComposition.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"DO CellComposition ‚Äî DO.CellComposition","text":"Mariano Ruz Jurado","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.CellComposition.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DO CellComposition ‚Äî DO.CellComposition","text":"","code":"if (FALSE) { # \\dontrun{   DO.CellComposition(   Seu_object = Seurat,   cluster_column=\"cell_type\",   condition_column=\"condition\",   scanpro_plots=T,   bar_colors=c(\"#ff7f0e\",\"tomato2\", \"darkgoldenrod2\",\"#aec7e8\"), # can also be a named vector   n_reps=5)    } # }"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.CellTypist.html","id":null,"dir":"Reference","previous_headings":"","what":"DO Celltypist ‚Äî DO.CellTypist","title":"DO Celltypist ‚Äî DO.CellTypist","text":"Runs CellTypist model Seurat object predict cell type labels, storing results metadata. number cells less specified threshold, returns NAs labels. Optionally updates CellTypist models returns probability matrix. Useful annotating cell types single-cell RNA sequencing datasets.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.CellTypist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DO Celltypist ‚Äî DO.CellTypist","text":"","code":"DO.CellTypist(   Seu_object,   modelName = \"Healthy_Adult_Heart.pkl\",   minCellsToRun = 200,   runCelltypistUpdate = TRUE,   over_clustering = \"seurat_clusters\",   assay_normalized = \"RNA\",   returnProb = FALSE,   SeuV5 = T )"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.CellTypist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DO Celltypist ‚Äî DO.CellTypist","text":"Seu_object seurat object minCellsToRun input seurat object fewer many cells, NAs added expected columns celltypist run. runCelltypistUpdate true, ‚Äìupdate-models run celltypist prior scoring cells. over_clustering Column metadata object clustering assignments cells, default seurat_clusters assay_normalized Assay log1p normalized expressions returnProb additionally return probability matrix, return give list first element beeing object second prob matrix","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.CellTypist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DO Celltypist ‚Äî DO.CellTypist","text":"seurat","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.CellTypist.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"DO Celltypist ‚Äî DO.CellTypist","text":"Mariano Ruz Jurado","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.CellTypist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DO Celltypist ‚Äî DO.CellTypist","text":"","code":"if (FALSE) { # \\dontrun{   DO.CellTypist(   Seu_object = Seurat,   modelName = \"Healthy_Adult_Heart.pkl\",   runCelltypistUpdate = TRUE,   over_clustering = \"seurat_clusters\",   SeuV5=T ) } # }"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.Correlation.html","id":null,"dir":"Reference","previous_headings":"","what":"DO Correlation Plot for visualizing similarity between categories ‚Äî DO.Correlation","title":"DO Correlation Plot for visualizing similarity between categories ‚Äî DO.Correlation","text":"#' Generates correlation heatmap expression data visualize similarity across sample groups. Allows customization plot type, correlation method, color scaling using ggcorrplot2 ggplot2 architectures. Ideal comparing transcriptional profiles conditions clusters.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.Correlation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DO Correlation Plot for visualizing similarity between categories ‚Äî DO.Correlation","text":"","code":"DO.Correlation(   Seu_obj,   group_by = \"orig.ident\",   assay = \"RNA\",   features = NULL,   method = \"spearman\",   plotdesign = \"square\",   plottype = \"full\",   auto_limits = TRUE,   outline.color = \"white\",   colormap = c(\"royalblue4\", \"royalblue2\", \"firebrick\", \"firebrick4\"),   lab_size = 10,   lab = TRUE,   lab_col = \"white\",   ... )"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.Correlation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DO Correlation Plot for visualizing similarity between categories ‚Äî DO.Correlation","text":"Seu_obj Seurat Object group_by Column aggregate expression , default \"orig.ident\" assay Assay object use, default \"RNA\" features genes include default , default \"None\" method Correlation method, default \"spearman\" plotdesign Plot design, default \"circle\" plottype Show full plot half , default \"full\" auto_limits Automatically rescales colour bar based values correlation matrix, default \"TRUE\" outline.color outline color square circle. Default value \"white\". colormap Defines colormap used plot, default c(\"royalblue4\", \"royalblue2\",\"firebrick\",\"firebrick4\") lab_size Size used correlation coefficient labels. used lab = TRUE. lab logical value. TRUE, add correlation coefficient plot. lab_col color used correlation coefficient labels. used lab = TRUE. ... Additionally arguments passed ggcorrplot function","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.Correlation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DO Correlation Plot for visualizing similarity between categories ‚Äî DO.Correlation","text":"ggplot2","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.Correlation.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"DO Correlation Plot for visualizing similarity between categories ‚Äî DO.Correlation","text":"Mariano Ruz Jurado","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.Correlation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DO Correlation Plot for visualizing similarity between categories ‚Äî DO.Correlation","text":"","code":"if (FALSE) { # \\dontrun{ DO.Correlation(   Seu_obj = seurat_object,   group_by = \"orig.ident\",   assay = \"RNA\",   features = NULL,   method = \"spearman\",   plotdesign = \"square\",   plottype = \"full\",   auto_limits = TRUE,   outline.color = \"white\",   colormap = c(\"royalblue4\", \"royalblue2\", \"firebrick\", \"firebrick4\"),   lab_size = 10,   lab = TRUE,   lab_col = \"white\" ) } # }"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.DietSeurat.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove Layers from Seurat Object by Pattern ‚Äî DO.DietSeurat","title":"Remove Layers from Seurat Object by Pattern ‚Äî DO.DietSeurat","text":"function removes layers Seurat object's RNA assay based specified regular expression pattern. supposed make something similar longer working DietSeurat function, removing longer needed layers th object.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.DietSeurat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove Layers from Seurat Object by Pattern ‚Äî DO.DietSeurat","text":"","code":"DO.DietSeurat(Seu_object, pattern = \"^scale\\\\.data\\\\.\")"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.DietSeurat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove Layers from Seurat Object by Pattern ‚Äî DO.DietSeurat","text":"Seu_object Seurat object. pattern regular expression pattern match layer names. Default \"^scale\\.data\\.\"","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.DietSeurat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove Layers from Seurat Object by Pattern ‚Äî DO.DietSeurat","text":"Seurat object specified layers removed.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.DietSeurat.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Remove Layers from Seurat Object by Pattern ‚Äî DO.DietSeurat","text":"Mariano Ruz Jurado","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.DietSeurat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove Layers from Seurat Object by Pattern ‚Äî DO.DietSeurat","text":"","code":"if (FALSE) { # \\dontrun{   DO.Subset(   Seu_object = Seurat,   ident=\"condition\",   ident_name=\"CTRL\" )  DO.Subset(   Seu_object = Seurat,   ident=\"nFeature_RNA\",   ident_thresh=c(\">5\", \"<200\") ) } # }"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.Dotplot.html","id":null,"dir":"Reference","previous_headings":"","what":"DO Dot plot ‚Äî DO.Dotplot","title":"DO Dot plot ‚Äî DO.Dotplot","text":"function generates dot plot multiple genes, comparing expression levels across one two specified groups. supports individual pseudobulk expression calculations. Highly variable customization options allow control dot size, color scaling, annotations, axis orientation. function integrates seamlessly Seurat objects single-cell RNA-seq analysis.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.Dotplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DO Dot plot ‚Äî DO.Dotplot","text":"","code":"DO.Dotplot(   Seu_object,   Feature,   group.by.x = NULL,   group.by.y = NULL,   group.by.y2 = NULL,   across.group.by.x = F,   across.group.by.y = F,   sort_x = NULL,   dot.size = c(1, 6),   plot.margin = c(1, 1, 1, 1),   midpoint = 0.5,   scale_gene = F,   returnValue = F,   log1p_nUMI = T,   hide_zero = T,   annotation_x = F,   annotation_x_position = 0.25,   annotation_x_rev = F,   point_stroke = 0.2,   limits_colorscale = NULL,   coord_flip = F,   ... )"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.Dotplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DO Dot plot ‚Äî DO.Dotplot","text":"Seu_object seurat Seu_object Feature Genes DF interest, Data frame columns gene annotation information, e.g. output FindAllMarkers group..x group name plot x-axis group..y group name look meta data group..y2 second group name look meta data across.group..x calculate pseudobulk expression approach x-axis categories across.group..y calculate pseudobulk expression approach y-axis categories, group..y2 specified Pseudobulk splitted sort_x Vector sorting xaxis dot.size Vector dot size plot.margin = plot margins midpoint midpoint color gradient scale_gene True calculates Z-score average expression per gene hide_zero Removes dots genes 0 expression annotation_x Adds annotation top x axis instead y axis point_stroke Defines thickness black stroke dots limits_colorscale Set manually colorscale limits ... arguments passed annoSegment function annotation_x == T","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.Dotplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DO Dot plot ‚Äî DO.Dotplot","text":"ggplot","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.Dotplot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"DO Dot plot ‚Äî DO.Dotplot","text":"Mariano Ruz Jurado","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.Dotplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DO Dot plot ‚Äî DO.Dotplot","text":"","code":"if (FALSE) { # \\dontrun{   DO.Dotplot(   Seu_object = Seurat,   Feature = c(\"CDH5\",\"TTN\",\"MALAT1\"),   group.by.x=\"condition\" ) } # }"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.FullRecluster.html","id":null,"dir":"Reference","previous_headings":"","what":"DO.FullRecluster ‚Äî DO.FullRecluster","title":"DO.FullRecluster ‚Äî DO.FullRecluster","text":"Performs iterative reclustering major cluster found FindClusters Seurat object. refines clusters using FindSubCluster function better resolution fine-tuned annotation. new clustering results stored metadata column called annotation_recluster. Suitable improving cluster precision granularity initial clustering.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.FullRecluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DO.FullRecluster ‚Äî DO.FullRecluster","text":"","code":"DO.FullRecluster(   Seu_object,   over_clustering = \"seurat_clusters\",   res = 0.5,   algorithm = 4,   graph.name = \"RNA_snn\" )"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.FullRecluster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DO.FullRecluster ‚Äî DO.FullRecluster","text":"Seu_object seurat object over_clustering Column metadata object clustering assignments cells, default seurat_clusters res Resolution new clusters, default 0.5 algorithm Set one available algorithms found FindSubCLuster function, default = 4: leiden","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.FullRecluster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DO.FullRecluster ‚Äî DO.FullRecluster","text":"Seurat Object new clustering named annotation_recluster","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.FullRecluster.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"DO.FullRecluster ‚Äî DO.FullRecluster","text":"Mariano Ruz Jurado","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.FullRecluster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DO.FullRecluster ‚Äî DO.FullRecluster","text":"","code":"if (FALSE) { # \\dontrun{   DO.FullRecluster(   Seu_object = Seurat ) } # }"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.Import.html","id":null,"dir":"Reference","previous_headings":"","what":"DO.Import ‚Äî DO.Import","title":"DO.Import ‚Äî DO.Import","text":"Imports processes single-cell RNA-seq data various formats (10x Genomics, CellBender, CSV), performs quality control (QC), filtering, normalization, variable gene selection, optionally detects doublets. Returns merged processed Seurat object ready downstream analysis.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.Import.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DO.Import ‚Äî DO.Import","text":"","code":"DO.Import(   pathways,   ids,   minCellGenes = 5,   FilterCells = T,   cut_mt = 0.05,   min_counts = NULL,   max_counts = NULL,   min_genes = NULL,   max_genes = NULL,   low_quantile = NULL,   high_quantile = NULL,   DeleteDoublets = T,   include_rbs = T,   ... )"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.Import.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DO.Import ‚Äî DO.Import","text":"pathways character vector paths directories files containing raw expression matrices. ids character vector sample identifiers, matching order pathways. minCellGenes Integer. Minimum number cells gene must expressed retained. Default 5. FilterCells Logical. TRUE, applies QC filtering cells based mitochondrial content, counts, feature thresholds. Default TRUE. cut_mt Numeric. Maximum allowed mitochondrial gene proportion per cell. Default 0.05. min_counts Numeric. Minimum UMI count threshold (optional, used low_quantile NULL). max_counts Numeric. Maximum UMI count threshold (optional, used high_quantile NULL). min_genes Numeric. Minimum number genes detected per cell retain. Optional. max_genes Numeric. Maximum number genes detected per cell retain. Optional. low_quantile Numeric. Quantile threshold (0‚Äì1) filter low UMI cells (used min_counts NULL). high_quantile Numeric. Quantile threshold (0‚Äì1) filter high UMI cells (used max_counts NULL). DeleteDoublets Logical. TRUE, doublets detected removed using scDblFinder. Default TRUE. include_rbs Logical. TRUE, calculates ribosomal gene content addition mitochondrial content. Default TRUE. ... Additional arguments passed RunPCA().","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.Import.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DO.Import ‚Äî DO.Import","text":"merged Seurat object containing samples, normalization, QC, scaling, PCA, optional doublet removal applied.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.Import.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"DO.Import ‚Äî DO.Import","text":"Mariano Ruz Jurado & David John","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.Import.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DO.Import ‚Äî DO.Import","text":"","code":"if (FALSE) { # \\dontrun{ merged_obj <- DO.Import(   pathways = c(\"path/to/sample1\", \"path/to/sample2\"),   ids = c(\"sample1\", \"sample2\"),   TenX = TRUE,   CellBender = FALSE,   minCellGenes = 5,   FilterCells = TRUE,   cut_mt = 0.05,   min_counts = 1000,   max_counts = 20000,   min_genes = 200,   max_genes = 6000,   DeleteDoublets = TRUE ) } # }"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.MultiDGE.html","id":null,"dir":"Reference","previous_headings":"","what":"DO.MultiDGE ‚Äî DO.MultiDGE","title":"DO.MultiDGE ‚Äî DO.MultiDGE","text":"Performs differential gene expression analysis using single-cell pseudo-bulk approaches across annotated cell types. single-cell method uses Seurat's FindMarkers, pseudo-bulk testing uses DESeq2 aggregated expression profiles. Outputs merged data frame DGE statistics methods per condition cell type.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.MultiDGE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DO.MultiDGE ‚Äî DO.MultiDGE","text":"","code":"DO.MultiDGE(   Seu_obj,   assay = \"RNA\",   method_sc = \"wilcox\",   group_by = \"condition\",   annotation_col = \"annotation\",   sample_col = \"orig.ident\",   ident_ctrl = \"ctrl\",   min_pct = 0,   logfc_threshold = 0,   only_pos = F,   min_cells_group = 3,   ... )"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.MultiDGE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DO.MultiDGE ‚Äî DO.MultiDGE","text":"assay Specified assay Seurat object, default \"RNA\" method_sc method use single cell DEG analysis, see FindMarkers Seurat options, default \"wilcox\" group_by Column meta data containing groups used testing, default \"condition\" annotation_col Column meta data containing information cell type annotation sample_col Column meta data containing information sample annotation, default \"orig.ident\" ident_ctrl Name condition group_by test ctrl, default \"ctrl\" min_pct test genes detected minimum fraction min.pct cells either two populations, default 0 logfc_threshold Limit testing genes show, average, least X-fold difference (log-scale) two groups cells, default 0. only_pos return positive markers, default FALSE min_cells_group Minimum number cells one groups, default 3 Seu_object seurat object","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.MultiDGE.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"DO.MultiDGE ‚Äî DO.MultiDGE","text":"Mariano Ruz Jurado","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.MultiDGE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DO.MultiDGE ‚Äî DO.MultiDGE","text":"","code":"if (FALSE) { # \\dontrun{ merged_dge_results <- DO.MultiDGE(   Seu_obj = your_seurat_object,   group_by = \"condition\",   annotation_col = \"celltype\",   ident_ctrl = \"healthy\" ) head(merged_dge_results) } # }"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.PyEnv.html","id":null,"dir":"Reference","previous_headings":"","what":"DO.PyEnv ‚Äî DO.PyEnv","title":"DO.PyEnv ‚Äî DO.PyEnv","text":"Sets connects conda Python environment use DOtools. environment path provided, create one ~/.venv/DOtools install required Python packages: scvi-tools, celltypist, scanpro.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.PyEnv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DO.PyEnv ‚Äî DO.PyEnv","text":"","code":"DO.PyEnv(conda_path = NULL)"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.PyEnv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DO.PyEnv ‚Äî DO.PyEnv","text":"conda_path character string specifying path existing new conda environment.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.PyEnv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DO.PyEnv ‚Äî DO.PyEnv","text":"","code":"if (FALSE) { # \\dontrun{ # Automatically create DOtools environment at ~/.venv/DOtools if it doesn't exist DO.PyEnv()  # Use an existing conda environment at a custom location DO.PyEnv(conda_path = \"~/miniconda3/envs/my_dotools_env\") } # }"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.SplitBarGSEA.html","id":null,"dir":"Reference","previous_headings":"","what":"DO Bar plot for GSEA df result ‚Äî DO.SplitBarGSEA","title":"DO Bar plot for GSEA df result ‚Äî DO.SplitBarGSEA","text":"function generates split barplot. plot top 10 Go terms shown, sorted based column ('col_split'). Two conditions shown time. One condition shown positive axis, negative one. condition shown positive set 'pos_col'. GO terms shown inside bars, term long, using 'cutoff', can control maximum number characters per line. Pre-filter dataframe contain significant Terms recommended","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.SplitBarGSEA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DO Bar plot for GSEA df result ‚Äî DO.SplitBarGSEA","text":"","code":"DO.SplitBarGSEA(   df_GSEA,   term_col,   col_split,   cond_col,   pos_cond,   cutoff = 40,   log10_transform = TRUE,   figsize = c(12, 8),   topN = 10,   colors_pairs = c(\"sandybrown\", \"royalblue\"),   alpha_colors = 0.3,   path = NULL,   spacing = 5,   txt_size = 12,   filename = \"SplitBar.svg\",   title = \"Top 10 GO Terms in each Condition: \",   showP = F,   celltype = \"all\" )"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.SplitBarGSEA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DO Bar plot for GSEA df result ‚Äî DO.SplitBarGSEA","text":"df_GSEA dataframe results gene set enrichment analysis term_col column dataframe contains terms col_split: column dataframe used sort split plot cond_col: column dataframe contains condition information pos_cond: condition shown positive side plot cutoff: maximum number characters per line log10_transform: col_split contains values 0 1, assume pvals apply -log10 transformation figsize: figure size topN: many terms shown path: path save plot filename: filename plot spacing: space add bars origin. percentage value, indicating bars start 5 % maximum X axis value. txt_size: size go terms text alpha_colors: alpha value colors bars colors_pairs: colors condition (1st color ‚Äì> negative axis; 2nd color ‚Äì> positive axis) title: title plot showP: False, axis return","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.SplitBarGSEA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DO Bar plot for GSEA df result ‚Äî DO.SplitBarGSEA","text":": None axis","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.SplitBarGSEA.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"DO Bar plot for GSEA df result ‚Äî DO.SplitBarGSEA","text":"Mariano Ruz Jurado","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.SplitBarGSEA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DO Bar plot for GSEA df result ‚Äî DO.SplitBarGSEA","text":"","code":"if (FALSE) { # \\dontrun{ #df with GSEA results e.g. Metascape results df_GSEA <- read.csv(\"path/to/GSEA_results.csv\")  #Please add a 'celltype' and 'condition' column head(df_GSEA) #Columns should include: \"Term\", \"Combined.Score\", \"conditon\", \"celltype\", etc.  #Run SplitBarGSEA visualization DO.SplitBarGSEA(df_GSEA = df_GSEA,                 term_col = \"Term\",                 col_split = \"Combined.Score\",                 cond_col = \"condition\",          # condition column (e.g., experimental group)                 pos_cond = \"Treatment\",                 cutoff = 40,                 # max term length before truncation                 log10_transform = TRUE,                 figsize = c(12, 8),                 topN = 10,                   # top N GO terms to show                 color_pairs = c(\"sandybrown\", \"royalblue\"),                 alpha_colors = 0.3,                 path = \"results/plots\",                 spacing = 5,                 txt_size = 12,                 filename = \"SplitBar.svg\",                 title = \"Top 10 GO Terms in each Condition: \",                 showP = FALSE,                 celltype = \"all\") } # }"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.Subset.html","id":null,"dir":"Reference","previous_headings":"","what":"DO.Subset ‚Äî DO.Subset","title":"DO.Subset ‚Äî DO.Subset","text":"Creates subset Seurat object based either categorical numeric thresholds metadata. Allows subsetting specifying ident column, group name, threshold criteria. Ideal extracting specific cell populations clusters based custom conditions. Returns new Seurat object containing subsetted cells come Seuratv5 subset issue Please aware right now, using function subset might treated Seuv5=False functions.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.Subset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DO.Subset ‚Äî DO.Subset","text":"","code":"DO.Subset(   Seu_object,   assay = \"RNA\",   ident,   ident_name = NULL,   ident_thresh = NULL )"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.Subset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DO.Subset ‚Äî DO.Subset","text":"Seu_object seurat object assay assay subset ident meta data column subset ident_name name group barcodes ident subset ident_thresh numeric thresholds character, e.g \">5\" c(\">5\", \"<200\"), subset barcodes ident ","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.Subset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DO.Subset ‚Äî DO.Subset","text":"subsetted Seurat object","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.Subset.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"DO.Subset ‚Äî DO.Subset","text":"Mariano Ruz Jurado","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.Subset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DO.Subset ‚Äî DO.Subset","text":"","code":"if (FALSE) { # \\dontrun{   DO.Subset(   Seu_object = Seurat,   ident=\"condition\",   ident_name=\"CTRL\" )  DO.Subset(   Seu_object = Seurat,   ident=\"nFeature_RNA\",   ident_thresh=c(\">5\", \"<200\") ) } # }"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.TransferLabel.html","id":null,"dir":"Reference","previous_headings":"","what":"DO.TransferLabel ‚Äî DO.TransferLabel","title":"DO.TransferLabel ‚Äî DO.TransferLabel","text":"Transfers cell-type annotations re-annotated subset Seurat object back full Seurat object. useful clusters refined re-labeled subset need reflected original object.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.TransferLabel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DO.TransferLabel ‚Äî DO.TransferLabel","text":"","code":"DO.TransferLabel(Seu_obj, Subset_obj, annotation_column, subset_annotation)"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.TransferLabel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DO.TransferLabel ‚Äî DO.TransferLabel","text":"Subset_obj subsetted Seurat object re-annotated clusters annotation_column column name meta.data annotation subset_annotation column name meta.data annotation subsetted object Seu_object Seurat object annotation meta.data","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.TransferLabel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DO.TransferLabel ‚Äî DO.TransferLabel","text":"Seurat Object transfered labels","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.TransferLabel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DO.TransferLabel ‚Äî DO.TransferLabel","text":"","code":"if (FALSE) { # \\dontrun{  Seu_obj <- DO.TransferLabel(Seu_obj,                             Subset_obj,                             annotation_column=\"annotation\",                             subset_annotation=\"annotation\"                            ) } # }"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.UMAP.html","id":null,"dir":"Reference","previous_headings":"","what":"DO.UMAP ‚Äî DO.UMAP","title":"DO.UMAP ‚Äî DO.UMAP","text":"Creates polished UMAP plot using Seurat's DimPlot FeaturePlot functions. allows customization colors, labels, plot elements better visualization. function handles cluster-based visualizations gene-based visualizations UMAP plot. Ideal refining UMAP outputs added flexibility enhanced presentation.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.UMAP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DO.UMAP ‚Äî DO.UMAP","text":"","code":"DO.UMAP(   Seu_object,   FeaturePlot = F,   features = NULL,   group.by = \"seurat_clusters\",   umap_colors = NULL,   text_size = 14,   label = T,   order = T,   plot.title = T,   legend.position = \"none\",   ... )"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.UMAP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DO.UMAP ‚Äî DO.UMAP","text":"Seu_object seurat object FeaturePlot going Dimplot FeaturePlot? features features Featureplot group.grouping plot DImplot defines featureplot labels ... arguments passed DimPlot FeaturePlot function Seurat","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.UMAP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DO.UMAP ‚Äî DO.UMAP","text":"Plot Refined colors axes","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.UMAP.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"DO.UMAP ‚Äî DO.UMAP","text":"Mariano Ruz Jurado","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.UMAP.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DO.UMAP ‚Äî DO.UMAP","text":"","code":"if (FALSE) { # \\dontrun{   DO.UMAP(   Seu_object = Seurat,   group.by=\"seurat_clusters\" )  DO.UMAP(   Seu_object = Seurat,   FeaturePlot=T,   features=c(\"CDH5\",\"TTN\") ) } # }"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.VlnPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Violin Graph with wilcox test on single cell level ‚Äî DO.VlnPlot","title":"Violin Graph with wilcox test on single cell level ‚Äî DO.VlnPlot","text":"Creates violin plot compare gene expression across different conditions groups within Seurat object. incorporates Wilcoxon rank-sum tests evaluate statistical differences conditions. plot can customized options data transformation, jitter display, significance annotations. function also supports multiple conditions allows visualization statistical results wilcoxon test.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.VlnPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Violin Graph with wilcox test on single cell level ‚Äî DO.VlnPlot","text":"","code":"DO.VlnPlot(   Seu_object,   SeuV5 = T,   Feature,   ListTest = NULL,   returnValues = FALSE,   ctrl.condition = NULL,   group.by = \"condition\",   group.by.2 = NULL,   geom_jitter_args = c(0.2, 0.25, 0.25),   geom_jitter_args_group_by2 = c(0.1, 0.1, 1),   vector_colors = c(\"#1f77b4\", \"#ea7e1eff\", \"royalblue4\", \"tomato2\", \"darkgoldenrod\",     \"palegreen4\", \"maroon\", \"thistle3\"),   wilcox_test = T,   stat_pos_mod = 1.15,   hjust.wilcox = 0.8,   vjust.wilcox = 2,   size.wilcox = 3.33,   step_mod = 0,   hjust.wilcox.2 = 0.5,   vjust.wilcox.2 = 0,   sign_bar = 0.8 )"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.VlnPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Violin Graph with wilcox test on single cell level ‚Äî DO.VlnPlot","text":"Seu_object combined Seurat object SeuV5 Seuratv5 object? (TRUE FALSE) Feature name feature ListTest List conditions wilcox performed, NULL always CTRL group everything returnValues return df.melt.sum data frame containing means SEM set group ctrl.condition set ctrl condition, relevant running empty comparison List group.select seurat Seu_object slot conditions can found, default conditon group..2 relevant multiple group testing, e.g. cell type test two conditions provided geom_jitter_args vector dots visualisation vlnplot: size, width, alpha value wilcox_test Bolean TRUE bonferoni wilcoxon test carried ctrl.condition rest stat_pos_mod value modifiyng statistics height vector_colours specify minimum number colours entries condition, default 2","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.VlnPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Violin Graph with wilcox test on single cell level ‚Äî DO.VlnPlot","text":"ggplot list used data frames","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.VlnPlot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Violin Graph with wilcox test on single cell level ‚Äî DO.VlnPlot","text":"Mariano Ruz Jurado","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.VlnPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Violin Graph with wilcox test on single cell level ‚Äî DO.VlnPlot","text":"","code":"if (FALSE) { # \\dontrun{  (optional) ListTest <- list() ListTest[[1]] <- c(\"CTRL\", \"CONDITION\")  DO.VlnPlot(   Seu_object = Seurat,   SeuV5=T,   Feature = \"CDH5\",   ListTest = ListTest,   ctrl.condition = \"CTRL\",   group.by=\"condition\" ) } # }"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.enrichR.html","id":null,"dir":"Reference","previous_headings":"","what":"DO.enrichR ‚Äî DO.enrichR","title":"DO.enrichR ‚Äî DO.enrichR","text":"Performs Gene Ontology enrichment analysis differentially expressed genes using EnrichR API. Separately analyzes upregulated downregulated genes returns results.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.enrichR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DO.enrichR ‚Äî DO.enrichR","text":"","code":"DO.enrichR(   df_DGE,   gene_column,   pval_column,   log2fc_column,   pval_cutoff = 0.05,   log2fc_cutoff = 0.25,   path = NULL,   filename = \"\",   species = \"Human\",   go_catgs = c(\"GO_Molecular_Function_2023\", \"GO_Cellular_Component_2023\",     \"GO_Biological_Process_2023\") )"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.enrichR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DO.enrichR ‚Äî DO.enrichR","text":"df_DGE data.frame containing differential gene expression results. gene_column column name df gene symbols. pval_column column name df p-values. log2fc_column column name df log2 fold changes. pval_cutoff adjusted p-value threshold significance (default = 0.05). log2fc_cutoff log2 fold change threshold /regulation (default = 0.25). path folder path output Excel file saved. subfolder \"GSA_Tables\" created. filename suffix used Excel filename (e.g., \"GSA_CellType_MyAnalysis.xlsx\"). species species name enrichment analysis. Options include \"Human\", \"Mouse\", \"Yeast\", etc. (default = \"Mouse\"). go_catgs GO databases use. Defaults c(\"GO_Molecular_Function_2023\", \"GO_Cellular_Component_2023\", \"GO_Biological_Process_2023\").","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.enrichR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DO.enrichR ‚Äî DO.enrichR","text":"data.frame GO enrichment results path NULL, otherwise writes Excel file.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.enrichR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DO.enrichR ‚Äî DO.enrichR","text":"","code":"if (FALSE) { # \\dontrun{ #GO analysis on differential expression results: results <- go_analysis(df_DGE = deg_results,                        gene_key = \"gene\",                        pval_key = \"adj_pval\",                        log2fc_key = \"log2FC\",                        species = \"Human\")  #Or save the results to a file: go_analysis(df_DGE = deg_results,             gene_key = \"gene\",             pval_key = \"p_val_adj\",             log2fc_key = \"log2FC\",             path = \"results/\",             filename = \"experiment.xlsx\",             species = \"Mouse\") } # }"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.scVI.html","id":null,"dir":"Reference","previous_headings":"","what":"DO.scVI ‚Äî DO.scVI","title":"DO.scVI ‚Äî DO.scVI","text":"function run scVI Integration scVI python package. includes parameters actual python package runs using internal python script. usage gpu incorporated highly recommended.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.scVI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DO.scVI ‚Äî DO.scVI","text":"","code":"DO.scVI(   Seu_object,   batch_key,   layer_counts = \"counts\",   layer_logcounts = \"logcounts\",   categorical_covariates = NULL,   continuos_covariates = NULL,   n_hidden = 128,   n_latent = 30,   n_layers = 3,   dispersion = \"gene-batch\",   gene_likelihood = \"zinb\",   get_model = FALSE,   ... )"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.scVI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DO.scVI ‚Äî DO.scVI","text":"Seu_object Seurat object annotation meta.data ... additional arguments scvi.model.SCVI. batch_key: meta data column batch information. layer_counts: layer counts. Raw counts required. layer_logcounts: layer log-counts. Log-counts required calculation HVG. categorical_covariates: meta data column names categorical covariates scVI inference. continuos_covariates: meta data  column names continuous covariates scVI inference. n_hidden: number hidden layers. n_latent: dimensions latent space. n_layers: number layers. dispersion: dispersion mode scVI. gene_likelihood: gene likelihood. get_model: return trained model.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.scVI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DO.scVI ‚Äî DO.scVI","text":"Seurat Object dimensionality reduction scVI","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DO.scVI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DO.scVI ‚Äî DO.scVI","text":"","code":"if (FALSE) { # \\dontrun{ # Run scVI using the 'orig.ident' column as the batch key Seu_object <- DO.scVI(Seu_object, batch_key = \"orig.ident\") } # }"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DOtools.html","id":null,"dir":"Reference","previous_headings":"","what":"DOtools: A Toolkit for scRNA Data Analysis ‚Äî DOtools","title":"DOtools: A Toolkit for scRNA Data Analysis ‚Äî DOtools","text":"`DOtools` package provides set functions advanced data processing, visualization, statistical analysis Seurat objects. includes functions cell-type prediction, reclustering, creating polished UMAP plots, subsetting Seurat objects, various statistical analyses like Wilcoxon tests SEM graphs.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DOtools.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"DOtools: A Toolkit for scRNA Data Analysis ‚Äî DOtools","text":"package includes following functions: .BoxPlot: function creating box plots Wilcoxon test results. .CellTypist: function running CellTypist Seurat objects predict cell types. .DietSeurat: function diet-based analysis Seurat objects. .Dotplot: function creating dot plots visualizing gene expression. .FullRecluster: function fine-grained reclustering Seurat objects. .BarplotClustert: function generating mean SEM graphs cluster-based analysis t-tests. .BarplotWilcox: function generating mean SEM graphs Wilcoxon test results. .Subset: function subsetting Seurat objects based metadata. .UMAP: function creating polished UMAP plots using either DimPlot FeaturePlot. .VlnPlot: function generating violin plots Wilcoxon test results. .CellComposition: function visualizing statistically analyzing cell-type composition changes across conditions using Scanpro Python package, support bootstrapping, proportion plots, customizable output. .Import: function building merged Seurat object 10x software output, directly provided tables. .CellBender: function running CellBender virtual conda env provided raw count h5 files. .SplitBarGSEA: function viusalizing GSEA result provided df e.g. metascape .scVI: function running scVI Integration implemented scvi-tools. .TransferLabel: function transfering annotation subseted object original seurat object. .PyEnv: function creating conda envrionment holding python packages needed functions. .Correlation: function creating correlation plot provided samples category specified. .MultiDGE: function calculating DEGs single cell speudo bulk level. dot-.BarcodeRanks: function estimating number expected cells droplets. dot-QC.Vlnplot: function estimating number expected cells droplets.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/DOtools.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"DOtools: A Toolkit for scRNA Data Analysis ‚Äî DOtools","text":"Mariano Ruz Jurado, David Rodriguez Morales","code":""},{"path":[]},{"path":"https://marianoruzjurado.github.io/DOtools/reference/dot-DO.BarcodeRanks.html","id":null,"dir":"Reference","previous_headings":"","what":"DO.BarcodeRanks ‚Äî .DO.BarcodeRanks","title":"DO.BarcodeRanks ‚Äî .DO.BarcodeRanks","text":"Given raw count matrix (e.g. CellRanger HDF5 file), estimate number expected cells droplets using knee inflection points barcodeRanks.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/dot-DO.BarcodeRanks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DO.BarcodeRanks ‚Äî .DO.BarcodeRanks","text":"","code":".DO.BarcodeRanks(SCE_obj)"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/dot-DO.BarcodeRanks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DO.BarcodeRanks ‚Äî .DO.BarcodeRanks","text":"SCE_object Single cell experiment object.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/dot-DO.BarcodeRanks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DO.BarcodeRanks ‚Äî .DO.BarcodeRanks","text":"named numeric vector: c(xpc_cells = ..., total_cells = ...)","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/dot-DO.BarcodeRanks.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"DO.BarcodeRanks ‚Äî .DO.BarcodeRanks","text":"Mariano Ruz Jurado","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/dot-QC_Vlnplot.html","id":null,"dir":"Reference","previous_headings":"","what":".QC_Vlnplot ‚Äî .QC_Vlnplot","title":".QC_Vlnplot ‚Äî .QC_Vlnplot","text":"Generates violin plots common quality control (QC) metrics single-cell RNA-seq data Seurat object. function displays three violin plots number detected genes per cell (nFeature_RNA), total UMI counts per cell (nCount_RNA), mitochondrial gene content percentage (pt_mito). Useful visual inspection QC thresholds outliers.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/dot-QC_Vlnplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":".QC_Vlnplot ‚Äî .QC_Vlnplot","text":"","code":".QC_Vlnplot(   Seu_obj,   id,   layer = \"counts\",   features = c(\"nFeature_RNA\", \"nCount_RNA\", \"pt_mito\") )"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/dot-QC_Vlnplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":".QC_Vlnplot ‚Äî .QC_Vlnplot","text":"Seu_obj Seurat object containing single-cell RNA-seq data. layer character string specifying assay layer use (default \"counts\"). features character vector length 3 indicating feature names plot. Default c(\"nFeature_RNA\", \"nCount_RNA\", \"pt_mito\").","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/dot-QC_Vlnplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":".QC_Vlnplot ‚Äî .QC_Vlnplot","text":"ggplot object arranged single row showing violin plots specified features overlaid boxplots.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/dot-QC_Vlnplot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":".QC_Vlnplot ‚Äî .QC_Vlnplot","text":"Mariano Ruz Jurado","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/dot-annoSegment.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotation modifier for plots ‚Äî .annoSegment","title":"Annotation modifier for plots ‚Äî .annoSegment","text":"Used segment plot annotations","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/dot-annoSegment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotation modifier for plots ‚Äî .annoSegment","text":"","code":".annoSegment(   object = NULL,   relSideDist = 0.1,   aesGroup = FALSE,   aesGroName = NULL,   annoPos = \"top\",   xPosition = NULL,   yPosition = NULL,   pCol = NULL,   segWidth = 1,   lty = NULL,   lwd = 10,   alpha = NULL,   lineend = \"square\",   annoManual = FALSE,   mArrow = NULL,   addBranch = FALSE,   bArrow = NULL,   branDirection = 1,   branRelSegLen = 0.3,   addText = FALSE,   textCol = NULL,   textSize = NULL,   fontfamily = NULL,   fontface = NULL,   textLabel = NULL,   textRot = 0,   textHVjust = 0.2,   hjust = NULL,   vjust = NULL,   myFacetGrou = NULL,   aes_x = NULL,   aes_y = NULL )"},{"path":"https://marianoruzjurado.github.io/DOtools/reference/dot-annoSegment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotation modifier for plots ‚Äî .annoSegment","text":"object ggplot list. Default(NULL). relSideDist relative distance ratio y axis range. Default(0.1). aesGroup Whether use group column add rect annotation. Default(\"FALSE\"). aesGroName mapping column name. Default(NULL). annoPos position annotation added. Default(\"top\"). xPosition x axis coordinate segment. Default(NULL). yPosition y axis coordinate segment. Default(NULL). pCol segment colors. Default(NULL). segWidth relative segment width. Default(1). lty segment line type. Default(NULL). lwd segment line width. Default(NULL). alpha segment color alpha. Default(NULL). lineend segment line end. Default(\"square\"). annoManual Whether annotate supplying x y coordinates. Default(FALSE). mArrow Whether add segment arrow. Default(FALSE). addBranch Whether add segment branch. Default(FALSE). bArrow Whether add branch arrow. Default(FALSE). branDirection branch direction. Default(1). branRelSegLen branch relative length segment. Default(0.3). addText Whether add text label segment. Default(FALSE). textCol text colors. Default(NULL). textSize text size. Default(NULL). fontfamily text fontfamily. Default(NULL). fontface text fontface. Default(NULL). textLabel text textLabel. Default(NULL). textRot text angle. Default(NULL). textHVjust text distance segment. Default(0.2). hjust text hjust. Default(NULL). vjust text vjust. Default(NULL). myFacetGrou facet group name added annotation object faceted object. Default(NULL). aes_x = NULL supply plot X mapping name annotate facetd plot. Default(NULL). aes_y = NULL supply plot Y mapping name annotate facetd plot. Default(NULL).","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/dot-annoSegment.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Annotation modifier for plots ‚Äî .annoSegment","text":"Mariano Ruz Jurado (edited : Jun Zhang)","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/dot-example_10x.html","id":null,"dir":"Reference","previous_headings":"","what":"Download example dataset 10x ‚Äî .example_10x","title":"Download example dataset 10x ‚Äî .example_10x","text":"Download example dataset 10x","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/reference/dot-example_10x.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download example dataset 10x ‚Äî .example_10x","text":"","code":".example_10x(base_dir = tempfile(\"dotools_datasets_\"))"},{"path":"https://marianoruzjurado.github.io/DOtools/news/index.html","id":"dotools-040","dir":"Changelog","previous_headings":"","what":"DOtools 0.4.0","title":"DOtools 0.4.0","text":"notable changes project documented file.","code":""},{"path":[]},{"path":"https://marianoruzjurado.github.io/DOtools/news/index.html","id":"added-0-4-0","dir":"Changelog","previous_headings":"[0.4.0] - 2025-06-09","what":"Added","title":"DOtools 0.4.0","text":".SplitBarGSEA: Bar plot function GSEA results (e.g., Metascape). .scVI: Wrapper function run scVI integration Seurat object.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/news/index.html","id":"changed-0-4-0","dir":"Changelog","previous_headings":"[0.4.0] - 2025-06-09","what":"Changed","title":"DOtools 0.4.0","text":"Minor adjustments across various functions improved consistency.","code":""},{"path":[]},{"path":"https://marianoruzjurado.github.io/DOtools/news/index.html","id":"added-0-4-0-1","dir":"Changelog","previous_headings":"[0.3.0] - 2025-05-28","what":"Added","title":"DOtools 0.4.0","text":".Import: Simplifies Seurat object creation. .CellBender: Enables running CellBender aligner-generated HDF5 files.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/news/index.html","id":"changed-0-4-0-1","dir":"Changelog","previous_headings":"[0.3.0] - 2025-05-28","what":"Changed","title":"DOtools 0.4.0","text":"Minor adjustments internal improvements.","code":""},{"path":[]},{"path":"https://marianoruzjurado.github.io/DOtools/news/index.html","id":"added-0-4-0-2","dir":"Changelog","previous_headings":"[0.2.0] - 2025-05-26","what":"Added","title":"DOtools 0.4.0","text":".CellBender: Functionality run CellBender (initial version). .BarcodeRanks: New function barcode rank visualization.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/news/index.html","id":"changed-0-4-0-2","dir":"Changelog","previous_headings":"[0.2.0] - 2025-05-26","what":"Changed","title":"DOtools 0.4.0","text":"Minor adjustments stability usability.","code":""},{"path":[]},{"path":"https://marianoruzjurado.github.io/DOtools/news/index.html","id":"changed-0-4-0-3","dir":"Changelog","previous_headings":"[0.1.1] - 2025-05-26","what":"Changed","title":"DOtools 0.4.0","text":"Minor adjustments function behavior formatting.","code":""},{"path":[]},{"path":"https://marianoruzjurado.github.io/DOtools/news/index.html","id":"added-0-4-0-3","dir":"Changelog","previous_headings":"[0.1.0] - 2025-04-09","what":"Added","title":"DOtools 0.4.0","text":".CellCompositions: Integrates scanpro tool detect changes cell composition. New connected stacked bar plot scanpro output highlighting significant composition changes. .Dotplot: Added pseudobulk option y-axis.","code":""},{"path":[]},{"path":"https://marianoruzjurado.github.io/DOtools/news/index.html","id":"fixed-0-4-0","dir":"Changelog","previous_headings":"[0.0.2] - 2025-04-03","what":"Fixed","title":"DOtools 0.4.0","text":"Bug .Box.plot: Meta.data features specified. Bug .Vln.plot: Meta.data features specified.","code":""},{"path":"https://marianoruzjurado.github.io/DOtools/news/index.html","id":"added-0-4-0-4","dir":"Changelog","previous_headings":"[0.0.2] - 2025-04-03","what":"Added","title":"DOtools 0.4.0","text":"New argument .Box.plot: Enables user-defined x-axis sorting.","code":""},{"path":[]},{"path":"https://marianoruzjurado.github.io/DOtools/news/index.html","id":"added-0-4-0-5","dir":"Changelog","previous_headings":"[0.0.1] - 2025-03-27","what":"Added","title":"DOtools 0.4.0","text":"Initial commit: core structure foundational functions.","code":""}]
